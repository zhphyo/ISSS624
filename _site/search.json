[
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "What are the driving forces behind urban dwellers to weak up early in morning to commute from their home locations to their work places? What are the impact of removing a public bus service on the commuters reside along the corridor of the bus route? These and many other questions related to urban mobility are challenges faced by transport operators and urban managers.\nTo provide answer to this question, traditionally, commuters survey will be used. However, commuters survey is a very costly, time-consuming and laborous, not to mention that the survey data tend to take a long time to clean and analyse. As a result, it is not unusual, by the time the survey report was ready, most of the information already out-of-date!\nAs city-wide urban infrastructures such as public buses, mass rapid transits, public utilities and roads become digital, the data sets obtained can be used as a framework for tracking movement patterns through space and time. This is particularly true with the recent trend of massive deployment of pervasive computing technologies such as GPS on the vehicles and SMART cards used by public transport commuters.\nUnfortunately, this explosive growth of geospatially-referenced data has far outpaced the planner’s ability to utilize and transform the data into insightful information thus creating an adverse impact on the return on the investment made to collect and manage this data."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#installing-and-loading-the-r-packages",
    "href": "Take-home_Ex2/Take-home_Ex2.html#installing-and-loading-the-r-packages",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Installing and Loading the R Packages",
    "text": "Installing and Loading the R Packages\nThe code chunk below install and load tmap, sf, sp, DT, stplanr, performance, reshape2, ggpubr, units, tidyverse and knitr packages into R environment\n\npacman::p_load(tmap, sf, sp, DT, stplanr,\n               performance, reshape2,\n               ggpubr, units, tidyverse, knitr)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#importing-origin-destination-bus-stops-data-set",
    "href": "Take-home_Ex2/Take-home_Ex2.html#importing-origin-destination-bus-stops-data-set",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Importing Origin Destination Bus Stops Data Set",
    "text": "Importing Origin Destination Bus Stops Data Set\nImport origin_destination_bus_202310.csv into R by using read_csv() of readr package. The output is R data frame class, pv.\n\npv &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nUse head() function to print first few rows of the data frame to quickly inspect the dataset’s structure and content.\n\nhead(pv)\n\n# A tibble: 6 × 7\n  YEAR_MONTH DAY_TYPE   TIME_PER_HOUR PT_TYPE ORIGIN_PT_CODE DESTINATION_PT_CODE\n  &lt;chr&gt;      &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;              \n1 2023-10    WEEKENDS/…            16 BUS     04168          10051              \n2 2023-10    WEEKDAY               16 BUS     04168          10051              \n3 2023-10    WEEKENDS/…            14 BUS     80119          90079              \n4 2023-10    WEEKDAY               14 BUS     80119          90079              \n5 2023-10    WEEKDAY               17 BUS     44069          17229              \n6 2023-10    WEEKENDS/…            17 BUS     20281          20141              \n# ℹ 1 more variable: TOTAL_TRIPS &lt;dbl&gt;\n\n\nA quick check of pv tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\npv$ORIGIN_PT_CODE &lt;- as.factor(pv$ORIGIN_PT_CODE) \npv$DESTINATION_PT_CODE &lt;- as.factor(pv$DESTINATION_PT_CODE)\n\nFor this study, we will extract commuting flows on weekday and between 6 and 9 o’clock.\n\npv6_9 &lt;- pv %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_PT_CODE'. You can override using\nthe `.groups` argument.\n\n\nTable below shows the content of pv6_9\n\ndatatable(pv6_9)\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\n\nSave the output into an rds file format.\n\nwrite_rds(pv6_9, \"data/rds/pv6_9.rds\")\n\nThe code chunk below will be used to import the save pv6_9.rds into R environment.\n\npv6_9 &lt;- read_rds(\"data/rds/pv6_9.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#import-geospatial-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#import-geospatial-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Import Geospatial Data",
    "text": "Import Geospatial Data\nFor this exercise, we will be using the following geospatial data\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nbusstop\n\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1       22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2       32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3       44331        B01              BLK 239  POINT (21045.1 40242.08)\n4       96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5       11561        B05              BLK 166 POINT (24568.74 30391.85)\n6       66191        B03         AFT CORFE PL POINT (30951.58 38079.61)\n7       23389       B02A              PEC LTD   POINT (12476.9 32211.6)\n8       54411        B02              BLK 527 POINT (30329.45 39373.92)\n9       28531        B09              BLK 536 POINT (14993.31 36905.61)\n10      96139        B01              BLK 148  POINT (41642.81 36513.9)\n\n\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data-wrangling",
    "href": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data-wrangling",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nCreate Hexagon Layer\nCreate hexagon layer using busstop.\n\nhex_Grid &lt;- st_make_grid(busstop, c(750), what = \"polygons\", square = FALSE)\n\n# To sf and add grid ID\ngrid_sf = st_sf(hex_Grid) %&gt;%\n  # add grid ID\n  mutate(grid_id = sprintf(\"G%05d\", row_number()))\n\n# count number of points in each grid\n# https://gis.stackexchange.com/questions/323698/counting-points-in-polygons-with-sf-package-of-r\ngrid_sf$n_busstops = lengths(st_intersects(grid_sf, busstop))\n\n# remove grid without value of 0 (i.e. no points in side that grid)\nbusstop_grid = filter(grid_sf, n_busstops &gt; 0)\n\n\n\nCombine Busstop & mpsz\nCode chunk below populates busstop_grid sf data frame into busstop sf data frame.\n\nbusstop_hex &lt;- st_intersection(busstop, busstop_grid) %&gt;%\n  select(BUS_STOP_N, grid_id) %&gt;%\n  st_drop_geometry()\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\ndatatable(busstop_hex)\n\n\n\n\n\n\n\n\nCombine pv6_9 with busstop_hex data\nWe are going to append the hexagon from busstop_hex data frame onto odbus6_9 data frame.\n\npv_data &lt;- left_join(pv6_9 , busstop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nWarning in left_join(pv6_9, busstop_hex, by = c(ORIGIN_PT_CODE = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 25632 of `x` matches multiple rows in `y`.\nℹ Row 3057 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCheck for duplicating records.\n\nduplicate &lt;- pv_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDuplicated records are found. The code chunk below will be used to retain the unique records.\n\npv_data &lt;- unique(pv_data)\n\nConfirm if the duplicating records issue has been addressed fully.\n\nduplicate &lt;- pv_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nprint(nrow(duplicate))\n\n[1] 0\n\n\nwe will update pv_data data frame with the hexagon.\n\npv_data &lt;- left_join(pv_data , busstop_hex,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nWarning in left_join(pv_data, busstop_hex, by = c(DESTIN_BS = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 167 of `x` matches multiple rows in `y`.\nℹ Row 3146 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCheck for duplicating records.\n\nduplicate &lt;- pv_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDuplicated records are found. The code chunk below will be used to retain the unique records.\n\npv_data &lt;- unique(pv_data)\n\nConfirm if the duplicating records issue has been addressed fully.\n\nduplicate &lt;- pv_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nprint(nrow(duplicate))\n\n[1] 0\n\n\n\npv_data &lt;- pv_data %&gt;%\n  rename(DESTIN_SZ = grid_id) %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_SZ'. You can override using the\n`.groups` argument.\n\n\nSave the output into an rds file.\n\nwrite_rds(pv_data, \"data/rds/pv_data.rds\")\n\n\npv_data &lt;- read_rds(\"data/rds/pv_data.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#removing-intra-zonal-flows",
    "href": "Take-home_Ex2/Take-home_Ex2.html#removing-intra-zonal-flows",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Removing intra-zonal flows",
    "text": "Removing intra-zonal flows\nWe will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows.\n\npv_data1 &lt;- pv_data[pv_data$ORIGIN_SZ!=pv_data$DESTIN_SZ,]"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#creating-desire-lines",
    "href": "Take-home_Ex2/Take-home_Ex2.html#creating-desire-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Creating desire lines",
    "text": "Creating desire lines\nIn this code chunk below, od2line() of stplanr package is used to create the desire lines.\n\nflowLine &lt;- od2line(flow = pv_data1, \n                    zones = busstop_grid,\n                    zone_code = \"grid_id\")\n\nCreating centroids representing desire line start and end points."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-desire-lines",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-desire-lines",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Visualising the desire lines",
    "text": "Visualising the desire lines\nTo visualise the resulting desire lines, the code chunk below is used.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_borders()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\nLegend labels were too wide. Therefore, legend.text.size has been set to 0.49. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-desire-lines-morning-peak-5000",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-desire-lines-morning-peak-5000",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Visualising the desire lines (Morning Peak >= 5000)",
    "text": "Visualising the desire lines (Morning Peak &gt;= 5000)\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows, for example flow greater than or equal to 5000 as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nLegend labels were too wide. Therefore, legend.text.size has been set to 0.49. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#attractiveness-variable",
    "href": "Take-home_Ex2/Take-home_Ex2.html#attractiveness-variable",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Attractiveness variable",
    "text": "Attractiveness variable\nBusiness data - Passengers commuting to their workplaces.\nF&B data - Passengers visiting food and beverage outlets, either for dining or working.\nFinServ data - People visiting the financial centers, either to get the services or work within the Financial sector."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#propulsive-variable",
    "href": "Take-home_Ex2/Take-home_Ex2.html#propulsive-variable",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Propulsive variable",
    "text": "Propulsive variable\nBus Stop - Passengers started their journey or align at the bus stop to transfer to another bus in order to reach their final destination\nTrain Exit - Passengers align at the train station and transfer to bus to reach their final destination\nHDB - Residents in the area are the potential to become bus passengers"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#business-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#business-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Business data",
    "text": "Business data\n\nImporting business data\n\nbusiness_sf &lt;- st_read(dsn = \"data/geospatial\",                                               layer = \"Business\")\n\nReading layer `Business' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\nbusiness_sf &lt;- business_sf %&gt;%         \n  st_transform(crs = 3414)\n\n\n\nPerforming point-in-polygon count process\nWe will count the number of schools located inside the hexagon grid.\n\nbusstop_grid$`BIZ_COUNT`&lt;- lengths(         \n  st_intersects(busstop_grid, business_sf))\n\n\nsummary(busstop_grid$BIZ_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   1.000   7.273   7.000  97.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(business_sf) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#fb-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#fb-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "F&B data",
    "text": "F&B data\n\nImporting F&B data\n\nfnb_sf &lt;- st_read(dsn = \"data/geospatial\",                                          layer = \"F&B\")\n\nReading layer `F&B' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\n\nfnb_sf &lt;- fnb_sf %&gt;%            \n  st_transform(crs = 3414)\n\n\n\nPerforming point-in-polygon count process\nWe will count the number of F&B located inside the hexagon grid.\n\nbusstop_grid$`FnB_COUNT`&lt;- lengths(            \n  st_intersects(busstop_grid, fnb_sf))\n\n\nsummary(busstop_grid$FnB_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   2.204   1.000 133.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(fnb_sf) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#finserv-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#finserv-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "FinServ data",
    "text": "FinServ data\n\nImporting FinServ data\n\nfinServ_sf &lt;- st_read(dsn = \"data/geospatial\",                                              layer = \"FinServ\")\n\nReading layer `FinServ' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\n\nfinServ_sf &lt;- finServ_sf %&gt;%            \n  st_transform(crs = 3414)\n\n\n\nPerforming point-in-polygon count process\nWe will count the number of retails located inside the hexagon grid.\n\nbusstop_grid$`FINSERV_COUNT`&lt;- lengths(            \n  st_intersects(busstop_grid, finServ_sf))\n\n\nsummary(busstop_grid$FINSERV_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   1.000   3.922   4.000 139.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(finServ_sf) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#busstop-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#busstop-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Busstop data",
    "text": "Busstop data\n\nImporting Busstop data\nbusstop data imported in previous section.\n\nbusstop\n\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1       22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2       32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3       44331        B01              BLK 239  POINT (21045.1 40242.08)\n4       96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5       11561        B05              BLK 166 POINT (24568.74 30391.85)\n6       66191        B03         AFT CORFE PL POINT (30951.58 38079.61)\n7       23389       B02A              PEC LTD   POINT (12476.9 32211.6)\n8       54411        B02              BLK 527 POINT (30329.45 39373.92)\n9       28531        B09              BLK 536 POINT (14993.31 36905.61)\n10      96139        B01              BLK 148  POINT (41642.81 36513.9)\n\n\n\n\nPerforming point-in-polygon count process\n\nbusstop_grid$`BUSSTOP_COUNT`&lt;- lengths(            \n  st_intersects(busstop_grid, busstop))\n\n\nsummary(busstop_grid$BUSSTOP_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   3.000   6.000   6.188   9.000  19.000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(busstop) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#train-station-exit-layer-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#train-station-exit-layer-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Train Station Exit Layer data",
    "text": "Train Station Exit Layer data\n\nImporting Train Station Exit Layer data\n\ntexit_sf &lt;- st_read(dsn = \"data/geospatial\",                                              layer = \"Train_Station_Exit_Layer\")\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\ntexit_sf &lt;- texit_sf %&gt;%            \n  st_transform(crs = 3414)\n\n\n\nPerforming point-in-polygon count process\nWe will count the number of retails located inside the hexagon grid.\n\nbusstop_grid$`TEXIT_COUNT`&lt;- lengths(            \n  st_intersects(busstop_grid, texit_sf))\n\n\nsummary(busstop_grid$TEXIT_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.6715  0.0000 13.0000 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(texit_sf) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#hdb-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#hdb-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "HDB data",
    "text": "HDB data\n\nImport HDB Data\n\nhdb &lt;- read.csv(\"data/aspatial/hdb.csv\")\n\nTidying the data by selecting only the necessary fields as well as rename some fields.\n\nhdb &lt;- hdb %&gt;%\n  rename(latitude = \"lat\",\n        longitude = \"lng\") %&gt;%\n  select(postal, addr, latitude, longitude)\n\n\n\nConverting an aspatial data into sf tibble data.frame\nConvert hdb tibble data.frame data into a simple feature tibble data.frame called hdb_sf by using values in latitude and longitude fields.\nRefer to st_as_sf() of sf package.\n\nhdb_sf &lt;- st_as_sf(hdb, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\nPerforming point-in-polygon count process\nWe will count the number of hdb located inside the hexagon grid.\n\nbusstop_grid$`HDB_COUNT`&lt;- lengths(            \n  st_intersects(busstop_grid, hdb_sf))\n\n\nsummary(busstop_grid$HDB_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   14.85   27.00  103.00 \n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(busstop_grid) +\n  tm_polygons() +\ntm_shape(hdb_sf) +\n  tm_dots(col = \"blue\", size = 0.001) \n\nWarning: The shape mpsz is invalid. See sf::st_is_valid"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#join-propulsive-and-attractiveness-variable-with-pv_data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#join-propulsive-and-attractiveness-variable-with-pv_data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Join propulsive and attractiveness variable with pv_data",
    "text": "Join propulsive and attractiveness variable with pv_data\nTidy up the busstop_grid\n\nbusstop_grid_tidy &lt;- busstop_grid %&gt;%\n  st_drop_geometry() %&gt;%\n  select(grid_id, BIZ_COUNT, FnB_COUNT, FINSERV_COUNT, BUSSTOP_COUNT, TEXIT_COUNT, HDB_COUNT)\n\nJoin propulsive variable to form flow data\n\nflow_data &lt;- pv_data1 %&gt;%\n  left_join(busstop_grid_tidy,\n            by = c(\"ORIGIN_SZ\" = \"grid_id\")) %&gt;%\n  rename(\n    ORIG_HDB_COUNT = HDB_COUNT,\n    ORIG_BUSSTOP_COUNT = BUSSTOP_COUNT,\n    ORIG_TEXIT_COUNT = TEXIT_COUNT) %&gt;%\n  select (-c(BIZ_COUNT,FnB_COUNT,FINSERV_COUNT))\n\nJoin attractive variable to form flow data\n\nflow_data &lt;- flow_data %&gt;%\n  left_join(busstop_grid_tidy,\n            by = c(\"DESTIN_SZ\" = \"grid_id\")) %&gt;%\n  rename(\n    DEST_BIZ_COUNT = BIZ_COUNT,\n    DEST_FnB_COUNT = FnB_COUNT,\n    DEST_FINSERV_COUNT = FINSERV_COUNT) %&gt;%\n  select (-c(HDB_COUNT,BUSSTOP_COUNT,TEXIT_COUNT))\n\n\nChecking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in wd_od data frame.\n\nsummary(flow_data)\n\n  ORIGIN_SZ          DESTIN_SZ          MORNING_PEAK     ORIG_BUSSTOP_COUNT\n Length:65140       Length:65140       Min.   :    1.0   Min.   : 1.000    \n Class :character   Class :character   1st Qu.:    7.0   1st Qu.: 5.000    \n Mode  :character   Mode  :character   Median :   38.0   Median : 8.000    \n                                       Mean   :  375.3   Mean   : 7.907    \n                                       3rd Qu.:  175.0   3rd Qu.:10.000    \n                                       Max.   :97602.0   Max.   :19.000    \n ORIG_TEXIT_COUNT ORIG_HDB_COUNT   DEST_BIZ_COUNT   DEST_FnB_COUNT   \n Min.   : 0.000   Min.   :  0.00   Min.   : 0.000   Min.   :  0.000  \n 1st Qu.: 0.000   1st Qu.:  0.00   1st Qu.: 0.000   1st Qu.:  0.000  \n Median : 0.000   Median : 11.00   Median : 1.000   Median :  0.000  \n Mean   : 1.263   Mean   : 20.75   Mean   : 7.295   Mean   :  5.775  \n 3rd Qu.: 2.000   3rd Qu.: 36.00   3rd Qu.: 6.000   3rd Qu.:  2.000  \n Max.   :13.000   Max.   :103.00   Max.   :97.000   Max.   :133.000  \n DEST_FINSERV_COUNT\n Min.   :  0.000   \n 1st Qu.:  1.000   \n Median :  3.000   \n Mean   :  8.616   \n 3rd Qu.:  9.000   \n Max.   :139.000   \n\n\nCode chunk below will be used to replace zero values to 0.99.\n\nflow_data$DEST_BIZ_COUNT &lt;- ifelse(\n  flow_data$DEST_BIZ_COUNT == 0,\n  0.99, flow_data$DEST_BIZ_COUNT)\nflow_data$DEST_FnB_COUNT &lt;- ifelse(\n  flow_data$DEST_FnB_COUNT == 0,\n  0.99, flow_data$DEST_FnB_COUNT)\nflow_data$DEST_FINSERV_COUNT &lt;- ifelse(\n  flow_data$DEST_FINSERV_COUNT == 0,\n  0.99, flow_data$DEST_FINSERV_COUNT)\nflow_data$ORIG_BUSSTOP_COUNT &lt;- ifelse(\n  flow_data$ORIG_BUSSTOP_COUNT == 0,\n  0.99, flow_data$ORIG_BUSSTOP_COUNT)\nflow_data$ORIG_TEXIT_COUNT &lt;- ifelse(\n  flow_data$ORIG_TEXIT_COUNT == 0,\n  0.99, flow_data$ORIG_TEXIT_COUNT)\nflow_data$ORIG_HDB_COUNT &lt;- ifelse(\n  flow_data$ORIG_HDB_COUNT == 0,\n  0.99, flow_data$ORIG_HDB_COUNT)\n\nRun the summary() again to check.\n\nsummary(flow_data)\n\n  ORIGIN_SZ          DESTIN_SZ          MORNING_PEAK     ORIG_BUSSTOP_COUNT\n Length:65140       Length:65140       Min.   :    1.0   Min.   : 1.000    \n Class :character   Class :character   1st Qu.:    7.0   1st Qu.: 5.000    \n Mode  :character   Mode  :character   Median :   38.0   Median : 8.000    \n                                       Mean   :  375.3   Mean   : 7.907    \n                                       3rd Qu.:  175.0   3rd Qu.:10.000    \n                                       Max.   :97602.0   Max.   :19.000    \n ORIG_TEXIT_COUNT ORIG_HDB_COUNT   DEST_BIZ_COUNT   DEST_FnB_COUNT   \n Min.   : 0.99    Min.   :  0.99   Min.   : 0.990   Min.   :  0.990  \n 1st Qu.: 0.99    1st Qu.:  0.99   1st Qu.: 0.990   1st Qu.:  0.990  \n Median : 0.99    Median : 11.00   Median : 1.000   Median :  0.990  \n Mean   : 1.89    Mean   : 21.09   Mean   : 7.724   Mean   :  6.303  \n 3rd Qu.: 2.00    3rd Qu.: 36.00   3rd Qu.: 6.000   3rd Qu.:  2.000  \n Max.   :13.00    Max.   :103.00   Max.   :97.000   Max.   :133.000  \n DEST_FINSERV_COUNT\n Min.   :  0.990   \n 1st Qu.:  1.000   \n Median :  3.000   \n Mean   :  8.853   \n 3rd Qu.:  9.000   \n Max.   :139.000   \n\n\nSave the output into an rds file.\n\nwrite_rds(flow_data, \"data/rds/flow_data.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "href": "Take-home_Ex2/Take-home_Ex2.html#converting-from-sf-data.table-to-spatialpolygonsdataframe",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Converting from sf data.table to SpatialPolygonsDataFrame",
    "text": "Converting from sf data.table to SpatialPolygonsDataFrame\nFirst as.Spatial() will be used to convert mpsz from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below.\n\nbusstop_grid_sp &lt;- as(busstop_grid, \"Spatial\")\nbusstop_grid_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 834 \nextent      : 3595.122, 48595.12, 26049.09, 53545.39  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 8\nnames       : grid_id, n_busstops, BIZ_COUNT, FnB_COUNT, FINSERV_COUNT, BUSSTOP_COUNT, TEXIT_COUNT, HDB_COUNT \nmin values  :  G00023,          1,         0,         0,             0,             1,           0,         0 \nmax values  :  G02505,         19,        97,       133,           139,            19,          13,       103"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#computing-the-distance-matrix-1",
    "href": "Take-home_Ex2/Take-home_Ex2.html#computing-the-distance-matrix-1",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Computing the distance matrix",
    "text": "Computing the distance matrix\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the trid.\n\ndist &lt;- spDists(busstop_grid_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,]    0.000  750.000 3269.174 1500.000 2704.163 3968.627 1299.038 2250.000\n [2,]  750.000    0.000 2598.076  750.000 1984.313 3269.174  750.000 1500.000\n [3,] 3269.174 2598.076    0.000 1984.313  750.000  750.000 2704.163 1500.000\n [4,] 1500.000  750.000 1984.313    0.000 1299.038 2598.076  750.000  750.000\n [5,] 2704.163 1984.313  750.000 1299.038    0.000 1299.038 1984.313  750.000\n [6,] 3968.627 3269.174  750.000 2598.076 1299.038    0.000 3269.174 1984.313\n [7,] 1299.038  750.000 2704.163  750.000 1984.313 3269.174    0.000 1299.038\n [8,] 2250.000 1500.000 1500.000  750.000  750.000 1984.313 1299.038    0.000\n [9,] 3436.932 2704.163  750.000 1984.313  750.000  750.000 2598.076 1299.038\n[10,] 4683.748 3968.627 1500.000 3269.174 1984.313  750.000 3897.114 2598.076\n          [,9]    [,10]\n [1,] 3436.932 4683.748\n [2,] 2704.163 3968.627\n [3,]  750.000 1500.000\n [4,] 1984.313 3269.174\n [5,]  750.000 1984.313\n [6,]  750.000  750.000\n [7,] 2598.076 3897.114\n [8,] 1299.038 2598.076\n [9,]    0.000 1299.038\n[10,] 1299.038    0.000\n\n\n\nLabel column and row headers of a distance matrix\nFirst, we will create a list sorted according to the the distance matrix by grid_id.\n\nsz_names &lt;- busstop_grid_sp$grid_id\n\nNext we will attach grid_id to row and column for distance matrix matching ahead.\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\n\n\nPivoting distance value by grid_id\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2     dist\n1  G00023 G00023    0.000\n2  G00044 G00023  750.000\n3  G00046 G00023 3269.174\n4  G00066 G00023 1500.000\n5  G00067 G00023 2704.163\n6  G00068 G00023 3968.627\n7  G00086 G00023 1299.038\n8  G00087 G00023 2250.000\n9  G00088 G00023 3436.932\n10 G00089 G00023 4683.748\n\n\nNotice that the within zone distance is 0.\n\n\nUpdate intra-zonal distances\nWe are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n G00023 :   833   G00023 :   833   Min.   :  750  \n G00044 :   833   G00044 :   833   1st Qu.: 8352  \n G00046 :   833   G00046 :   833   Median :13332  \n G00066 :   833   G00066 :   833   Mean   :14162  \n G00067 :   833   G00067 :   833   3rd Qu.:18929  \n G00068 :   833   G00068 :   833   Max.   :44680  \n (Other):689724   (Other):689724                  \n\n\nNext, a constant distance value of 50m is added into intra-zones distance.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\nThe code chunk below will be used to check the result data.frame.\n\ndistPair %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n G00023 :   834   G00023 :   834   Min.   :   50  \n G00044 :   834   G00044 :   834   1st Qu.: 8250  \n G00046 :   834   G00046 :   834   Median :13332  \n G00066 :   834   G00066 :   834   Mean   :14145  \n G00067 :   834   G00067 :   834   3rd Qu.:18929  \n G00068 :   834   G00068 :   834   Max.   :44680  \n (Other):690552   (Other):690552                  \n\n\nThe code chunk below is used to rename the origin and destination fields.\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)\n\nSave the output into an rds file.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#preparing-flow-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#preparing-flow-data",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Preparing flow data",
    "text": "Preparing flow data\n\nflow_data &lt;- read_rds(\"data/rds/flow_data.rds\")\n\n\nhead(flow_data, 10)\n\n# A tibble: 10 × 9\n# Groups:   ORIGIN_SZ [2]\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK ORIG_BUSSTOP_COUNT ORIG_TEXIT_COUNT\n   &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;              &lt;int&gt;            &lt;dbl&gt;\n 1 G00023    G00067               1                  1             0.99\n 2 G00023    G00087               1                  1             0.99\n 3 G00023    G00128               4                  1             0.99\n 4 G00023    G00154               3                  1             0.99\n 5 G00023    G00175              93                  1             0.99\n 6 G00023    G00176               1                  1             0.99\n 7 G00044    G00023               1                  1             0.99\n 8 G00044    G00067               2                  1             0.99\n 9 G00044    G00086               1                  1             0.99\n10 G00044    G00088               2                  1             0.99\n# ℹ 4 more variables: ORIG_HDB_COUNT &lt;dbl&gt;, DEST_BIZ_COUNT &lt;dbl&gt;,\n#   DEST_FnB_COUNT &lt;dbl&gt;, DEST_FINSERV_COUNT &lt;dbl&gt;\n\n\n\nSeparating intra-flow from passenger volume df\nCode chunk below is used to add three new fields in flow_data dataframe.\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$MORNING_PEAK)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\n\n\nCombining passenger volume data with distance value\nBefore we can join flow_data and distPair, we need to convert data value type of ORIGIN_SZ and DESTIN_SZ fields of flow_data dataframe into factor data type.\n\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\nNow, left_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\n\nflow_data1 &lt;- flow_data %&gt;%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))\n\n\nglimpse(flow_data1)\n\nRows: 65,140\nColumns: 12\nGroups: ORIGIN_SZ [816]\n$ ORIGIN_SZ          &lt;fct&gt; G00023, G00023, G00023, G00023, G00023, G00023, G00…\n$ DESTIN_SZ          &lt;fct&gt; G00067, G00087, G00128, G00154, G00175, G00176, G00…\n$ MORNING_PEAK       &lt;dbl&gt; 1, 1, 4, 3, 93, 1, 1, 2, 1, 2, 3, 1, 2, 40, 1, 1, 3…\n$ ORIG_BUSSTOP_COUNT &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, …\n$ ORIG_TEXIT_COUNT   &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.9…\n$ ORIG_HDB_COUNT     &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.9…\n$ DEST_BIZ_COUNT     &lt;dbl&gt; 50.00, 3.00, 6.00, 42.00, 44.00, 0.99, 0.99, 50.00,…\n$ DEST_FnB_COUNT     &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.9…\n$ DEST_FINSERV_COUNT &lt;dbl&gt; 1.00, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1.00, 0.9…\n$ FlowNoIntra        &lt;dbl&gt; 1, 1, 4, 3, 93, 1, 1, 2, 1, 2, 3, 1, 2, 40, 1, 1, 3…\n$ offset             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ dist               &lt;dbl&gt; 2704.163, 2250.000, 1984.313, 6873.864, 7611.669, 8…\n\n\nSave the output into an rds file.\n\nwrite_rds(flow_data1, \"data/rds/SIM_data.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#calibrating-spatial-interaction-models",
    "href": "Take-home_Ex2/Take-home_Ex2.html#calibrating-spatial-interaction-models",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Calibrating Spatial Interaction Models",
    "text": "Calibrating Spatial Interaction Models\n\nImporting the modelling data\nImport the modelling data by using the code chunk below.\n\nSIM_data &lt;- read_rds(\"data/rds/SIM_data.rds\")\n\n\n\nVisualising the dependent variable\nFirstly, let us plot the distribution of the dependent variable (i.e. MORNING_PEAK) by using histogram method by using the code chunk below.\n\nggplot(data = SIM_data,\n       aes(x = MORNING_PEAK)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNotice that the distribution is highly skewed and not resemble bell shape or also known as normal distribution.\nNext, let us visualise the relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance.\n\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = MORNING_PEAK)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nNotice that their relationship hardly resemble linear relationship.\nOn the other hand, plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(MORNING_PEAK))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nChecking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in SIM_data data frame.\n\nsummary(SIM_data)\n\n   ORIGIN_SZ       DESTIN_SZ      MORNING_PEAK     ORIG_BUSSTOP_COUNT\n G01960 :  294   G01474 :  354   Min.   :    1.0   Min.   : 1.000    \n G01474 :  293   G01452 :  335   1st Qu.:    7.0   1st Qu.: 5.000    \n G01477 :  293   G01516 :  324   Median :   38.0   Median : 8.000    \n G01496 :  283   G01494 :  296   Mean   :  375.3   Mean   : 7.907    \n G01812 :  279   G01477 :  295   3rd Qu.:  175.0   3rd Qu.:10.000    \n G01749 :  277   G01432 :  289   Max.   :97602.0   Max.   :19.000    \n (Other):63421   (Other):63247                                       \n ORIG_TEXIT_COUNT ORIG_HDB_COUNT   DEST_BIZ_COUNT   DEST_FnB_COUNT   \n Min.   : 0.99    Min.   :  0.99   Min.   : 0.990   Min.   :  0.990  \n 1st Qu.: 0.99    1st Qu.:  0.99   1st Qu.: 0.990   1st Qu.:  0.990  \n Median : 0.99    Median : 11.00   Median : 1.000   Median :  0.990  \n Mean   : 1.89    Mean   : 21.09   Mean   : 7.724   Mean   :  6.303  \n 3rd Qu.: 2.00    3rd Qu.: 36.00   3rd Qu.: 6.000   3rd Qu.:  2.000  \n Max.   :13.00    Max.   :103.00   Max.   :97.000   Max.   :133.000  \n                                                                     \n DEST_FINSERV_COUNT  FlowNoIntra          offset       dist      \n Min.   :  0.990    Min.   :    1.0   Min.   :1   Min.   :  750  \n 1st Qu.:  1.000    1st Qu.:    7.0   1st Qu.:1   1st Qu.: 3000  \n Median :  3.000    Median :   38.0   Median :1   Median : 5408  \n Mean   :  8.853    Mean   :  375.3   Mean   :1   Mean   : 6341  \n 3rd Qu.:  9.000    3rd Qu.:  175.0   3rd Qu.:1   3rd Qu.: 8842  \n Max.   :139.000    Max.   :97602.0   Max.   :1   Max.   :24784  \n                                                                 \n\n\nAll the 0 values have been replaced by 0.99 in previous section."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#r-squared-function",
    "href": "Take-home_Ex2/Take-home_Ex2.html#r-squared-function",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "R-squared function",
    "text": "R-squared function\nIn order to measure how much variation of the trips can be accounted by the model we will write a function to calculate R-Squared value as shown below.\n\nCalcRSquared &lt;- function(observed,estimated){\n  r &lt;- cor(observed,estimated)\n  R2 &lt;- r^2\n  R2\n}"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#unconstrained-spatial-interaction-model",
    "href": "Take-home_Ex2/Take-home_Ex2.html#unconstrained-spatial-interaction-model",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Unconstrained Spatial Interaction Model",
    "text": "Unconstrained Spatial Interaction Model\nIn this section, we will calibrate an unconstrained spatial interaction model by using glm() of Base Stats.\n\nuncSIM &lt;- glm(formula = MORNING_PEAK ~ \n                log(ORIG_BUSSTOP_COUNT) +\n                log(ORIG_TEXIT_COUNT) +\n                log(ORIG_HDB_COUNT) +\n                log(DEST_BIZ_COUNT) + \n                log(DEST_FnB_COUNT) +\n                log(DEST_FINSERV_COUNT) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\nCall:  glm(formula = MORNING_PEAK ~ log(ORIG_BUSSTOP_COUNT) + log(ORIG_TEXIT_COUNT) + \n    log(ORIG_HDB_COUNT) + log(DEST_BIZ_COUNT) + log(DEST_FnB_COUNT) + \n    log(DEST_FINSERV_COUNT) + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n            (Intercept)  log(ORIG_BUSSTOP_COUNT)    log(ORIG_TEXIT_COUNT)  \n                15.4553                   0.2473                   0.1872  \n    log(ORIG_HDB_COUNT)      log(DEST_BIZ_COUNT)      log(DEST_FnB_COUNT)  \n                 0.3639                   0.0500                  -0.2299  \nlog(DEST_FINSERV_COUNT)                log(dist)  \n                 0.4514                  -1.4474  \n\nDegrees of Freedom: 65139 Total (i.e. Null);  65132 Residual\nNull Deviance:      98770000 \nResidual Deviance: 48520000     AIC: 48880000\n\n\nNext, we will compute the R-squared of the unconstrained SIM by using the code chunk below.\n\nCalcRSquared(uncSIM$data$MORNING_PEAK, uncSIM$fitted.values)\n\n[1] 0.2386204\n\n\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.507\n  adj. R2: 0.507\n\n\n\nAnalysis\nThis model suggests that increases in bus stop, train exits and hdb at source and in the business count and financial services count at destinaion are associated with an increase in the number of trips. Increase in F&B Outlet doesn’t have much impact on trips generation to destination. When the distance increases, the number of trips will decreases."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#origin-production-constrained-sim",
    "href": "Take-home_Ex2/Take-home_Ex2.html#origin-production-constrained-sim",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Origin (Production) constrained SIM",
    "text": "Origin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the code3 chunk below.\n\norcSIM &lt;- glm(formula = MORNING_PEAK ~ \n                 ORIGIN_SZ +\n                log(DEST_BIZ_COUNT) + \n                log(DEST_FnB_COUNT) +\n                log(DEST_FINSERV_COUNT) +\n                 log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(orcSIM)\n\n\nCall:\nglm(formula = MORNING_PEAK ~ ORIGIN_SZ + log(DEST_BIZ_COUNT) + \n    log(DEST_FnB_COUNT) + log(DEST_FINSERV_COUNT) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                          Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)             14.6669805  0.0985530   148.823  &lt; 2e-16 ***\nORIGIN_SZG00044         -2.1083485  0.1700998   -12.395  &lt; 2e-16 ***\nORIGIN_SZG00046         -1.3252600  0.1316896   -10.064  &lt; 2e-16 ***\nORIGIN_SZG00066         -1.2452022  0.1591628    -7.823 5.14e-15 ***\nORIGIN_SZG00067          0.7214131  0.1016084     7.100 1.25e-12 ***\nORIGIN_SZG00068         -2.1714180  0.1624045   -13.370  &lt; 2e-16 ***\nORIGIN_SZG00086         -0.5192396  0.1229333    -4.224 2.40e-05 ***\nORIGIN_SZG00087         -0.4506210  0.1276227    -3.531 0.000414 ***\nORIGIN_SZG00088          1.2809684  0.1002534    12.777  &lt; 2e-16 ***\nORIGIN_SZG00089         -0.4807217  0.1102976    -4.358 1.31e-05 ***\nORIGIN_SZG00090         -1.5856130  0.1650829    -9.605  &lt; 2e-16 ***\nORIGIN_SZG00109         -0.8629126  0.1396870    -6.177 6.51e-10 ***\nORIGIN_SZG00110          0.1478908  0.1218060     1.214 0.224690    \nORIGIN_SZG00111          2.4752696  0.0991723    24.959  &lt; 2e-16 ***\nORIGIN_SZG00112         -1.5312966  0.1175745   -13.024  &lt; 2e-16 ***\nORIGIN_SZG00128          1.7211631  0.1010117    17.039  &lt; 2e-16 ***\nORIGIN_SZG00129         -1.0567175  0.2131264    -4.958 7.12e-07 ***\nORIGIN_SZG00130         -0.9729166  0.1154619    -8.426  &lt; 2e-16 ***\nORIGIN_SZG00131         -0.1884419  0.1046458    -1.801 0.071741 .  \nORIGIN_SZG00132         -0.5504852  0.1095784    -5.024 5.07e-07 ***\nORIGIN_SZG00133         -0.6510117  0.1054940    -6.171 6.78e-10 ***\nORIGIN_SZG00134          1.5474882  0.1012351    15.286  &lt; 2e-16 ***\nORIGIN_SZG00150          2.0068685  0.1004788    19.973  &lt; 2e-16 ***\nORIGIN_SZG00151         -0.3455830  0.1146509    -3.014 0.002576 ** \nORIGIN_SZG00152         -0.9193620  0.1276224    -7.204 5.86e-13 ***\nORIGIN_SZG00153         -0.3923233  0.1069238    -3.669 0.000243 ***\nORIGIN_SZG00154          2.3438810  0.0989250    23.694  &lt; 2e-16 ***\nORIGIN_SZG00155         -0.5573200  0.1038450    -5.367 8.01e-08 ***\nORIGIN_SZG00156          0.4013803  0.1058037     3.794 0.000148 ***\nORIGIN_SZG00172          1.0277290  0.1243206     8.267  &lt; 2e-16 ***\nORIGIN_SZG00174         -0.3322417  0.1088571    -3.052 0.002273 ** \nORIGIN_SZG00175          1.9049263  0.0990363    19.235  &lt; 2e-16 ***\nORIGIN_SZG00176          3.0935286  0.0987033    31.342  &lt; 2e-16 ***\nORIGIN_SZG00195         -1.3360743  0.1274540   -10.483  &lt; 2e-16 ***\nORIGIN_SZG00196         -0.8974519  0.1070652    -8.382  &lt; 2e-16 ***\nORIGIN_SZG00197         -1.5674394  0.1475016   -10.627  &lt; 2e-16 ***\nORIGIN_SZG00215         -0.7276972  0.1284962    -5.663 1.49e-08 ***\nORIGIN_SZG00216          3.3081656  0.0986545    33.533  &lt; 2e-16 ***\nORIGIN_SZG00217          0.7260965  0.1006036     7.217 5.30e-13 ***\nORIGIN_SZG00237         -1.8979791  0.1846586   -10.278  &lt; 2e-16 ***\nORIGIN_SZG00238         -0.7082454  0.1109626    -6.383 1.74e-10 ***\nORIGIN_SZG00239         -1.5036752  0.1863022    -8.071 6.96e-16 ***\nORIGIN_SZG00257         -0.8520989  0.1135485    -7.504 6.18e-14 ***\nORIGIN_SZG00258          0.0323310  0.1021768     0.316 0.751682    \nORIGIN_SZG00259         -0.1883900  0.1064390    -1.770 0.076738 .  \nORIGIN_SZG00278          0.2654535  0.1057111     2.511 0.012035 *  \nORIGIN_SZG00279         -0.8417539  0.1074247    -7.836 4.66e-15 ***\nORIGIN_SZG00280         -0.4854995  0.1083752    -4.480 7.47e-06 ***\nORIGIN_SZG00298         -3.1314298  0.3475913    -9.009  &lt; 2e-16 ***\nORIGIN_SZG00299         -0.8531830  0.1102970    -7.735 1.03e-14 ***\nORIGIN_SZG00300          2.1635537  0.0988956    21.877  &lt; 2e-16 ***\nORIGIN_SZG00320         -1.0561317  0.1172909    -9.004  &lt; 2e-16 ***\nORIGIN_SZG00321         -0.3176676  0.1214872    -2.615 0.008927 ** \nORIGIN_SZG00322          0.3232755  0.1090283     2.965 0.003026 ** \nORIGIN_SZG00340          0.7620204  0.1022163     7.455 8.99e-14 ***\nORIGIN_SZG00341         -0.9519428  0.1079719    -8.817  &lt; 2e-16 ***\nORIGIN_SZG00342         -0.4837592  0.1067603    -4.531 5.86e-06 ***\nORIGIN_SZG00363          0.2865567  0.1052188     2.723 0.006461 ** \nORIGIN_SZG00364          0.4260063  0.1020118     4.176 2.97e-05 ***\nORIGIN_SZG00383          0.0164629  0.1033276     0.159 0.873411    \nORIGIN_SZG00384         -1.1632510  0.1114390   -10.438  &lt; 2e-16 ***\nORIGIN_SZG00385         -0.1432100  0.1087328    -1.317 0.187811    \nORIGIN_SZG00404          0.5047805  0.1042079     4.844 1.27e-06 ***\nORIGIN_SZG00405         -0.5284687  0.1098502    -4.811 1.50e-06 ***\nORIGIN_SZG00406          4.1431157  0.0985598    42.037  &lt; 2e-16 ***\nORIGIN_SZG00407         -0.0200079  0.1084534    -0.184 0.853634    \nORIGIN_SZG00408          0.7916416  0.1011055     7.830 4.88e-15 ***\nORIGIN_SZG00425         -1.7878943  0.1321382   -13.530  &lt; 2e-16 ***\nORIGIN_SZG00426          0.0447499  0.1028282     0.435 0.663424    \nORIGIN_SZG00427         -0.7456434  0.1046830    -7.123 1.06e-12 ***\nORIGIN_SZG00428         -0.7456133  0.1255759    -5.938 2.89e-09 ***\nORIGIN_SZG00429          0.9510348  0.1010734     9.409  &lt; 2e-16 ***\nORIGIN_SZG00446         -0.1202788  0.1147031    -1.049 0.294358    \nORIGIN_SZG00447         -0.6873343  0.1080963    -6.359 2.04e-10 ***\nORIGIN_SZG00448          0.1247005  0.1023699     1.218 0.223172    \nORIGIN_SZG00449          2.9401070  0.0987102    29.785  &lt; 2e-16 ***\nORIGIN_SZG00450          0.7701136  0.1004338     7.668 1.75e-14 ***\nORIGIN_SZG00468          0.2255842  0.1023097     2.205 0.027460 *  \nORIGIN_SZG00469          0.7583675  0.1000564     7.579 3.47e-14 ***\nORIGIN_SZG00470          3.1979740  0.0986263    32.425  &lt; 2e-16 ***\nORIGIN_SZG00471          1.6613304  0.0998055    16.646  &lt; 2e-16 ***\nORIGIN_SZG00488         -0.1189514  0.1140087    -1.043 0.296784    \nORIGIN_SZG00489         -2.9601371  0.2687167   -11.016  &lt; 2e-16 ***\nORIGIN_SZG00490          1.7754763  0.0991795    17.902  &lt; 2e-16 ***\nORIGIN_SZG00491          2.2868079  0.0987958    23.147  &lt; 2e-16 ***\nORIGIN_SZG00493         -2.1563193  0.1701160   -12.676  &lt; 2e-16 ***\nORIGIN_SZG00494         -0.1077100  0.1147556    -0.939 0.347934    \nORIGIN_SZG00509          0.0680824  0.1041325     0.654 0.513237    \nORIGIN_SZG00510          0.3776763  0.1015428     3.719 0.000200 ***\nORIGIN_SZG00511          1.3879250  0.0990883    14.007  &lt; 2e-16 ***\nORIGIN_SZG00512          3.7990398  0.0985745    38.540  &lt; 2e-16 ***\nORIGIN_SZG00513          0.6530121  0.1013909     6.441 1.19e-10 ***\nORIGIN_SZG00514          0.2922734  0.1051492     2.780 0.005442 ** \nORIGIN_SZG00515         -1.8600430  0.1690461   -11.003  &lt; 2e-16 ***\nORIGIN_SZG00530         -0.7925172  0.1274538    -6.218 5.03e-10 ***\nORIGIN_SZG00531          0.4445404  0.1005571     4.421 9.83e-06 ***\nORIGIN_SZG00532          0.0646318  0.1011565     0.639 0.522869    \nORIGIN_SZG00533          3.6163730  0.0985764    36.686  &lt; 2e-16 ***\nORIGIN_SZG00534          3.9544660  0.0985870    40.111  &lt; 2e-16 ***\nORIGIN_SZG00536          0.6094348  0.1016450     5.996 2.03e-09 ***\nORIGIN_SZG00537         -1.6872683  0.1690461    -9.981  &lt; 2e-16 ***\nORIGIN_SZG00538         -1.8445826  0.2266612    -8.138 4.02e-16 ***\nORIGIN_SZG00539         -4.1336751  0.5856979    -7.058 1.69e-12 ***\nORIGIN_SZG00551         -0.7827092  0.1123188    -6.969 3.20e-12 ***\nORIGIN_SZG00552          1.1569459  0.1050472    11.014  &lt; 2e-16 ***\nORIGIN_SZG00553          0.2605794  0.1003186     2.598 0.009390 ** \nORIGIN_SZG00554          3.5505642  0.0985861    36.015  &lt; 2e-16 ***\nORIGIN_SZG00555          3.1259996  0.0987500    31.656  &lt; 2e-16 ***\nORIGIN_SZG00559         -1.0930673  0.1356625    -8.057 7.80e-16 ***\nORIGIN_SZG00560          0.8015040  0.1092969     7.333 2.25e-13 ***\nORIGIN_SZG00572         -3.0739488  0.2443533   -12.580  &lt; 2e-16 ***\nORIGIN_SZG00573         -0.6424578  0.1076983    -5.965 2.44e-09 ***\nORIGIN_SZG00574          0.3859945  0.1049155     3.679 0.000234 ***\nORIGIN_SZG00575          4.4172720  0.0985454    44.825  &lt; 2e-16 ***\nORIGIN_SZG00576          3.0588849  0.0986377    31.011  &lt; 2e-16 ***\nORIGIN_SZG00578         -1.6364706  0.1456123   -11.239  &lt; 2e-16 ***\nORIGIN_SZG00582         -1.4698215  0.1451629   -10.125  &lt; 2e-16 ***\nORIGIN_SZG00583         -2.3072744  0.2194770   -10.513  &lt; 2e-16 ***\nORIGIN_SZG00584          0.9893795  0.1128670     8.766  &lt; 2e-16 ***\nORIGIN_SZG00593         -0.5420905  0.1102432    -4.917 8.78e-07 ***\nORIGIN_SZG00594          0.4183063  0.1018523     4.107 4.01e-05 ***\nORIGIN_SZG00595          0.0050857  0.1004781     0.051 0.959632    \nORIGIN_SZG00596          2.9016772  0.0986111    29.425  &lt; 2e-16 ***\nORIGIN_SZG00597         -0.3402475  0.1147556    -2.965 0.003027 ** \nORIGIN_SZG00603         -1.1528099  0.1465379    -7.867 3.63e-15 ***\nORIGIN_SZG00604         -2.9196121  0.2848458   -10.250  &lt; 2e-16 ***\nORIGIN_SZG00615         -1.0110508  0.1078499    -9.375  &lt; 2e-16 ***\nORIGIN_SZG00616         -0.0907445  0.1026975    -0.884 0.376907    \nORIGIN_SZG00617          0.6370526  0.1000346     6.368 1.91e-10 ***\nORIGIN_SZG00618          3.3726670  0.0985901    34.209  &lt; 2e-16 ***\nORIGIN_SZG00620          0.3626281  0.1036942     3.497 0.000470 ***\nORIGIN_SZG00637         -0.7763672  0.1060299    -7.322 2.44e-13 ***\nORIGIN_SZG00638          2.9367871  0.0986045    29.784  &lt; 2e-16 ***\nORIGIN_SZG00657          0.8096931  0.0998289     8.111 5.03e-16 ***\nORIGIN_SZG00658          2.1384777  0.0987194    21.662  &lt; 2e-16 ***\nORIGIN_SZG00659          2.5457810  0.0986634    25.803  &lt; 2e-16 ***\nORIGIN_SZG00660          3.5812032  0.0985728    36.331  &lt; 2e-16 ***\nORIGIN_SZG00662          3.2112584  0.0987723    32.512  &lt; 2e-16 ***\nORIGIN_SZG00677          0.8484985  0.1010263     8.399  &lt; 2e-16 ***\nORIGIN_SZG00678         -1.2115012  0.1077315   -11.246  &lt; 2e-16 ***\nORIGIN_SZG00679          3.3767112  0.0985833    34.252  &lt; 2e-16 ***\nORIGIN_SZG00680          3.3351647  0.0985828    33.831  &lt; 2e-16 ***\nORIGIN_SZG00681          2.3308194  0.0988715    23.574  &lt; 2e-16 ***\nORIGIN_SZG00699          0.3677152  0.1009421     3.643 0.000270 ***\nORIGIN_SZG00700          2.2870595  0.0987019    23.171  &lt; 2e-16 ***\nORIGIN_SZG00701          2.3897460  0.0987069    24.211  &lt; 2e-16 ***\nORIGIN_SZG00702          3.3901213  0.0985799    34.390  &lt; 2e-16 ***\nORIGIN_SZG00704          0.2016741  0.1035562     1.947 0.051477 .  \nORIGIN_SZG00722          0.3902481  0.1001238     3.898 9.71e-05 ***\nORIGIN_SZG00725         -0.5208129  0.1077156    -4.835 1.33e-06 ***\nORIGIN_SZG00741          0.9076947  0.0998532     9.090  &lt; 2e-16 ***\nORIGIN_SZG00743          0.7150727  0.0992794     7.203 5.91e-13 ***\nORIGIN_SZG00744          2.8198842  0.0986184    28.594  &lt; 2e-16 ***\nORIGIN_SZG00761          0.3482782  0.1021768     3.409 0.000653 ***\nORIGIN_SZG00762          2.3290491  0.0987632    23.582  &lt; 2e-16 ***\nORIGIN_SZG00763         -0.8604134  0.1023051    -8.410  &lt; 2e-16 ***\nORIGIN_SZG00764          3.2288716  0.0985781    32.754  &lt; 2e-16 ***\nORIGIN_SZG00765          2.3429764  0.0988510    23.702  &lt; 2e-16 ***\nORIGIN_SZG00767          3.9847060  0.0985879    40.418  &lt; 2e-16 ***\nORIGIN_SZG00772         -1.0388635  0.1220240    -8.514  &lt; 2e-16 ***\nORIGIN_SZG00784         -0.6064641  0.1012692    -5.989 2.12e-09 ***\nORIGIN_SZG00785          2.4640198  0.0986139    24.987  &lt; 2e-16 ***\nORIGIN_SZG00786          2.0819713  0.0986989    21.094  &lt; 2e-16 ***\nORIGIN_SZG00787          2.7074686  0.0987770    27.410  &lt; 2e-16 ***\nORIGIN_SZG00788          3.2649139  0.0986570    33.094  &lt; 2e-16 ***\nORIGIN_SZG00789          1.9124104  0.0990635    19.305  &lt; 2e-16 ***\nORIGIN_SZG00803         -1.0136305  0.1099266    -9.221  &lt; 2e-16 ***\nORIGIN_SZG00804          3.3070865  0.0986035    33.539  &lt; 2e-16 ***\nORIGIN_SZG00805          3.0822395  0.0985778    31.267  &lt; 2e-16 ***\nORIGIN_SZG00806          2.6243876  0.0986126    26.613  &lt; 2e-16 ***\nORIGIN_SZG00807          3.4853406  0.0986098    35.345  &lt; 2e-16 ***\nORIGIN_SZG00808          1.9635654  0.0991123    19.812  &lt; 2e-16 ***\nORIGIN_SZG00809          3.5453882  0.0985807    35.964  &lt; 2e-16 ***\nORIGIN_SZG00810          3.0899193  0.0986721    31.315  &lt; 2e-16 ***\nORIGIN_SZG00814          0.4824623  0.1022817     4.717 2.39e-06 ***\nORIGIN_SZG00819          5.5642089  0.1000180    55.632  &lt; 2e-16 ***\nORIGIN_SZG00824         -0.4229726  0.1057111    -4.001 6.30e-05 ***\nORIGIN_SZG00826          0.8387211  0.0990191     8.470  &lt; 2e-16 ***\nORIGIN_SZG00827          2.9117751  0.0985929    29.533  &lt; 2e-16 ***\nORIGIN_SZG00828          3.0747990  0.0985882    31.188  &lt; 2e-16 ***\nORIGIN_SZG00829          3.1514089  0.0986211    31.955  &lt; 2e-16 ***\nORIGIN_SZG00830          3.1778109  0.0986501    32.213  &lt; 2e-16 ***\nORIGIN_SZG00831          3.9165242  0.0985626    39.736  &lt; 2e-16 ***\nORIGIN_SZG00832          3.1743961  0.0987011    32.162  &lt; 2e-16 ***\nORIGIN_SZG00835          0.1643879  0.1027670     1.600 0.109683    \nORIGIN_SZG00844         -1.5747747  0.1255753   -12.540  &lt; 2e-16 ***\nORIGIN_SZG00846          2.4118701  0.0986535    24.448  &lt; 2e-16 ***\nORIGIN_SZG00847          1.2302210  0.0989150    12.437  &lt; 2e-16 ***\nORIGIN_SZG00848          2.4885025  0.0986333    25.230  &lt; 2e-16 ***\nORIGIN_SZG00849          1.6920519  0.0988223    17.122  &lt; 2e-16 ***\nORIGIN_SZG00850          2.5694393  0.0986639    26.042  &lt; 2e-16 ***\nORIGIN_SZG00851          3.0361729  0.0986056    30.791  &lt; 2e-16 ***\nORIGIN_SZG00852          2.6497814  0.0987002    26.847  &lt; 2e-16 ***\nORIGIN_SZG00853          4.5271546  0.0985861    45.921  &lt; 2e-16 ***\nORIGIN_SZG00854          0.6112520  0.1018478     6.002 1.95e-09 ***\nORIGIN_SZG00855         -0.4495039  0.1076651    -4.175 2.98e-05 ***\nORIGIN_SZG00856          1.1590652  0.1001359    11.575  &lt; 2e-16 ***\nORIGIN_SZG00866         -0.0429554  0.1035164    -0.415 0.678170    \nORIGIN_SZG00867          1.1446653  0.0992194    11.537  &lt; 2e-16 ***\nORIGIN_SZG00868          0.2931468  0.1000795     2.929 0.003399 ** \nORIGIN_SZG00869          2.9132546  0.0986872    29.520  &lt; 2e-16 ***\nORIGIN_SZG00870          3.5243405  0.0985636    35.757  &lt; 2e-16 ***\nORIGIN_SZG00871          3.1136055  0.0986861    31.551  &lt; 2e-16 ***\nORIGIN_SZG00872          1.2524443  0.0991058    12.637  &lt; 2e-16 ***\nORIGIN_SZG00873          1.5440662  0.0990243    15.593  &lt; 2e-16 ***\nORIGIN_SZG00874          1.8565303  0.0988415    18.783  &lt; 2e-16 ***\nORIGIN_SZG00875         -1.2894605  0.1220241   -10.567  &lt; 2e-16 ***\nORIGIN_SZG00876         -0.1627371  0.1034201    -1.574 0.115591    \nORIGIN_SZG00877         -0.7410867  0.1063417    -6.969 3.19e-12 ***\nORIGIN_SZG00887          0.9123926  0.0994138     9.178  &lt; 2e-16 ***\nORIGIN_SZG00888          2.1382270  0.0987514    21.653  &lt; 2e-16 ***\nORIGIN_SZG00889         -0.8524677  0.1041705    -8.183 2.76e-16 ***\nORIGIN_SZG00890          3.0944805  0.0985862    31.389  &lt; 2e-16 ***\nORIGIN_SZG00891          2.0016545  0.0991452    20.189  &lt; 2e-16 ***\nORIGIN_SZG00893          3.1152937  0.0985962    31.597  &lt; 2e-16 ***\nORIGIN_SZG00894          1.2444648  0.0991090    12.557  &lt; 2e-16 ***\nORIGIN_SZG00895          0.8936757  0.0996651     8.967  &lt; 2e-16 ***\nORIGIN_SZG00896          0.4401688  0.1017110     4.328 1.51e-05 ***\nORIGIN_SZG00897         -1.4220182  0.1174317   -12.109  &lt; 2e-16 ***\nORIGIN_SZG00898          0.3669035  0.1027112     3.572 0.000354 ***\nORIGIN_SZG00908          2.1169922  0.0992237    21.336  &lt; 2e-16 ***\nORIGIN_SZG00909          2.2289098  0.0986744    22.589  &lt; 2e-16 ***\nORIGIN_SZG00910          0.2199616  0.0999932     2.200 0.027824 *  \nORIGIN_SZG00911          1.5424954  0.0988869    15.599  &lt; 2e-16 ***\nORIGIN_SZG00912          2.8423650  0.0986085    28.825  &lt; 2e-16 ***\nORIGIN_SZG00915          3.0255324  0.0986088    30.682  &lt; 2e-16 ***\nORIGIN_SZG00917          2.4709276  0.0987778    25.015  &lt; 2e-16 ***\nORIGIN_SZG00918         -0.5493183  0.1049237    -5.235 1.65e-07 ***\nORIGIN_SZG00919          1.9535862  0.0989151    19.750  &lt; 2e-16 ***\nORIGIN_SZG00928          1.2669722  0.0994072    12.745  &lt; 2e-16 ***\nORIGIN_SZG00929          2.6339815  0.0986183    26.709  &lt; 2e-16 ***\nORIGIN_SZG00930          3.3671790  0.0985642    34.162  &lt; 2e-16 ***\nORIGIN_SZG00931          0.4171415  0.0998914     4.176 2.97e-05 ***\nORIGIN_SZG00932          0.9424482  0.1000311     9.422  &lt; 2e-16 ***\nORIGIN_SZG00933          2.6450824  0.0986689    26.808  &lt; 2e-16 ***\nORIGIN_SZG00934          0.2973193  0.0999880     2.974 0.002944 ** \nORIGIN_SZG00935          3.7217630  0.0985637    37.760  &lt; 2e-16 ***\nORIGIN_SZG00938         -2.6535337  0.2348682   -11.298  &lt; 2e-16 ***\nORIGIN_SZG00939          3.8331821  0.0985853    38.882  &lt; 2e-16 ***\nORIGIN_SZG00940         -1.0126772  0.1155204    -8.766  &lt; 2e-16 ***\nORIGIN_SZG00949          1.0958719  0.0993080    11.035  &lt; 2e-16 ***\nORIGIN_SZG00950          3.0533703  0.0986305    30.958  &lt; 2e-16 ***\nORIGIN_SZG00951          3.8366421  0.0985539    38.929  &lt; 2e-16 ***\nORIGIN_SZG00952          0.8202055  0.1006945     8.145 3.78e-16 ***\nORIGIN_SZG00953          1.6948670  0.0989504    17.128  &lt; 2e-16 ***\nORIGIN_SZG00954          0.2530481  0.0998912     2.533 0.011301 *  \nORIGIN_SZG00955          2.4570232  0.0986704    24.901  &lt; 2e-16 ***\nORIGIN_SZG00956          0.9795480  0.0991578     9.879  &lt; 2e-16 ***\nORIGIN_SZG00957          2.9394252  0.0986688    29.791  &lt; 2e-16 ***\nORIGIN_SZG00959         -0.1951947  0.1097498    -1.779 0.075315 .  \nORIGIN_SZG00961         -0.3529104  0.1029102    -3.429 0.000605 ***\nORIGIN_SZG00962          5.9131395  0.0986031    59.969  &lt; 2e-16 ***\nORIGIN_SZG00970          1.5849783  0.0988245    16.038  &lt; 2e-16 ***\nORIGIN_SZG00971          2.8066671  0.0985877    28.469  &lt; 2e-16 ***\nORIGIN_SZG00972          2.6030104  0.0986257    26.393  &lt; 2e-16 ***\nORIGIN_SZG00974          1.9759883  0.0987778    20.004  &lt; 2e-16 ***\nORIGIN_SZG00975          1.6075617  0.0989009    16.254  &lt; 2e-16 ***\nORIGIN_SZG00976          0.2694415  0.0999094     2.697 0.007000 ** \nORIGIN_SZG00977          3.3602849  0.0985845    34.085  &lt; 2e-16 ***\nORIGIN_SZG00978          2.8934540  0.0987489    29.301  &lt; 2e-16 ***\nORIGIN_SZG00982          0.7997663  0.0995371     8.035 9.37e-16 ***\nORIGIN_SZG00983          4.8757660  0.0985802    49.460  &lt; 2e-16 ***\nORIGIN_SZG00984          5.7747659  0.0985813    58.579  &lt; 2e-16 ***\nORIGIN_SZG00991          1.5168718  0.0988991    15.338  &lt; 2e-16 ***\nORIGIN_SZG00992          1.9126796  0.0987447    19.370  &lt; 2e-16 ***\nORIGIN_SZG00993          1.5673139  0.0987822    15.866  &lt; 2e-16 ***\nORIGIN_SZG00994          0.9546394  0.0991007     9.633  &lt; 2e-16 ***\nORIGIN_SZG00995          2.3493250  0.0986662    23.811  &lt; 2e-16 ***\nORIGIN_SZG00996          1.9439967  0.0987915    19.678  &lt; 2e-16 ***\nORIGIN_SZG00997          0.5864708  0.1027156     5.710 1.13e-08 ***\nORIGIN_SZG00998          3.4120563  0.0985904    34.608  &lt; 2e-16 ***\nORIGIN_SZG00999          3.3004333  0.0986580    33.453  &lt; 2e-16 ***\nORIGIN_SZG01001          0.8007957  0.1014769     7.891 2.99e-15 ***\nORIGIN_SZG01003          3.3337540  0.0986026    33.810  &lt; 2e-16 ***\nORIGIN_SZG01004          4.2747936  0.0985632    43.371  &lt; 2e-16 ***\nORIGIN_SZG01011          0.0271198  0.1030064     0.263 0.792332    \nORIGIN_SZG01012         -0.3845767  0.1035121    -3.715 0.000203 ***\nORIGIN_SZG01013          0.3445309  0.0997726     3.453 0.000554 ***\nORIGIN_SZG01014          1.0282274  0.0990789    10.378  &lt; 2e-16 ***\nORIGIN_SZG01015          0.2949615  0.0997739     2.956 0.003114 ** \nORIGIN_SZG01016          1.8862539  0.0987647    19.098  &lt; 2e-16 ***\nORIGIN_SZG01018          2.3711797  0.0989872    23.954  &lt; 2e-16 ***\nORIGIN_SZG01019          3.7507650  0.0986201    38.032  &lt; 2e-16 ***\nORIGIN_SZG01023          2.3563137  0.0989412    23.815  &lt; 2e-16 ***\nORIGIN_SZG01024          3.3861115  0.0986099    34.338  &lt; 2e-16 ***\nORIGIN_SZG01025         -1.0695740  0.1100830    -9.716  &lt; 2e-16 ***\nORIGIN_SZG01033          1.0974641  0.0991302    11.071  &lt; 2e-16 ***\nORIGIN_SZG01034          1.8029156  0.0987685    18.254  &lt; 2e-16 ***\nORIGIN_SZG01035          2.3621409  0.0986602    23.942  &lt; 2e-16 ***\nORIGIN_SZG01036          0.4434196  0.0994769     4.458 8.29e-06 ***\nORIGIN_SZG01037          1.6814947  0.0987563    17.027  &lt; 2e-16 ***\nORIGIN_SZG01043          0.7218528  0.1015505     7.108 1.17e-12 ***\nORIGIN_SZG01045          3.0591806  0.0986127    31.022  &lt; 2e-16 ***\nORIGIN_SZG01046          3.0951356  0.0986362    31.379  &lt; 2e-16 ***\nORIGIN_SZG01053          2.3607569  0.0986764    23.924  &lt; 2e-16 ***\nORIGIN_SZG01054          1.6265180  0.0988145    16.460  &lt; 2e-16 ***\nORIGIN_SZG01055          2.4489214  0.0986485    24.825  &lt; 2e-16 ***\nORIGIN_SZG01056          1.3359377  0.0989336    13.503  &lt; 2e-16 ***\nORIGIN_SZG01064         -2.1982823  0.2687167    -8.181 2.82e-16 ***\nORIGIN_SZG01066          2.9645502  0.0986377    30.055  &lt; 2e-16 ***\nORIGIN_SZG01067          2.9977570  0.0987278    30.364  &lt; 2e-16 ***\nORIGIN_SZG01074          1.8789052  0.0987969    19.018  &lt; 2e-16 ***\nORIGIN_SZG01075          1.2690973  0.0990177    12.817  &lt; 2e-16 ***\nORIGIN_SZG01076          1.1202380  0.0988857    11.329  &lt; 2e-16 ***\nORIGIN_SZG01077          1.2256344  0.0990228    12.377  &lt; 2e-16 ***\nORIGIN_SZG01079          2.5674105  0.0986422    26.028  &lt; 2e-16 ***\nORIGIN_SZG01085         -1.8432402  0.1723621   -10.694  &lt; 2e-16 ***\nORIGIN_SZG01087          2.9875469  0.0986809    30.275  &lt; 2e-16 ***\nORIGIN_SZG01088          1.4787093  0.0992124    14.904  &lt; 2e-16 ***\nORIGIN_SZG01094         -0.0365875  0.1076984    -0.340 0.734066    \nORIGIN_SZG01095         -0.2279864  0.1038233    -2.196 0.028099 *  \nORIGIN_SZG01096          0.9706632  0.1005673     9.652  &lt; 2e-16 ***\nORIGIN_SZG01097          2.9079401  0.0985870    29.496  &lt; 2e-16 ***\nORIGIN_SZG01098          0.2859128  0.1001338     2.855 0.004300 ** \nORIGIN_SZG01099          1.8786598  0.0987435    19.026  &lt; 2e-16 ***\nORIGIN_SZG01105         -0.3017938  0.1159912    -2.602 0.009272 ** \nORIGIN_SZG01106         -1.3079825  0.1345809    -9.719  &lt; 2e-16 ***\nORIGIN_SZG01107          0.4585596  0.1022502     4.485 7.30e-06 ***\nORIGIN_SZG01108          4.4413385  0.0985484    45.068  &lt; 2e-16 ***\nORIGIN_SZG01109          2.2413155  0.0990306    22.633  &lt; 2e-16 ***\nORIGIN_SZG01116          1.6354509  0.0988688    16.542  &lt; 2e-16 ***\nORIGIN_SZG01117         -0.0144160  0.1000308    -0.144 0.885409    \nORIGIN_SZG01118          0.0267007  0.1003308     0.266 0.790141    \nORIGIN_SZG01119          1.0546426  0.0989840    10.655  &lt; 2e-16 ***\nORIGIN_SZG01120          0.9130647  0.0993723     9.188  &lt; 2e-16 ***\nORIGIN_SZG01129          3.3916069  0.0986251    34.389  &lt; 2e-16 ***\nORIGIN_SZG01130          3.4589525  0.0985932    35.083  &lt; 2e-16 ***\nORIGIN_SZG01131          2.3243686  0.0990195    23.474  &lt; 2e-16 ***\nORIGIN_SZG01136          0.3754781  0.0996802     3.767 0.000165 ***\nORIGIN_SZG01138         -0.5352484  0.1025495    -5.219 1.79e-07 ***\nORIGIN_SZG01139          2.1447139  0.0986503    21.741  &lt; 2e-16 ***\nORIGIN_SZG01141          2.0880050  0.0987129    21.152  &lt; 2e-16 ***\nORIGIN_SZG01148         -0.1549216  0.1112125    -1.393 0.163613    \nORIGIN_SZG01149          1.2020759  0.0999967    12.021  &lt; 2e-16 ***\nORIGIN_SZG01150          3.5822311  0.0985813    36.338  &lt; 2e-16 ***\nORIGIN_SZG01151          2.5404611  0.0987208    25.734  &lt; 2e-16 ***\nORIGIN_SZG01158          0.7659767  0.0991258     7.727 1.10e-14 ***\nORIGIN_SZG01159          1.8824231  0.0986805    19.076  &lt; 2e-16 ***\nORIGIN_SZG01160          2.7650100  0.0985905    28.045  &lt; 2e-16 ***\nORIGIN_SZG01171          3.8061053  0.0985913    38.605  &lt; 2e-16 ***\nORIGIN_SZG01172          3.6855663  0.0985862    37.384  &lt; 2e-16 ***\nORIGIN_SZG01173          1.3722551  0.0992786    13.822  &lt; 2e-16 ***\nORIGIN_SZG01174         -2.5401871  0.2848460    -8.918  &lt; 2e-16 ***\nORIGIN_SZG01178          0.8422300  0.0990523     8.503  &lt; 2e-16 ***\nORIGIN_SZG01179          1.5089132  0.0987532    15.280  &lt; 2e-16 ***\nORIGIN_SZG01180          2.4137078  0.0986132    24.477  &lt; 2e-16 ***\nORIGIN_SZG01181          1.6125996  0.0987339    16.333  &lt; 2e-16 ***\nORIGIN_SZG01183          0.8328334  0.0992012     8.395  &lt; 2e-16 ***\nORIGIN_SZG01190         -0.0123112  0.1095307    -0.112 0.910506    \nORIGIN_SZG01192          2.7809361  0.0987062    28.174  &lt; 2e-16 ***\nORIGIN_SZG01193          2.8241852  0.0986508    28.628  &lt; 2e-16 ***\nORIGIN_SZG01194          1.1973261  0.0994796    12.036  &lt; 2e-16 ***\nORIGIN_SZG01200          1.7078626  0.0987412    17.296  &lt; 2e-16 ***\nORIGIN_SZG01201          1.4719071  0.0987714    14.902  &lt; 2e-16 ***\nORIGIN_SZG01203          2.0274577  0.0986949    20.543  &lt; 2e-16 ***\nORIGIN_SZG01204          1.8389665  0.0987536    18.622  &lt; 2e-16 ***\nORIGIN_SZG01211         -0.6339072  0.1328351    -4.772 1.82e-06 ***\nORIGIN_SZG01214          3.4252599  0.0986011    34.739  &lt; 2e-16 ***\nORIGIN_SZG01215          0.2391372  0.1061999     2.252 0.024337 *  \nORIGIN_SZG01216         -0.4798452  0.1064514    -4.508 6.56e-06 ***\nORIGIN_SZG01220          2.6805112  0.0986053    27.184  &lt; 2e-16 ***\nORIGIN_SZG01221          2.1821477  0.0986248    22.126  &lt; 2e-16 ***\nORIGIN_SZG01222          1.9610131  0.0989873    19.811  &lt; 2e-16 ***\nORIGIN_SZG01223          0.0618724  0.0999160     0.619 0.535755    \nORIGIN_SZG01224          0.8840833  0.0990796     8.923  &lt; 2e-16 ***\nORIGIN_SZG01231         -2.7247996  0.2131267   -12.785  &lt; 2e-16 ***\nORIGIN_SZG01232         -1.0516434  0.1490256    -7.057 1.70e-12 ***\nORIGIN_SZG01235          0.8882138  0.0994590     8.930  &lt; 2e-16 ***\nORIGIN_SZG01236          1.3264890  0.0994469    13.339  &lt; 2e-16 ***\nORIGIN_SZG01241          0.9449275  0.0990241     9.542  &lt; 2e-16 ***\nORIGIN_SZG01242          1.5626875  0.0987520    15.824  &lt; 2e-16 ***\nORIGIN_SZG01243          2.0625514  0.0986407    20.910  &lt; 2e-16 ***\nORIGIN_SZG01246          1.1113413  0.0989388    11.233  &lt; 2e-16 ***\nORIGIN_SZG01256          2.2431355  0.0987894    22.706  &lt; 2e-16 ***\nORIGIN_SZG01257          3.1211812  0.0986499    31.639  &lt; 2e-16 ***\nORIGIN_SZG01258          1.2493558  0.0995568    12.549  &lt; 2e-16 ***\nORIGIN_SZG01262          1.3309847  0.0988587    13.464  &lt; 2e-16 ***\nORIGIN_SZG01263          1.8507030  0.0986590    18.759  &lt; 2e-16 ***\nORIGIN_SZG01264          0.7696952  0.0992139     7.758 8.63e-15 ***\nORIGIN_SZG01265          0.3991253  0.0994937     4.012 6.03e-05 ***\nORIGIN_SZG01266          1.7625553  0.0988201    17.836  &lt; 2e-16 ***\nORIGIN_SZG01267         -0.2986540  0.1020606    -2.926 0.003431 ** \nORIGIN_SZG01272         -2.3556882  0.1517958   -15.519  &lt; 2e-16 ***\nORIGIN_SZG01273          1.4852772  0.0992296    14.968  &lt; 2e-16 ***\nORIGIN_SZG01277          3.3077209  0.0985996    33.547  &lt; 2e-16 ***\nORIGIN_SZG01278          0.9132479  0.0994616     9.182  &lt; 2e-16 ***\nORIGIN_SZG01283          2.9483634  0.0985942    29.904  &lt; 2e-16 ***\nORIGIN_SZG01284          2.1720890  0.0986363    22.021  &lt; 2e-16 ***\nORIGIN_SZG01285          2.8674244  0.0985800    29.087  &lt; 2e-16 ***\nORIGIN_SZG01286          1.1562404  0.0990279    11.676  &lt; 2e-16 ***\nORIGIN_SZG01289         -0.9880237  0.1087328    -9.087  &lt; 2e-16 ***\nORIGIN_SZG01293         -1.7512815  0.1328347   -13.184  &lt; 2e-16 ***\nORIGIN_SZG01294          2.9258638  0.0986979    29.645  &lt; 2e-16 ***\nORIGIN_SZG01295          0.5354961  0.1006401     5.321 1.03e-07 ***\nORIGIN_SZG01298          2.1639877  0.0987512    21.914  &lt; 2e-16 ***\nORIGIN_SZG01299          2.8137787  0.0987044    28.507  &lt; 2e-16 ***\nORIGIN_SZG01304          2.8710776  0.0985957    29.120  &lt; 2e-16 ***\nORIGIN_SZG01305          2.2085341  0.0986093    22.397  &lt; 2e-16 ***\nORIGIN_SZG01307         -1.2579674  0.1054397   -11.931  &lt; 2e-16 ***\nORIGIN_SZG01308          1.9163279  0.0987103    19.414  &lt; 2e-16 ***\nORIGIN_SZG01310         -2.5758261  0.1632722   -15.776  &lt; 2e-16 ***\nORIGIN_SZG01316         -0.4670756  0.1039362    -4.494 6.99e-06 ***\nORIGIN_SZG01317          1.3217806  0.0991506    13.331  &lt; 2e-16 ***\nORIGIN_SZG01318          0.7563730  0.0996907     7.587 3.27e-14 ***\nORIGIN_SZG01319          3.4258072  0.0985929    34.747  &lt; 2e-16 ***\nORIGIN_SZG01320          2.1570442  0.0989123    21.808  &lt; 2e-16 ***\nORIGIN_SZG01325          0.5247194  0.0992767     5.285 1.25e-07 ***\nORIGIN_SZG01326          2.3968484  0.0986067    24.307  &lt; 2e-16 ***\nORIGIN_SZG01327          2.1876341  0.0986242    22.182  &lt; 2e-16 ***\nORIGIN_SZG01328          0.7832858  0.0989659     7.915 2.48e-15 ***\nORIGIN_SZG01329          1.1751476  0.0991919    11.847  &lt; 2e-16 ***\nORIGIN_SZG01330          1.9250889  0.0988478    19.475  &lt; 2e-16 ***\nORIGIN_SZG01331         -2.9981247  0.3172030    -9.452  &lt; 2e-16 ***\nORIGIN_SZG01333          0.9192686  0.0992614     9.261  &lt; 2e-16 ***\nORIGIN_SZG01334          1.3228201  0.0991497    13.342  &lt; 2e-16 ***\nORIGIN_SZG01335          0.7412493  0.0998816     7.421 1.16e-13 ***\nORIGIN_SZG01336         -1.6771520  0.1456122   -11.518  &lt; 2e-16 ***\nORIGIN_SZG01337         -1.1347928  0.1099014   -10.326  &lt; 2e-16 ***\nORIGIN_SZG01338         -2.1935264  0.1277938   -17.165  &lt; 2e-16 ***\nORIGIN_SZG01339          3.3984307  0.0985880    34.471  &lt; 2e-16 ***\nORIGIN_SZG01340          1.8192086  0.0989124    18.392  &lt; 2e-16 ***\nORIGIN_SZG01341         -2.7070857  0.7139390    -3.792 0.000150 ***\nORIGIN_SZG01346          2.0813056  0.0987103    21.085  &lt; 2e-16 ***\nORIGIN_SZG01347          2.9460291  0.0985810    29.884  &lt; 2e-16 ***\nORIGIN_SZG01348          1.3194085  0.0987175    13.365  &lt; 2e-16 ***\nORIGIN_SZG01349          1.1933509  0.0988503    12.072  &lt; 2e-16 ***\nORIGIN_SZG01350          1.3672897  0.0991363    13.792  &lt; 2e-16 ***\nORIGIN_SZG01353          1.3702644  0.0988728    13.859  &lt; 2e-16 ***\nORIGIN_SZG01354          0.8525571  0.0992488     8.590  &lt; 2e-16 ***\nORIGIN_SZG01355          1.6841036  0.0988689    17.034  &lt; 2e-16 ***\nORIGIN_SZG01357          0.7747251  0.1002723     7.726 1.11e-14 ***\nORIGIN_SZG01358          2.0917989  0.0987803    21.176  &lt; 2e-16 ***\nORIGIN_SZG01359          2.5958252  0.0986535    26.313  &lt; 2e-16 ***\nORIGIN_SZG01360          2.6645122  0.0986607    27.007  &lt; 2e-16 ***\nORIGIN_SZG01361          3.7196994  0.0985984    37.726  &lt; 2e-16 ***\nORIGIN_SZG01362         -0.3399180  0.1083753    -3.136 0.001710 ** \nORIGIN_SZG01368          0.9186648  0.0988781     9.291  &lt; 2e-16 ***\nORIGIN_SZG01369          0.7055308  0.0988956     7.134 9.74e-13 ***\nORIGIN_SZG01370          1.7933327  0.0986487    18.179  &lt; 2e-16 ***\nORIGIN_SZG01371          1.2229087  0.0990088    12.352  &lt; 2e-16 ***\nORIGIN_SZG01372          0.5937278  0.0993793     5.974 2.31e-09 ***\nORIGIN_SZG01373         -1.3561239  0.1089211   -12.451  &lt; 2e-16 ***\nORIGIN_SZG01374          0.4559339  0.0992618     4.593 4.36e-06 ***\nORIGIN_SZG01375          2.0242030  0.0988134    20.485  &lt; 2e-16 ***\nORIGIN_SZG01376          1.4558517  0.0992805    14.664  &lt; 2e-16 ***\nORIGIN_SZG01379         -0.2154987  0.1043254    -2.066 0.038862 *  \nORIGIN_SZG01380          3.5956822  0.0985678    36.479  &lt; 2e-16 ***\nORIGIN_SZG01381          3.2066257  0.0985895    32.525  &lt; 2e-16 ***\nORIGIN_SZG01382          2.7371993  0.0987155    27.728  &lt; 2e-16 ***\nORIGIN_SZG01383          0.2744789  0.1014002     2.707 0.006792 ** \nORIGIN_SZG01388          1.4184263  0.0987348    14.366  &lt; 2e-16 ***\nORIGIN_SZG01389          0.5869375  0.0989168     5.934 2.96e-09 ***\nORIGIN_SZG01390          1.2703079  0.0987473    12.864  &lt; 2e-16 ***\nORIGIN_SZG01391          1.1198170  0.0988689    11.326  &lt; 2e-16 ***\nORIGIN_SZG01392          0.8041704  0.0997709     8.060 7.62e-16 ***\nORIGIN_SZG01393          0.0729878  0.0996369     0.733 0.463841    \nORIGIN_SZG01394          1.2845401  0.0988012    13.001  &lt; 2e-16 ***\nORIGIN_SZG01395          1.3738344  0.0987890    13.907  &lt; 2e-16 ***\nORIGIN_SZG01396          2.4528681  0.0986479    24.865  &lt; 2e-16 ***\nORIGIN_SZG01397          2.6076588  0.0986547    26.432  &lt; 2e-16 ***\nORIGIN_SZG01398          1.5820245  0.0991146    15.962  &lt; 2e-16 ***\nORIGIN_SZG01400          2.8678639  0.0987289    29.048  &lt; 2e-16 ***\nORIGIN_SZG01401          3.0070847  0.0985971    30.499  &lt; 2e-16 ***\nORIGIN_SZG01402          3.1907939  0.0986130    32.357  &lt; 2e-16 ***\nORIGIN_SZG01404          2.7980804  0.0996388    28.082  &lt; 2e-16 ***\nORIGIN_SZG01410          1.9657497  0.0986206    19.932  &lt; 2e-16 ***\nORIGIN_SZG01411          0.8579878  0.0988426     8.680  &lt; 2e-16 ***\nORIGIN_SZG01412          1.1941410  0.0987205    12.096  &lt; 2e-16 ***\nORIGIN_SZG01413          2.1029865  0.0986367    21.321  &lt; 2e-16 ***\nORIGIN_SZG01414          1.4689740  0.0987226    14.880  &lt; 2e-16 ***\nORIGIN_SZG01415          0.9091716  0.0989472     9.188  &lt; 2e-16 ***\nORIGIN_SZG01416          1.5900072  0.0987666    16.099  &lt; 2e-16 ***\nORIGIN_SZG01417          1.6457991  0.0987282    16.670  &lt; 2e-16 ***\nORIGIN_SZG01418          2.4926126  0.0986367    25.271  &lt; 2e-16 ***\nORIGIN_SZG01419          2.0571357  0.0987334    20.835  &lt; 2e-16 ***\nORIGIN_SZG01422          3.0114293  0.0986423    30.529  &lt; 2e-16 ***\nORIGIN_SZG01423          3.9611024  0.0985747    40.184  &lt; 2e-16 ***\nORIGIN_SZG01430          1.7002917  0.0986943    17.228  &lt; 2e-16 ***\nORIGIN_SZG01431          1.7167755  0.0986407    17.404  &lt; 2e-16 ***\nORIGIN_SZG01432          1.7063705  0.0986377    17.299  &lt; 2e-16 ***\nORIGIN_SZG01433          0.4239145  0.0997808     4.248 2.15e-05 ***\nORIGIN_SZG01434          1.8922624  0.0986670    19.178  &lt; 2e-16 ***\nORIGIN_SZG01435          2.4295947  0.0986025    24.640  &lt; 2e-16 ***\nORIGIN_SZG01436         -0.5363196  0.1009381    -5.313 1.08e-07 ***\nORIGIN_SZG01437          2.5862488  0.0986142    26.226  &lt; 2e-16 ***\nORIGIN_SZG01438          2.9883941  0.0985768    30.315  &lt; 2e-16 ***\nORIGIN_SZG01439          3.6249944  0.0985634    36.778  &lt; 2e-16 ***\nORIGIN_SZG01440          0.0771163  0.1005472     0.767 0.443101    \nORIGIN_SZG01442          2.6135049  0.0987344    26.470  &lt; 2e-16 ***\nORIGIN_SZG01443          3.6661355  0.0985852    37.187  &lt; 2e-16 ***\nORIGIN_SZG01444          2.7565595  0.0987844    27.905  &lt; 2e-16 ***\nORIGIN_SZG01452          0.7881286  0.0988130     7.976 1.51e-15 ***\nORIGIN_SZG01453          0.9583632  0.0987956     9.700  &lt; 2e-16 ***\nORIGIN_SZG01454          0.0187496  0.1001668     0.187 0.851517    \nORIGIN_SZG01455          1.2807386  0.0988486    12.957  &lt; 2e-16 ***\nORIGIN_SZG01456          1.7987250  0.0986943    18.225  &lt; 2e-16 ***\nORIGIN_SZG01457          2.6512689  0.0986035    26.888  &lt; 2e-16 ***\nORIGIN_SZG01458          2.7855596  0.0985884    28.254  &lt; 2e-16 ***\nORIGIN_SZG01459          2.4207939  0.0986254    24.545  &lt; 2e-16 ***\nORIGIN_SZG01460          1.8142621  0.0987147    18.379  &lt; 2e-16 ***\nORIGIN_SZG01461          0.4663544  0.0999050     4.668 3.04e-06 ***\nORIGIN_SZG01464          3.9287505  0.0985781    39.854  &lt; 2e-16 ***\nORIGIN_SZG01465          3.5164277  0.0986258    35.654  &lt; 2e-16 ***\nORIGIN_SZG01472         -0.6505568  0.1003101    -6.485 8.85e-11 ***\nORIGIN_SZG01473          0.3845752  0.0989912     3.885 0.000102 ***\nORIGIN_SZG01474          1.3915642  0.0986623    14.104  &lt; 2e-16 ***\nORIGIN_SZG01475          2.3638969  0.0986055    23.973  &lt; 2e-16 ***\nORIGIN_SZG01476          1.7454967  0.0987102    17.683  &lt; 2e-16 ***\nORIGIN_SZG01477          3.2126368  0.0985593    32.596  &lt; 2e-16 ***\nORIGIN_SZG01478          1.6191719  0.0987145    16.403  &lt; 2e-16 ***\nORIGIN_SZG01479          1.8523264  0.0986805    18.771  &lt; 2e-16 ***\nORIGIN_SZG01480          3.5367980  0.0985565    35.886  &lt; 2e-16 ***\nORIGIN_SZG01481          1.2084180  0.0990145    12.204  &lt; 2e-16 ***\nORIGIN_SZG01482          1.1773124  0.0993073    11.855  &lt; 2e-16 ***\nORIGIN_SZG01485          3.3455225  0.0986322    33.919  &lt; 2e-16 ***\nORIGIN_SZG01494          0.6008374  0.0991931     6.057 1.38e-09 ***\nORIGIN_SZG01495          0.7309123  0.0988207     7.396 1.40e-13 ***\nORIGIN_SZG01496          1.7710621  0.0986237    17.958  &lt; 2e-16 ***\nORIGIN_SZG01497          2.0411909  0.0986488    20.691  &lt; 2e-16 ***\nORIGIN_SZG01498          2.5783517  0.0986004    26.150  &lt; 2e-16 ***\nORIGIN_SZG01499          2.7950102  0.0985829    28.352  &lt; 2e-16 ***\nORIGIN_SZG01500          2.7763021  0.0986558    28.141  &lt; 2e-16 ***\nORIGIN_SZG01501          2.9186605  0.0985849    29.606  &lt; 2e-16 ***\nORIGIN_SZG01502          2.5655065  0.0986221    26.013  &lt; 2e-16 ***\nORIGIN_SZG01506         -1.6362119  0.1465380   -11.166  &lt; 2e-16 ***\nORIGIN_SZG01515         -0.4569231  0.1007466    -4.535 5.75e-06 ***\nORIGIN_SZG01516          1.1732958  0.0987309    11.884  &lt; 2e-16 ***\nORIGIN_SZG01517          1.4457713  0.0987434    14.642  &lt; 2e-16 ***\nORIGIN_SZG01518          1.4657249  0.0987783    14.839  &lt; 2e-16 ***\nORIGIN_SZG01519          2.9710871  0.0986293    30.124  &lt; 2e-16 ***\nORIGIN_SZG01520          2.2676230  0.0986344    22.990  &lt; 2e-16 ***\nORIGIN_SZG01521          0.7584147  0.0991098     7.652 1.97e-14 ***\nORIGIN_SZG01522          3.1601070  0.0985764    32.057  &lt; 2e-16 ***\nORIGIN_SZG01523          1.6109854  0.0996239    16.171  &lt; 2e-16 ***\nORIGIN_SZG01524          1.8711857  0.0989295    18.914  &lt; 2e-16 ***\nORIGIN_SZG01527          1.2771051  0.0997794    12.799  &lt; 2e-16 ***\nORIGIN_SZG01535         -1.3766915  0.1220259   -11.282  &lt; 2e-16 ***\nORIGIN_SZG01536         -1.1266564  0.1036282   -10.872  &lt; 2e-16 ***\nORIGIN_SZG01537         -0.1009318  0.0997289    -1.012 0.311508    \nORIGIN_SZG01538          1.2678076  0.0986971    12.845  &lt; 2e-16 ***\nORIGIN_SZG01539          1.7537944  0.0986423    17.779  &lt; 2e-16 ***\nORIGIN_SZG01540          2.4474257  0.0986083    24.820  &lt; 2e-16 ***\nORIGIN_SZG01541          3.6935335  0.0986257    37.450  &lt; 2e-16 ***\nORIGIN_SZG01542          0.7988369  0.0995097     8.028 9.93e-16 ***\nORIGIN_SZG01543          1.0761682  0.1004276    10.716  &lt; 2e-16 ***\nORIGIN_SZG01544          2.3991276  0.0987170    24.303  &lt; 2e-16 ***\nORIGIN_SZG01547         -1.3061379  0.1141047   -11.447  &lt; 2e-16 ***\nORIGIN_SZG01556         -0.6359187  0.1119538    -5.680 1.35e-08 ***\nORIGIN_SZG01557         -1.0395996  0.1032103   -10.073  &lt; 2e-16 ***\nORIGIN_SZG01558          0.2837289  0.1000695     2.835 0.004578 ** \nORIGIN_SZG01559          1.8917764  0.0986263    19.181  &lt; 2e-16 ***\nORIGIN_SZG01560          2.8416589  0.0985797    28.826  &lt; 2e-16 ***\nORIGIN_SZG01561          2.9027967  0.0986166    29.435  &lt; 2e-16 ***\nORIGIN_SZG01562         -0.1226173  0.1002972    -1.223 0.221503    \nORIGIN_SZG01563          1.5006549  0.0987642    15.194  &lt; 2e-16 ***\nORIGIN_SZG01564          0.6710411  0.0993179     6.756 1.41e-11 ***\nORIGIN_SZG01565          0.7550447  0.0994008     7.596 3.06e-14 ***\nORIGIN_SZG01566          0.3527276  0.1003449     3.515 0.000440 ***\nORIGIN_SZG01567         -1.5744748  0.1247259   -12.623  &lt; 2e-16 ***\nORIGIN_SZG01568         -1.1761448  0.1155203   -10.181  &lt; 2e-16 ***\nORIGIN_SZG01578         -3.7994280  0.7139389    -5.322 1.03e-07 ***\nORIGIN_SZG01580          0.4921436  0.0996131     4.941 7.79e-07 ***\nORIGIN_SZG01581         -0.8184710  0.1004366    -8.149 3.67e-16 ***\nORIGIN_SZG01582          2.5620271  0.0985869    25.987  &lt; 2e-16 ***\nORIGIN_SZG01583          1.2588047  0.1004528    12.531  &lt; 2e-16 ***\nORIGIN_SZG01584          1.2912738  0.0989912    13.044  &lt; 2e-16 ***\nORIGIN_SZG01585          1.6144611  0.0988906    16.326  &lt; 2e-16 ***\nORIGIN_SZG01586          0.7392146  0.0992368     7.449 9.41e-14 ***\nORIGIN_SZG01589         -0.8610000  0.1059641    -8.125 4.46e-16 ***\nORIGIN_SZG01590         -0.9985788  0.1140568    -8.755  &lt; 2e-16 ***\nORIGIN_SZG01600          2.3472761  0.0989292    23.727  &lt; 2e-16 ***\nORIGIN_SZG01601          1.0021686  0.0987741    10.146  &lt; 2e-16 ***\nORIGIN_SZG01602          1.9364713  0.0986861    19.623  &lt; 2e-16 ***\nORIGIN_SZG01603          2.8280711  0.0985888    28.686  &lt; 2e-16 ***\nORIGIN_SZG01604          1.3522513  0.0987959    13.687  &lt; 2e-16 ***\nORIGIN_SZG01605          2.6586461  0.0986008    26.964  &lt; 2e-16 ***\nORIGIN_SZG01606          2.2760276  0.0989034    23.013  &lt; 2e-16 ***\nORIGIN_SZG01607          1.3385443  0.0989330    13.530  &lt; 2e-16 ***\nORIGIN_SZG01608          3.1195637  0.0986082    31.636  &lt; 2e-16 ***\nORIGIN_SZG01609          2.8638125  0.0986581    29.028  &lt; 2e-16 ***\nORIGIN_SZG01610         -0.7132283  0.1151292    -6.195 5.83e-10 ***\nORIGIN_SZG01622          1.1137327  0.1004698    11.085  &lt; 2e-16 ***\nORIGIN_SZG01623          2.4097673  0.0985939    24.441  &lt; 2e-16 ***\nORIGIN_SZG01624          1.2705110  0.0988269    12.856  &lt; 2e-16 ***\nORIGIN_SZG01625          2.6524390  0.0986140    26.897  &lt; 2e-16 ***\nORIGIN_SZG01626          3.1240872  0.0985693    31.694  &lt; 2e-16 ***\nORIGIN_SZG01627          1.5974104  0.0987435    16.177  &lt; 2e-16 ***\nORIGIN_SZG01628          3.3147247  0.0985728    33.627  &lt; 2e-16 ***\nORIGIN_SZG01629          2.2206813  0.0987353    22.491  &lt; 2e-16 ***\nORIGIN_SZG01630          2.1803780  0.0987972    22.069  &lt; 2e-16 ***\nORIGIN_SZG01631         -1.3881374  0.1147035   -12.102  &lt; 2e-16 ***\nORIGIN_SZG01642          0.0134589  0.1021539     0.132 0.895181    \nORIGIN_SZG01643          2.2562258  0.0986084    22.881  &lt; 2e-16 ***\nORIGIN_SZG01644          0.2417990  0.0997689     2.424 0.015368 *  \nORIGIN_SZG01645          1.8610151  0.0986865    18.858  &lt; 2e-16 ***\nORIGIN_SZG01646          1.8123441  0.0988642    18.332  &lt; 2e-16 ***\nORIGIN_SZG01647          1.9599332  0.0986656    19.864  &lt; 2e-16 ***\nORIGIN_SZG01648          2.4617914  0.0986222    24.962  &lt; 2e-16 ***\nORIGIN_SZG01649          3.2062905  0.0985809    32.524  &lt; 2e-16 ***\nORIGIN_SZG01650          3.0298948  0.0986447    30.715  &lt; 2e-16 ***\nORIGIN_SZG01664         -2.9347280  0.1936145   -15.158  &lt; 2e-16 ***\nORIGIN_SZG01665          2.5084117  0.0985909    25.443  &lt; 2e-16 ***\nORIGIN_SZG01666          1.2766672  0.0987426    12.929  &lt; 2e-16 ***\nORIGIN_SZG01667          2.7699562  0.0989915    27.982  &lt; 2e-16 ***\nORIGIN_SZG01668          2.4700589  0.0986188    25.047  &lt; 2e-16 ***\nORIGIN_SZG01670          3.3334751  0.0985720    33.818  &lt; 2e-16 ***\nORIGIN_SZG01671          3.8477390  0.0986393    39.008  &lt; 2e-16 ***\nORIGIN_SZG01672          3.1975756  0.0986732    32.406  &lt; 2e-16 ***\nORIGIN_SZG01684          1.6562353  0.0992001    16.696  &lt; 2e-16 ***\nORIGIN_SZG01685          2.1787343  0.0986499    22.086  &lt; 2e-16 ***\nORIGIN_SZG01686          1.9312217  0.0986515    19.576  &lt; 2e-16 ***\nORIGIN_SZG01687          1.7562636  0.0987698    17.781  &lt; 2e-16 ***\nORIGIN_SZG01688          1.2313559  0.0988446    12.457  &lt; 2e-16 ***\nORIGIN_SZG01689          0.7493438  0.0992205     7.552 4.28e-14 ***\nORIGIN_SZG01690          2.1807558  0.0987171    22.091  &lt; 2e-16 ***\nORIGIN_SZG01691          2.8849264  0.0986078    29.257  &lt; 2e-16 ***\nORIGIN_SZG01692          2.2447662  0.0988234    22.715  &lt; 2e-16 ***\nORIGIN_SZG01706          2.1455223  0.0986983    21.738  &lt; 2e-16 ***\nORIGIN_SZG01707          1.9750255  0.0986357    20.023  &lt; 2e-16 ***\nORIGIN_SZG01708          2.5428135  0.0985960    25.790  &lt; 2e-16 ***\nORIGIN_SZG01709          1.6281229  0.0987248    16.492  &lt; 2e-16 ***\nORIGIN_SZG01710          2.8145181  0.0985994    28.545  &lt; 2e-16 ***\nORIGIN_SZG01711          2.5427687  0.0986311    25.781  &lt; 2e-16 ***\nORIGIN_SZG01712          3.2476576  0.0985714    32.947  &lt; 2e-16 ***\nORIGIN_SZG01713          0.8820137  0.0992711     8.885  &lt; 2e-16 ***\nORIGIN_SZG01714          3.3689406  0.0986177    34.162  &lt; 2e-16 ***\nORIGIN_SZG01727          2.2165024  0.0986473    22.469  &lt; 2e-16 ***\nORIGIN_SZG01728          2.1221386  0.0986261    21.517  &lt; 2e-16 ***\nORIGIN_SZG01729          1.7889814  0.0986678    18.131  &lt; 2e-16 ***\nORIGIN_SZG01730         -0.1044820  0.1005171    -1.039 0.298597    \nORIGIN_SZG01731          2.2652337  0.0986580    22.960  &lt; 2e-16 ***\nORIGIN_SZG01732          2.9420641  0.0985819    29.844  &lt; 2e-16 ***\nORIGIN_SZG01733          2.6888900  0.0986142    27.267  &lt; 2e-16 ***\nORIGIN_SZG01734          2.9705754  0.0986058    30.126  &lt; 2e-16 ***\nORIGIN_SZG01735          4.0738733  0.0986798    41.284  &lt; 2e-16 ***\nORIGIN_SZG01748          1.1387380  0.0989410    11.509  &lt; 2e-16 ***\nORIGIN_SZG01749          1.9610441  0.0986381    19.881  &lt; 2e-16 ***\nORIGIN_SZG01750          1.1567078  0.0987716    11.711  &lt; 2e-16 ***\nORIGIN_SZG01751          0.8726741  0.0990651     8.809  &lt; 2e-16 ***\nORIGIN_SZG01753          2.9540179  0.0985895    29.963  &lt; 2e-16 ***\nORIGIN_SZG01754          3.2681043  0.0985710    33.155  &lt; 2e-16 ***\nORIGIN_SZG01755          2.7378283  0.0986113    27.764  &lt; 2e-16 ***\nORIGIN_SZG01756          2.7094255  0.0986519    27.464  &lt; 2e-16 ***\nORIGIN_SZG01757          0.6053841  0.1014950     5.965 2.45e-09 ***\nORIGIN_SZG01769          1.8875925  0.0986772    19.129  &lt; 2e-16 ***\nORIGIN_SZG01770          2.0223435  0.0988605    20.457  &lt; 2e-16 ***\nORIGIN_SZG01771          0.7651017  0.0990042     7.728 1.09e-14 ***\nORIGIN_SZG01772          0.3238562  0.1012251     3.199 0.001377 ** \nORIGIN_SZG01774          2.6675723  0.0986062    27.053  &lt; 2e-16 ***\nORIGIN_SZG01775          2.3080203  0.0986608    23.393  &lt; 2e-16 ***\nORIGIN_SZG01776          3.4141958  0.0985741    34.636  &lt; 2e-16 ***\nORIGIN_SZG01777          3.4152339  0.0985914    34.640  &lt; 2e-16 ***\nORIGIN_SZG01778          2.3400723  0.0991016    23.613  &lt; 2e-16 ***\nORIGIN_SZG01790          2.4995522  0.0986313    25.342  &lt; 2e-16 ***\nORIGIN_SZG01791          1.8282101  0.0987128    18.520  &lt; 2e-16 ***\nORIGIN_SZG01792          1.8817174  0.0987205    19.061  &lt; 2e-16 ***\nORIGIN_SZG01793          0.2608371  0.0994069     2.624 0.008692 ** \nORIGIN_SZG01794          0.4914079  0.1022218     4.807 1.53e-06 ***\nORIGIN_SZG01795         -0.6407627  0.1038125    -6.172 6.73e-10 ***\nORIGIN_SZG01796          3.0915694  0.0986027    31.354  &lt; 2e-16 ***\nORIGIN_SZG01797          3.0773555  0.0985912    31.213  &lt; 2e-16 ***\nORIGIN_SZG01798          3.2717605  0.0985916    33.185  &lt; 2e-16 ***\nORIGIN_SZG01799          2.3290881  0.0987988    23.574  &lt; 2e-16 ***\nORIGIN_SZG01800          1.0420650  0.1021109    10.205  &lt; 2e-16 ***\nORIGIN_SZG01811          1.6097856  0.0987750    16.298  &lt; 2e-16 ***\nORIGIN_SZG01812          2.7581055  0.0985806    27.978  &lt; 2e-16 ***\nORIGIN_SZG01813          2.7224362  0.0985904    27.614  &lt; 2e-16 ***\nORIGIN_SZG01817          2.8615070  0.0986512    29.006  &lt; 2e-16 ***\nORIGIN_SZG01818          2.9768612  0.0986097    30.188  &lt; 2e-16 ***\nORIGIN_SZG01819          3.2884978  0.0985837    33.357  &lt; 2e-16 ***\nORIGIN_SZG01820          0.1960580  0.1038355     1.888 0.059004 .  \nORIGIN_SZG01832          2.3935379  0.0986515    24.263  &lt; 2e-16 ***\nORIGIN_SZG01833          1.7846422  0.0986883    18.084  &lt; 2e-16 ***\nORIGIN_SZG01834          2.3167307  0.0986182    23.492  &lt; 2e-16 ***\nORIGIN_SZG01835          1.6682869  0.0987815    16.889  &lt; 2e-16 ***\nORIGIN_SZG01837         -0.6784008  0.1157524    -5.861 4.61e-09 ***\nORIGIN_SZG01839          2.3755877  0.0987301    24.061  &lt; 2e-16 ***\nORIGIN_SZG01840          4.1597130  0.0985554    42.207  &lt; 2e-16 ***\nORIGIN_SZG01841         -0.1518781  0.1043326    -1.456 0.145473    \nORIGIN_SZG01842          3.2202230  0.0990615    32.507  &lt; 2e-16 ***\nORIGIN_SZG01853          2.1826116  0.0986374    22.128  &lt; 2e-16 ***\nORIGIN_SZG01854          2.5404956  0.0986215    25.760  &lt; 2e-16 ***\nORIGIN_SZG01855          2.7716414  0.0986007    28.110  &lt; 2e-16 ***\nORIGIN_SZG01858          0.6143928  0.1016953     6.042 1.53e-09 ***\nORIGIN_SZG01860          3.3501458  0.0988519    33.891  &lt; 2e-16 ***\nORIGIN_SZG01861          3.2150641  0.0986163    32.602  &lt; 2e-16 ***\nORIGIN_SZG01874          2.4239809  0.0986905    24.561  &lt; 2e-16 ***\nORIGIN_SZG01875          0.8156949  0.0992776     8.216  &lt; 2e-16 ***\nORIGIN_SZG01876          2.7338436  0.0989847    27.619  &lt; 2e-16 ***\nORIGIN_SZG01877          2.4499422  0.0986280    24.840  &lt; 2e-16 ***\nORIGIN_SZG01880         -0.7173334  0.1107526    -6.477 9.36e-11 ***\nORIGIN_SZG01882          3.0850529  0.0986336    31.278  &lt; 2e-16 ***\nORIGIN_SZG01883          3.1100106  0.0988851    31.451  &lt; 2e-16 ***\nORIGIN_SZG01895          2.4837962  0.0986246    25.184  &lt; 2e-16 ***\nORIGIN_SZG01896          0.9788793  0.0989856     9.889  &lt; 2e-16 ***\nORIGIN_SZG01897          1.7836799  0.0988934    18.036  &lt; 2e-16 ***\nORIGIN_SZG01898         -2.8292539  0.1650832   -17.138  &lt; 2e-16 ***\nORIGIN_SZG01901         -0.6969559  0.1147556    -6.073 1.25e-09 ***\nORIGIN_SZG01903          2.3043092  0.0988896    23.302  &lt; 2e-16 ***\nORIGIN_SZG01917          1.2289143  0.0989182    12.424  &lt; 2e-16 ***\nORIGIN_SZG01918          2.9108338  0.0986733    29.500  &lt; 2e-16 ***\nORIGIN_SZG01919          2.4461867  0.0986446    24.798  &lt; 2e-16 ***\nORIGIN_SZG01922          0.4786235  0.1024714     4.671 3.00e-06 ***\nORIGIN_SZG01924          2.3917884  0.0989323    24.176  &lt; 2e-16 ***\nORIGIN_SZG01937          1.9111593  0.0987388    19.356  &lt; 2e-16 ***\nORIGIN_SZG01938          2.7096262  0.0986120    27.478  &lt; 2e-16 ***\nORIGIN_SZG01939          3.2761848  0.0985952    33.229  &lt; 2e-16 ***\nORIGIN_SZG01942         -0.6909207  0.1091164    -6.332 2.42e-10 ***\nORIGIN_SZG01959          1.5511152  0.0988702    15.688  &lt; 2e-16 ***\nORIGIN_SZG01960          3.4583885  0.0985578    35.090  &lt; 2e-16 ***\nORIGIN_SZG01961          2.2109843  0.0987403    22.392  &lt; 2e-16 ***\nORIGIN_SZG01962          3.1393496  0.0986064    31.837  &lt; 2e-16 ***\nORIGIN_SZG01964         -1.6430809  0.1321384   -12.435  &lt; 2e-16 ***\nORIGIN_SZG01979          1.8355212  0.0988104    18.576  &lt; 2e-16 ***\nORIGIN_SZG01980          0.2927754  0.0994372     2.944 0.003237 ** \nORIGIN_SZG01981          2.7646118  0.0986078    28.036  &lt; 2e-16 ***\nORIGIN_SZG01982          1.7668349  0.0990825    17.832  &lt; 2e-16 ***\nORIGIN_SZG01983          3.2021623  0.0986073    32.474  &lt; 2e-16 ***\nORIGIN_SZG01984          1.9614606  0.0987834    19.856  &lt; 2e-16 ***\nORIGIN_SZG01985          2.4615701  0.0987049    24.939  &lt; 2e-16 ***\nORIGIN_SZG02001          2.0977833  0.0986815    21.258  &lt; 2e-16 ***\nORIGIN_SZG02002          2.8616936  0.0985868    29.027  &lt; 2e-16 ***\nORIGIN_SZG02003          2.4476565  0.0986404    24.814  &lt; 2e-16 ***\nORIGIN_SZG02004          3.3354458  0.0985990    33.828  &lt; 2e-16 ***\nORIGIN_SZG02005          3.1424506  0.0985999    31.871  &lt; 2e-16 ***\nORIGIN_SZG02006          1.7223779  0.0989269    17.411  &lt; 2e-16 ***\nORIGIN_SZG02007          1.0885258  0.0997571    10.912  &lt; 2e-16 ***\nORIGIN_SZG02022          2.7418142  0.0986763    27.786  &lt; 2e-16 ***\nORIGIN_SZG02023          3.0830691  0.0985834    31.274  &lt; 2e-16 ***\nORIGIN_SZG02024          2.4982641  0.0986242    25.331  &lt; 2e-16 ***\nORIGIN_SZG02025          2.7162266  0.0986191    27.543  &lt; 2e-16 ***\nORIGIN_SZG02026          1.2812077  0.0991712    12.919  &lt; 2e-16 ***\nORIGIN_SZG02027          3.3510347  0.0985932    33.989  &lt; 2e-16 ***\nORIGIN_SZG02043          1.8569489  0.0987935    18.796  &lt; 2e-16 ***\nORIGIN_SZG02044          2.7705940  0.0986030    28.098  &lt; 2e-16 ***\nORIGIN_SZG02045         -1.3146935  0.1234239   -10.652  &lt; 2e-16 ***\nORIGIN_SZG02046          2.7328006  0.0985901    27.719  &lt; 2e-16 ***\nORIGIN_SZG02047          2.7401477  0.0986423    27.779  &lt; 2e-16 ***\nORIGIN_SZG02048          2.9032717  0.0986188    29.439  &lt; 2e-16 ***\nORIGIN_SZG02049          1.9270280  0.0994360    19.380  &lt; 2e-16 ***\nORIGIN_SZG02064          2.7031801  0.0986292    27.408  &lt; 2e-16 ***\nORIGIN_SZG02065          1.3369407  0.0988521    13.525  &lt; 2e-16 ***\nORIGIN_SZG02066          1.1770840  0.1006198    11.698  &lt; 2e-16 ***\nORIGIN_SZG02067          3.8530358  0.0985524    39.096  &lt; 2e-16 ***\nORIGIN_SZG02068          2.8046819  0.0987395    28.405  &lt; 2e-16 ***\nORIGIN_SZG02069          2.7373696  0.0986607    27.745  &lt; 2e-16 ***\nORIGIN_SZG02085          1.4693296  0.0989399    14.851  &lt; 2e-16 ***\nORIGIN_SZG02086          2.9791866  0.0985950    30.216  &lt; 2e-16 ***\nORIGIN_SZG02087          1.7772203  0.0987647    17.994  &lt; 2e-16 ***\nORIGIN_SZG02088          2.4184316  0.0986168    24.524  &lt; 2e-16 ***\nORIGIN_SZG02089          2.1786481  0.0987200    22.069  &lt; 2e-16 ***\nORIGIN_SZG02090          3.4607407  0.0985737    35.108  &lt; 2e-16 ***\nORIGIN_SZG02091         -0.6835419  0.1196541    -5.713 1.11e-08 ***\nORIGIN_SZG02105         -0.6512647  0.1411132    -4.615 3.93e-06 ***\nORIGIN_SZG02106          0.0060840  0.1002623     0.061 0.951613    \nORIGIN_SZG02107          1.1348333  0.0989291    11.471  &lt; 2e-16 ***\nORIGIN_SZG02108          2.4400761  0.0986568    24.733  &lt; 2e-16 ***\nORIGIN_SZG02109          2.6839826  0.0986141    27.217  &lt; 2e-16 ***\nORIGIN_SZG02110          2.1663392  0.0987663    21.934  &lt; 2e-16 ***\nORIGIN_SZG02111         -0.0513780  0.1060312    -0.485 0.627992    \nORIGIN_SZG02128          1.0731205  0.0993467    10.802  &lt; 2e-16 ***\nORIGIN_SZG02129          0.5275685  0.0995538     5.299 1.16e-07 ***\nORIGIN_SZG02130          2.8993957  0.0985895    29.409  &lt; 2e-16 ***\nORIGIN_SZG02131          3.3182361  0.0986107    33.650  &lt; 2e-16 ***\nORIGIN_SZG02132          2.4213364  0.0986858    24.536  &lt; 2e-16 ***\nORIGIN_SZG02148          1.7869479  0.0991098    18.030  &lt; 2e-16 ***\nORIGIN_SZG02149          0.4344101  0.0996990     4.357 1.32e-05 ***\nORIGIN_SZG02150          2.9126278  0.0986143    29.536  &lt; 2e-16 ***\nORIGIN_SZG02151          3.2783793  0.0985737    33.258  &lt; 2e-16 ***\nORIGIN_SZG02152          3.5189307  0.0985836    35.695  &lt; 2e-16 ***\nORIGIN_SZG02153          2.9359366  0.0986627    29.757  &lt; 2e-16 ***\nORIGIN_SZG02171          1.8427294  0.0987535    18.660  &lt; 2e-16 ***\nORIGIN_SZG02172          2.2159198  0.0988061    22.427  &lt; 2e-16 ***\nORIGIN_SZG02173          2.4616155  0.0986438    24.955  &lt; 2e-16 ***\nORIGIN_SZG02174          2.8576752  0.0986440    28.970  &lt; 2e-16 ***\nORIGIN_SZG02191          1.6695616  0.0990088    16.863  &lt; 2e-16 ***\nORIGIN_SZG02192          1.2789126  0.0990846    12.907  &lt; 2e-16 ***\nORIGIN_SZG02193          2.4115893  0.0986868    24.437  &lt; 2e-16 ***\nORIGIN_SZG02194          2.6941643  0.0986377    27.314  &lt; 2e-16 ***\nORIGIN_SZG02195          2.0501425  0.1004921    20.401  &lt; 2e-16 ***\nORIGIN_SZG02212         -0.7365207  0.1267995    -5.809 6.30e-09 ***\nORIGIN_SZG02213         -0.8622368  0.1056012    -8.165 3.21e-16 ***\nORIGIN_SZG02214          0.6193999  0.1014164     6.107 1.01e-09 ***\nORIGIN_SZG02215          2.4057317  0.0987229    24.369  &lt; 2e-16 ***\nORIGIN_SZG02216          1.4433376  0.0990717    14.569  &lt; 2e-16 ***\nORIGIN_SZG02233         -0.5175908  0.1058464    -4.890 1.01e-06 ***\nORIGIN_SZG02234          1.5171228  0.1003830    15.113  &lt; 2e-16 ***\nORIGIN_SZG02235          1.3365251  0.0993346    13.455  &lt; 2e-16 ***\nORIGIN_SZG02236          1.2240579  0.0993011    12.327  &lt; 2e-16 ***\nORIGIN_SZG02237         -0.9052932  0.1120605    -8.079 6.55e-16 ***\nORIGIN_SZG02256         -0.5710006  0.1105491    -5.165 2.40e-07 ***\nORIGIN_SZG02257          0.9104650  0.1001961     9.087  &lt; 2e-16 ***\nORIGIN_SZG02258          0.2698054  0.1000460     2.697 0.007001 ** \nORIGIN_SZG02259          0.1406211  0.1045659     1.345 0.178687    \nORIGIN_SZG02277          0.5541715  0.1060189     5.227 1.72e-07 ***\nORIGIN_SZG02278          1.4937252  0.0996205    14.994  &lt; 2e-16 ***\nORIGIN_SZG02279          0.4141965  0.1003152     4.129 3.64e-05 ***\nORIGIN_SZG02280         -1.2967259  0.1407466    -9.213  &lt; 2e-16 ***\nORIGIN_SZG02297          2.6936409  0.0988969    27.237  &lt; 2e-16 ***\nORIGIN_SZG02300         -1.0637337  0.1150743    -9.244  &lt; 2e-16 ***\nORIGIN_SZG02301          0.6425035  0.1001687     6.414 1.42e-10 ***\nORIGIN_SZG02318          0.9700321  0.1001614     9.685  &lt; 2e-16 ***\nORIGIN_SZG02319          1.9660711  0.0990119    19.857  &lt; 2e-16 ***\nORIGIN_SZG02322          1.6595221  0.0992308    16.724  &lt; 2e-16 ***\nORIGIN_SZG02337          2.6093240  0.0996678    26.180  &lt; 2e-16 ***\nORIGIN_SZG02341          2.2708282  0.0989132    22.958  &lt; 2e-16 ***\nORIGIN_SZG02343          1.2910459  0.0994883    12.977  &lt; 2e-16 ***\nORIGIN_SZG02361          1.9345366  0.0990612    19.529  &lt; 2e-16 ***\nORIGIN_SZG02364         -1.2269004  0.1177200   -10.422  &lt; 2e-16 ***\nORIGIN_SZG02379          2.0455490  0.0999794    20.460  &lt; 2e-16 ***\nORIGIN_SZG02384          1.8200275  0.0995506    18.282  &lt; 2e-16 ***\nORIGIN_SZG02405          1.5578598  0.0995296    15.652  &lt; 2e-16 ***\nORIGIN_SZG02406          0.1127001  0.1039303     1.084 0.278196    \nORIGIN_SZG02426          1.8516375  0.1019508    18.162  &lt; 2e-16 ***\nORIGIN_SZG02427          2.5177885  0.0990601    25.417  &lt; 2e-16 ***\nORIGIN_SZG02505          1.7026231  0.1049810    16.218  &lt; 2e-16 ***\nlog(DEST_BIZ_COUNT)      0.0978385  0.0001802   542.881  &lt; 2e-16 ***\nlog(DEST_FnB_COUNT)     -0.1492237  0.0002565  -581.698  &lt; 2e-16 ***\nlog(DEST_FINSERV_COUNT)  0.4976232  0.0002042  2437.326  &lt; 2e-16 ***\nlog(dist)               -1.4885748  0.0002601 -5723.301  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98771330  on 65139  degrees of freedom\nResidual deviance: 37397685  on 64320  degrees of freedom\nAIC: 37757526\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM$data$MORNING_PEAK, orcSIM$fitted.values)\n\n[1] 0.3130585\n\n\n\nAnalysis\nNot all the attractiveness values used in this study has impact the number of trips people take in the morning peak hour. This model suggests that increases in the business count and financial services count are associated with an increase in the number of trips. Increase in F&B Outlet doesn’t have much impact on trips generation to destination. The negative coefficient for distance indicates that as the distance increases, the number of trips decreases, is expected."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#destination-constrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#destination-constrained",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Destination constrained",
    "text": "Destination constrained\nIn this section, we will fit a destination constrained SIM by using the code chunk below.\n\ndecSIM &lt;- glm(formula = MORNING_PEAK ~ \n                DESTIN_SZ + \n                log(ORIG_BUSSTOP_COUNT) +\n                log(ORIG_TEXIT_COUNT) +\n                log(ORIG_HDB_COUNT) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\nCall:\nglm(formula = MORNING_PEAK ~ DESTIN_SZ + log(ORIG_BUSSTOP_COUNT) + \n    log(ORIG_TEXIT_COUNT) + log(ORIG_HDB_COUNT) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                          Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)              1.551e+01  4.597e-02   337.332  &lt; 2e-16 ***\nDESTIN_SZG00044          2.215e+00  5.052e-02    43.850  &lt; 2e-16 ***\nDESTIN_SZG00046          1.320e+00  5.001e-02    26.390  &lt; 2e-16 ***\nDESTIN_SZG00066          4.598e-01  6.322e-02     7.273 3.51e-13 ***\nDESTIN_SZG00067          1.177e+00  4.771e-02    24.671  &lt; 2e-16 ***\nDESTIN_SZG00068          1.211e+00  4.970e-02    24.375  &lt; 2e-16 ***\nDESTIN_SZG00086         -1.976e-03  5.740e-02    -0.034 0.972533    \nDESTIN_SZG00087         -1.452e+00  9.841e-02   -14.756  &lt; 2e-16 ***\nDESTIN_SZG00088          3.149e-01  4.885e-02     6.446 1.15e-10 ***\nDESTIN_SZG00089          7.826e-01  5.063e-02    15.457  &lt; 2e-16 ***\nDESTIN_SZG00090         -2.834e+00  5.021e-01    -5.645 1.66e-08 ***\nDESTIN_SZG00109          5.016e-01  5.244e-02     9.564  &lt; 2e-16 ***\nDESTIN_SZG00110         -1.945e+00  1.105e-01   -17.601  &lt; 2e-16 ***\nDESTIN_SZG00111          1.337e+00  4.726e-02    28.285  &lt; 2e-16 ***\nDESTIN_SZG00112         -9.178e-01  5.485e-02   -16.734  &lt; 2e-16 ***\nDESTIN_SZG00128          8.833e-01  5.091e-02    17.349  &lt; 2e-16 ***\nDESTIN_SZG00129         -2.226e+00  1.215e-01   -18.313  &lt; 2e-16 ***\nDESTIN_SZG00130          3.197e-01  5.082e-02     6.290 3.17e-10 ***\nDESTIN_SZG00131         -2.469e-01  5.197e-02    -4.752 2.02e-06 ***\nDESTIN_SZG00132          9.103e-01  4.822e-02    18.879  &lt; 2e-16 ***\nDESTIN_SZG00133          4.684e-01  4.753e-02     9.855  &lt; 2e-16 ***\nDESTIN_SZG00134          7.310e-01  4.736e-02    15.436  &lt; 2e-16 ***\nDESTIN_SZG00150          6.856e-01  5.228e-02    13.114  &lt; 2e-16 ***\nDESTIN_SZG00151          3.563e-01  5.055e-02     7.049 1.80e-12 ***\nDESTIN_SZG00152          1.665e+00  4.782e-02    34.823  &lt; 2e-16 ***\nDESTIN_SZG00153          1.023e+00  4.760e-02    21.484  &lt; 2e-16 ***\nDESTIN_SZG00154         -8.599e-01  5.304e-02   -16.214  &lt; 2e-16 ***\nDESTIN_SZG00155         -8.322e-02  4.900e-02    -1.699 0.089409 .  \nDESTIN_SZG00156          6.732e-01  4.947e-02    13.608  &lt; 2e-16 ***\nDESTIN_SZG00172         -1.006e+00  6.377e-02   -15.779  &lt; 2e-16 ***\nDESTIN_SZG00174          6.730e-01  4.810e-02    13.992  &lt; 2e-16 ***\nDESTIN_SZG00175          6.175e-01  4.706e-02    13.123  &lt; 2e-16 ***\nDESTIN_SZG00176         -8.213e-01  5.316e-02   -15.449  &lt; 2e-16 ***\nDESTIN_SZG00195         -5.173e-01  5.471e-02    -9.455  &lt; 2e-16 ***\nDESTIN_SZG00196          7.339e-01  4.700e-02    15.616  &lt; 2e-16 ***\nDESTIN_SZG00197         -1.922e+00  9.784e-02   -19.641  &lt; 2e-16 ***\nDESTIN_SZG00215          5.199e-01  5.349e-02     9.720  &lt; 2e-16 ***\nDESTIN_SZG00216         -3.947e-02  4.854e-02    -0.813 0.416104    \nDESTIN_SZG00217          1.218e+00  4.676e-02    26.047  &lt; 2e-16 ***\nDESTIN_SZG00237         -2.206e-01  5.402e-02    -4.083 4.45e-05 ***\nDESTIN_SZG00238          1.308e-01  4.820e-02     2.713 0.006661 ** \nDESTIN_SZG00239          1.989e-01  5.461e-02     3.642 0.000270 ***\nDESTIN_SZG00257          7.766e-01  4.823e-02    16.102  &lt; 2e-16 ***\nDESTIN_SZG00258         -4.100e-01  4.980e-02    -8.234  &lt; 2e-16 ***\nDESTIN_SZG00259          9.948e-01  4.745e-02    20.966  &lt; 2e-16 ***\nDESTIN_SZG00278          8.176e-01  4.838e-02    16.902  &lt; 2e-16 ***\nDESTIN_SZG00279          3.646e-01  4.759e-02     7.660 1.86e-14 ***\nDESTIN_SZG00280          9.503e-01  4.745e-02    20.026  &lt; 2e-16 ***\nDESTIN_SZG00298         -2.307e+00  1.402e-01   -16.457  &lt; 2e-16 ***\nDESTIN_SZG00299          6.175e-01  4.866e-02    12.689  &lt; 2e-16 ***\nDESTIN_SZG00300         -8.917e-02  4.887e-02    -1.825 0.068066 .  \nDESTIN_SZG00320          8.379e-01  4.774e-02    17.549  &lt; 2e-16 ***\nDESTIN_SZG00321         -3.577e-02  5.125e-02    -0.698 0.485272    \nDESTIN_SZG00322          1.743e+00  4.733e-02    36.828  &lt; 2e-16 ***\nDESTIN_SZG00340          2.094e+00  4.717e-02    44.398  &lt; 2e-16 ***\nDESTIN_SZG00341          8.530e-01  4.738e-02    18.002  &lt; 2e-16 ***\nDESTIN_SZG00342          1.447e+00  4.699e-02    30.787  &lt; 2e-16 ***\nDESTIN_SZG00363          7.929e-01  4.779e-02    16.593  &lt; 2e-16 ***\nDESTIN_SZG00364          2.286e+00  4.651e-02    49.158  &lt; 2e-16 ***\nDESTIN_SZG00383          1.116e+00  4.673e-02    23.876  &lt; 2e-16 ***\nDESTIN_SZG00384          1.547e+00  4.662e-02    33.179  &lt; 2e-16 ***\nDESTIN_SZG00385          1.208e+00  4.824e-02    25.048  &lt; 2e-16 ***\nDESTIN_SZG00404          1.603e+00  4.822e-02    33.248  &lt; 2e-16 ***\nDESTIN_SZG00405          1.419e+00  4.701e-02    30.178  &lt; 2e-16 ***\nDESTIN_SZG00406          1.301e+00  4.618e-02    28.165  &lt; 2e-16 ***\nDESTIN_SZG00407          1.502e+00  4.667e-02    32.184  &lt; 2e-16 ***\nDESTIN_SZG00408          2.550e+00  4.613e-02    55.272  &lt; 2e-16 ***\nDESTIN_SZG00425          1.668e-02  5.164e-02     0.323 0.746658    \nDESTIN_SZG00426          8.904e-01  4.703e-02    18.932  &lt; 2e-16 ***\nDESTIN_SZG00427         -1.642e+00  5.140e-02   -31.935  &lt; 2e-16 ***\nDESTIN_SZG00428          4.852e-01  4.706e-02    10.310  &lt; 2e-16 ***\nDESTIN_SZG00429          1.408e-01  5.120e-02     2.750 0.005967 ** \nDESTIN_SZG00446          5.624e-01  5.092e-02    11.044  &lt; 2e-16 ***\nDESTIN_SZG00447         -3.485e-02  4.901e-02    -0.711 0.476969    \nDESTIN_SZG00448          4.120e-01  4.732e-02     8.707  &lt; 2e-16 ***\nDESTIN_SZG00449          4.620e-01  4.654e-02     9.927  &lt; 2e-16 ***\nDESTIN_SZG00450         -2.209e-03  4.741e-02    -0.047 0.962843    \nDESTIN_SZG00468          8.495e-01  4.700e-02    18.074  &lt; 2e-16 ***\nDESTIN_SZG00469          8.743e-02  4.669e-02     1.873 0.061119 .  \nDESTIN_SZG00470          4.663e-01  4.641e-02    10.048  &lt; 2e-16 ***\nDESTIN_SZG00471          3.165e-01  4.842e-02     6.537 6.28e-11 ***\nDESTIN_SZG00488          1.930e-01  5.101e-02     3.784 0.000154 ***\nDESTIN_SZG00489         -1.528e+00  6.586e-02   -23.199  &lt; 2e-16 ***\nDESTIN_SZG00490          6.931e-01  4.667e-02    14.851  &lt; 2e-16 ***\nDESTIN_SZG00491         -1.308e+00  4.824e-02   -27.119  &lt; 2e-16 ***\nDESTIN_SZG00493         -1.944e+00  6.740e-02   -28.843  &lt; 2e-16 ***\nDESTIN_SZG00494         -2.968e-01  5.081e-02    -5.842 5.17e-09 ***\nDESTIN_SZG00509          1.361e-01  4.816e-02     2.825 0.004723 ** \nDESTIN_SZG00510          7.675e-01  4.693e-02    16.355  &lt; 2e-16 ***\nDESTIN_SZG00511          2.992e-01  4.637e-02     6.451 1.11e-10 ***\nDESTIN_SZG00512          2.855e-01  4.631e-02     6.165 7.06e-10 ***\nDESTIN_SZG00513          1.421e+00  4.647e-02    30.578  &lt; 2e-16 ***\nDESTIN_SZG00514          6.906e-01  4.737e-02    14.578  &lt; 2e-16 ***\nDESTIN_SZG00515         -3.409e-01  5.431e-02    -6.277 3.45e-10 ***\nDESTIN_SZG00530         -5.472e-01  5.461e-02   -10.021  &lt; 2e-16 ***\nDESTIN_SZG00531          1.890e+00  4.628e-02    40.852  &lt; 2e-16 ***\nDESTIN_SZG00532          3.558e-01  4.674e-02     7.611 2.72e-14 ***\nDESTIN_SZG00533          1.853e+00  4.601e-02    40.260  &lt; 2e-16 ***\nDESTIN_SZG00534          3.934e-01  4.634e-02     8.489  &lt; 2e-16 ***\nDESTIN_SZG00536         -2.728e-01  4.916e-02    -5.549 2.88e-08 ***\nDESTIN_SZG00537         -6.679e-01  5.683e-02   -11.753  &lt; 2e-16 ***\nDESTIN_SZG00538         -1.352e+00  6.249e-02   -21.631  &lt; 2e-16 ***\nDESTIN_SZG00539         -4.442e+00  5.792e-01    -7.669 1.73e-14 ***\nDESTIN_SZG00551          1.662e-01  4.920e-02     3.377 0.000732 ***\nDESTIN_SZG00552          1.959e+00  4.707e-02    41.612  &lt; 2e-16 ***\nDESTIN_SZG00553         -1.269e-01  4.669e-02    -2.719 0.006556 ** \nDESTIN_SZG00554         -6.449e-02  4.641e-02    -1.390 0.164679    \nDESTIN_SZG00555          9.274e-01  4.651e-02    19.941  &lt; 2e-16 ***\nDESTIN_SZG00559         -1.548e+00  7.113e-02   -21.768  &lt; 2e-16 ***\nDESTIN_SZG00560          6.609e-01  4.866e-02    13.581  &lt; 2e-16 ***\nDESTIN_SZG00561         -1.170e+00  8.146e-02   -14.361  &lt; 2e-16 ***\nDESTIN_SZG00572         -1.057e-02  5.618e-02    -0.188 0.850706    \nDESTIN_SZG00573          1.182e+00  4.698e-02    25.161  &lt; 2e-16 ***\nDESTIN_SZG00574          3.276e-01  4.869e-02     6.729 1.71e-11 ***\nDESTIN_SZG00575          2.521e+00  4.597e-02    54.838  &lt; 2e-16 ***\nDESTIN_SZG00576          2.577e-01  4.634e-02     5.561 2.68e-08 ***\nDESTIN_SZG00578         -3.046e+00  1.161e-01   -26.242  &lt; 2e-16 ***\nDESTIN_SZG00582         -1.880e+00  8.024e-02   -23.430  &lt; 2e-16 ***\nDESTIN_SZG00583         -3.334e+00  2.230e-01   -14.951  &lt; 2e-16 ***\nDESTIN_SZG00584         -3.502e-01  5.763e-02    -6.077 1.22e-09 ***\nDESTIN_SZG00593         -5.621e-01  5.166e-02   -10.881  &lt; 2e-16 ***\nDESTIN_SZG00594          4.641e-01  4.777e-02     9.714  &lt; 2e-16 ***\nDESTIN_SZG00595          9.451e-01  4.627e-02    20.424  &lt; 2e-16 ***\nDESTIN_SZG00596          3.931e-01  4.620e-02     8.509  &lt; 2e-16 ***\nDESTIN_SZG00597         -1.003e-01  4.841e-02    -2.072 0.038266 *  \nDESTIN_SZG00603         -1.671e+00  6.866e-02   -24.334  &lt; 2e-16 ***\nDESTIN_SZG00604         -2.687e-01  6.390e-02    -4.205 2.61e-05 ***\nDESTIN_SZG00615         -3.510e-01  4.815e-02    -7.289 3.13e-13 ***\nDESTIN_SZG00616          6.716e-01  4.667e-02    14.392  &lt; 2e-16 ***\nDESTIN_SZG00617         -4.663e-01  4.681e-02    -9.963  &lt; 2e-16 ***\nDESTIN_SZG00618          1.814e-01  4.632e-02     3.917 8.98e-05 ***\nDESTIN_SZG00620          6.327e-01  4.718e-02    13.410  &lt; 2e-16 ***\nDESTIN_SZG00637          1.580e-01  4.714e-02     3.352 0.000801 ***\nDESTIN_SZG00638          2.587e-01  4.626e-02     5.592 2.24e-08 ***\nDESTIN_SZG00657          1.154e+00  4.642e-02    24.858  &lt; 2e-16 ***\nDESTIN_SZG00658          5.830e-01  4.629e-02    12.596  &lt; 2e-16 ***\nDESTIN_SZG00659          4.898e-01  4.626e-02    10.590  &lt; 2e-16 ***\nDESTIN_SZG00660          1.041e+00  4.609e-02    22.590  &lt; 2e-16 ***\nDESTIN_SZG00662          5.277e-01  4.722e-02    11.174  &lt; 2e-16 ***\nDESTIN_SZG00677          1.188e+00  4.681e-02    25.376  &lt; 2e-16 ***\nDESTIN_SZG00678         -6.055e-01  4.792e-02   -12.635  &lt; 2e-16 ***\nDESTIN_SZG00679          8.266e-01  4.617e-02    17.902  &lt; 2e-16 ***\nDESTIN_SZG00680          2.359e+00  4.598e-02    51.301  &lt; 2e-16 ***\nDESTIN_SZG00681         -1.095e+00  4.926e-02   -22.224  &lt; 2e-16 ***\nDESTIN_SZG00699          6.347e-01  4.672e-02    13.585  &lt; 2e-16 ***\nDESTIN_SZG00700          3.878e-01  4.639e-02     8.358  &lt; 2e-16 ***\nDESTIN_SZG00701         -1.727e+00  4.970e-02   -34.740  &lt; 2e-16 ***\nDESTIN_SZG00702          6.596e-01  4.615e-02    14.290  &lt; 2e-16 ***\nDESTIN_SZG00704          6.372e-01  4.701e-02    13.555  &lt; 2e-16 ***\nDESTIN_SZG00722         -1.838e-01  4.690e-02    -3.919 8.88e-05 ***\nDESTIN_SZG00725         -1.623e+00  5.315e-02   -30.538  &lt; 2e-16 ***\nDESTIN_SZG00741          1.203e+00  4.643e-02    25.904  &lt; 2e-16 ***\nDESTIN_SZG00743         -2.111e+00  5.044e-02   -41.851  &lt; 2e-16 ***\nDESTIN_SZG00744          6.919e-01  4.617e-02    14.986  &lt; 2e-16 ***\nDESTIN_SZG00761          1.350e+00  4.661e-02    28.956  &lt; 2e-16 ***\nDESTIN_SZG00762         -3.655e-01  4.760e-02    -7.680 1.59e-14 ***\nDESTIN_SZG00763         -1.969e+00  5.021e-02   -39.212  &lt; 2e-16 ***\nDESTIN_SZG00764          1.233e+00  4.605e-02    26.780  &lt; 2e-16 ***\nDESTIN_SZG00765          1.388e-02  4.681e-02     0.297 0.766816    \nDESTIN_SZG00767          4.666e-01  4.640e-02    10.057  &lt; 2e-16 ***\nDESTIN_SZG00772         -7.308e-01  5.744e-02   -12.724  &lt; 2e-16 ***\nDESTIN_SZG00784         -1.547e+00  5.000e-02   -30.945  &lt; 2e-16 ***\nDESTIN_SZG00785          2.183e-01  4.624e-02     4.721 2.35e-06 ***\nDESTIN_SZG00786          4.345e-01  4.618e-02     9.410  &lt; 2e-16 ***\nDESTIN_SZG00787          6.592e-02  4.687e-02     1.407 0.159534    \nDESTIN_SZG00788         -1.079e+00  4.796e-02   -22.504  &lt; 2e-16 ***\nDESTIN_SZG00789         -1.240e+00  4.886e-02   -25.383  &lt; 2e-16 ***\nDESTIN_SZG00803          7.044e-02  4.789e-02     1.471 0.141341    \nDESTIN_SZG00804          6.130e-01  4.638e-02    13.217  &lt; 2e-16 ***\nDESTIN_SZG00805          1.814e+00  4.600e-02    39.425  &lt; 2e-16 ***\nDESTIN_SZG00806          7.922e-02  4.628e-02     1.712 0.086928 .  \nDESTIN_SZG00807          2.565e-01  4.642e-02     5.526 3.28e-08 ***\nDESTIN_SZG00808         -1.327e+00  4.994e-02   -26.564  &lt; 2e-16 ***\nDESTIN_SZG00809          3.639e-01  4.622e-02     7.873 3.45e-15 ***\nDESTIN_SZG00810         -1.327e-01  4.669e-02    -2.842 0.004480 ** \nDESTIN_SZG00814          2.549e-02  4.978e-02     0.512 0.608552    \nDESTIN_SZG00819          5.132e+00  4.777e-02   107.426  &lt; 2e-16 ***\nDESTIN_SZG00824          2.807e-01  4.779e-02     5.873 4.27e-09 ***\nDESTIN_SZG00826          2.707e-01  4.630e-02     5.847 5.00e-09 ***\nDESTIN_SZG00827          1.488e-01  4.633e-02     3.213 0.001315 ** \nDESTIN_SZG00828          4.356e-01  4.616e-02     9.436  &lt; 2e-16 ***\nDESTIN_SZG00829         -1.834e-01  4.662e-02    -3.932 8.41e-05 ***\nDESTIN_SZG00830         -1.055e+00  4.762e-02   -22.161  &lt; 2e-16 ***\nDESTIN_SZG00831          2.104e+00  4.598e-02    45.767  &lt; 2e-16 ***\nDESTIN_SZG00832          2.099e+00  4.603e-02    45.600  &lt; 2e-16 ***\nDESTIN_SZG00835         -3.082e-01  4.977e-02    -6.193 5.91e-10 ***\nDESTIN_SZG00844         -8.671e-02  4.923e-02    -1.761 0.078181 .  \nDESTIN_SZG00846          2.625e-01  4.642e-02     5.656 1.55e-08 ***\nDESTIN_SZG00847          1.109e+00  4.612e-02    24.034  &lt; 2e-16 ***\nDESTIN_SZG00848         -1.128e-03  4.633e-02    -0.024 0.980583    \nDESTIN_SZG00849         -5.636e-01  4.663e-02   -12.087  &lt; 2e-16 ***\nDESTIN_SZG00850          2.706e-01  4.626e-02     5.849 4.94e-09 ***\nDESTIN_SZG00851         -4.919e-02  4.631e-02    -1.062 0.288145    \nDESTIN_SZG00852         -2.924e-01  4.665e-02    -6.269 3.64e-10 ***\nDESTIN_SZG00853          5.763e-01  4.659e-02    12.370  &lt; 2e-16 ***\nDESTIN_SZG00854          3.846e-01  4.800e-02     8.011 1.13e-15 ***\nDESTIN_SZG00855         -4.197e-01  4.986e-02    -8.417  &lt; 2e-16 ***\nDESTIN_SZG00856         -1.278e+00  5.553e-02   -23.019  &lt; 2e-16 ***\nDESTIN_SZG00866          6.886e-01  4.696e-02    14.663  &lt; 2e-16 ***\nDESTIN_SZG00867          1.560e+00  4.613e-02    33.822  &lt; 2e-16 ***\nDESTIN_SZG00868          1.191e+00  4.621e-02    25.770  &lt; 2e-16 ***\nDESTIN_SZG00869          2.000e+00  4.617e-02    43.313  &lt; 2e-16 ***\nDESTIN_SZG00870          1.655e+00  4.600e-02    35.971  &lt; 2e-16 ***\nDESTIN_SZG00871          1.852e+00  4.606e-02    40.212  &lt; 2e-16 ***\nDESTIN_SZG00872          3.824e-01  4.624e-02     8.269  &lt; 2e-16 ***\nDESTIN_SZG00873         -3.599e-02  4.657e-02    -0.773 0.439702    \nDESTIN_SZG00874         -1.245e+00  4.776e-02   -26.073  &lt; 2e-16 ***\nDESTIN_SZG00875         -1.046e+00  5.386e-02   -19.429  &lt; 2e-16 ***\nDESTIN_SZG00876         -4.317e-01  4.970e-02    -8.685  &lt; 2e-16 ***\nDESTIN_SZG00877          4.431e-01  4.800e-02     9.230  &lt; 2e-16 ***\nDESTIN_SZG00887          3.292e-01  4.663e-02     7.060 1.66e-12 ***\nDESTIN_SZG00888         -9.861e-01  4.785e-02   -20.609  &lt; 2e-16 ***\nDESTIN_SZG00889         -1.696e-01  4.763e-02    -3.561 0.000370 ***\nDESTIN_SZG00890          7.364e-01  4.616e-02    15.953  &lt; 2e-16 ***\nDESTIN_SZG00891         -6.553e-01  4.805e-02   -13.637  &lt; 2e-16 ***\nDESTIN_SZG00893          6.924e-01  4.612e-02    15.012  &lt; 2e-16 ***\nDESTIN_SZG00894         -9.625e-01  4.735e-02   -20.325  &lt; 2e-16 ***\nDESTIN_SZG00895          1.550e-01  4.684e-02     3.309 0.000937 ***\nDESTIN_SZG00896         -1.559e+00  5.482e-02   -28.442  &lt; 2e-16 ***\nDESTIN_SZG00897         -1.633e+00  5.334e-02   -30.620  &lt; 2e-16 ***\nDESTIN_SZG00898          2.468e-01  4.801e-02     5.141 2.73e-07 ***\nDESTIN_SZG00908          9.093e-01  4.706e-02    19.322  &lt; 2e-16 ***\nDESTIN_SZG00909          1.714e-01  4.635e-02     3.698 0.000217 ***\nDESTIN_SZG00910         -7.365e-01  4.740e-02   -15.538  &lt; 2e-16 ***\nDESTIN_SZG00911          1.586e+00  4.607e-02    34.429  &lt; 2e-16 ***\nDESTIN_SZG00912         -1.029e-01  4.645e-02    -2.216 0.026717 *  \nDESTIN_SZG00915          1.410e-01  4.629e-02     3.045 0.002324 ** \nDESTIN_SZG00917          1.355e+00  4.624e-02    29.294  &lt; 2e-16 ***\nDESTIN_SZG00918         -2.110e+00  6.081e-02   -34.703  &lt; 2e-16 ***\nDESTIN_SZG00919         -4.130e-01  4.815e-02    -8.578  &lt; 2e-16 ***\nDESTIN_SZG00928         -7.819e-01  4.894e-02   -15.976  &lt; 2e-16 ***\nDESTIN_SZG00929          8.383e-02  4.642e-02     1.806 0.070903 .  \nDESTIN_SZG00930          1.215e+00  4.606e-02    26.389  &lt; 2e-16 ***\nDESTIN_SZG00931         -9.417e-02  4.701e-02    -2.003 0.045178 *  \nDESTIN_SZG00932         -1.732e+00  5.195e-02   -33.343  &lt; 2e-16 ***\nDESTIN_SZG00933          2.862e-01  4.651e-02     6.153 7.59e-10 ***\nDESTIN_SZG00934         -7.059e-02  4.662e-02    -1.514 0.129950    \nDESTIN_SZG00935          2.104e+00  4.598e-02    45.758  &lt; 2e-16 ***\nDESTIN_SZG00938         -3.508e+00  1.800e-01   -19.487  &lt; 2e-16 ***\nDESTIN_SZG00939          2.359e+00  4.604e-02    51.244  &lt; 2e-16 ***\nDESTIN_SZG00940         -4.589e-01  4.949e-02    -9.273  &lt; 2e-16 ***\nDESTIN_SZG00949         -7.237e-01  4.811e-02   -15.042  &lt; 2e-16 ***\nDESTIN_SZG00950          1.272e+00  4.617e-02    27.551  &lt; 2e-16 ***\nDESTIN_SZG00951          2.061e+00  4.599e-02    44.823  &lt; 2e-16 ***\nDESTIN_SZG00952          9.400e-01  4.654e-02    20.196  &lt; 2e-16 ***\nDESTIN_SZG00953          3.295e-01  4.669e-02     7.056 1.71e-12 ***\nDESTIN_SZG00954         -1.544e+00  4.898e-02   -31.523  &lt; 2e-16 ***\nDESTIN_SZG00955          1.257e+00  4.611e-02    27.258  &lt; 2e-16 ***\nDESTIN_SZG00956         -5.538e-01  4.680e-02   -11.833  &lt; 2e-16 ***\nDESTIN_SZG00957         -7.190e-02  4.668e-02    -1.540 0.123483    \nDESTIN_SZG00959         -1.257e-01  5.087e-02    -2.472 0.013445 *  \nDESTIN_SZG00961          4.648e-03  4.742e-02     0.098 0.921916    \nDESTIN_SZG00962          2.091e+00  4.615e-02    45.307  &lt; 2e-16 ***\nDESTIN_SZG00970          6.214e-01  4.631e-02    13.417  &lt; 2e-16 ***\nDESTIN_SZG00971          7.302e-01  4.613e-02    15.830  &lt; 2e-16 ***\nDESTIN_SZG00972          7.116e-02  4.643e-02     1.533 0.125327    \nDESTIN_SZG00974         -3.365e-01  4.707e-02    -7.149 8.71e-13 ***\nDESTIN_SZG00975         -1.299e+00  4.862e-02   -26.709  &lt; 2e-16 ***\nDESTIN_SZG00976         -6.885e-01  4.724e-02   -14.577  &lt; 2e-16 ***\nDESTIN_SZG00977          1.258e-02  4.635e-02     0.271 0.786141    \nDESTIN_SZG00978         -3.528e-01  4.715e-02    -7.483 7.29e-14 ***\nDESTIN_SZG00982         -5.421e-01  4.714e-02   -11.500  &lt; 2e-16 ***\nDESTIN_SZG00983          6.345e+00  4.604e-02   137.800  &lt; 2e-16 ***\nDESTIN_SZG00984          4.707e+00  4.608e-02   102.158  &lt; 2e-16 ***\nDESTIN_SZG00991          6.135e-01  4.639e-02    13.224  &lt; 2e-16 ***\nDESTIN_SZG00992          7.957e-01  4.622e-02    17.216  &lt; 2e-16 ***\nDESTIN_SZG00993         -6.518e-01  4.688e-02   -13.904  &lt; 2e-16 ***\nDESTIN_SZG00994         -7.159e-01  4.724e-02   -15.153  &lt; 2e-16 ***\nDESTIN_SZG00995          9.236e-02  4.657e-02     1.983 0.047342 *  \nDESTIN_SZG00996         -3.699e-01  4.715e-02    -7.846 4.31e-15 ***\nDESTIN_SZG00997          2.371e-01  4.772e-02     4.969 6.73e-07 ***\nDESTIN_SZG00998          5.990e-01  4.627e-02    12.946  &lt; 2e-16 ***\nDESTIN_SZG00999         -3.309e-01  4.692e-02    -7.052 1.76e-12 ***\nDESTIN_SZG01001          9.256e-02  4.843e-02     1.911 0.055981 .  \nDESTIN_SZG01003          1.941e+00  4.602e-02    42.183  &lt; 2e-16 ***\nDESTIN_SZG01004          1.214e+00  4.614e-02    26.300  &lt; 2e-16 ***\nDESTIN_SZG01011          2.304e-01  4.741e-02     4.860 1.17e-06 ***\nDESTIN_SZG01012          1.618e+00  4.628e-02    34.956  &lt; 2e-16 ***\nDESTIN_SZG01013          2.360e-01  4.651e-02     5.073 3.91e-07 ***\nDESTIN_SZG01014         -1.426e+00  4.853e-02   -29.394  &lt; 2e-16 ***\nDESTIN_SZG01015          1.424e+00  4.610e-02    30.892  &lt; 2e-16 ***\nDESTIN_SZG01016          1.654e+00  4.607e-02    35.904  &lt; 2e-16 ***\nDESTIN_SZG01018         -2.186e-01  4.745e-02    -4.606 4.10e-06 ***\nDESTIN_SZG01019          6.069e-01  4.627e-02    13.117  &lt; 2e-16 ***\nDESTIN_SZG01023         -6.574e-01  4.770e-02   -13.782  &lt; 2e-16 ***\nDESTIN_SZG01024          4.575e-01  4.635e-02     9.871  &lt; 2e-16 ***\nDESTIN_SZG01025         -3.447e+00  7.923e-02   -43.513  &lt; 2e-16 ***\nDESTIN_SZG01033          6.979e-01  4.639e-02    15.044  &lt; 2e-16 ***\nDESTIN_SZG01034          1.149e+00  4.613e-02    24.900  &lt; 2e-16 ***\nDESTIN_SZG01035          9.734e-01  4.615e-02    21.092  &lt; 2e-16 ***\nDESTIN_SZG01036          1.585e+00  4.607e-02    34.406  &lt; 2e-16 ***\nDESTIN_SZG01037          4.038e-01  4.630e-02     8.722  &lt; 2e-16 ***\nDESTIN_SZG01043          7.844e-01  4.715e-02    16.636  &lt; 2e-16 ***\nDESTIN_SZG01045          4.032e-01  4.627e-02     8.714  &lt; 2e-16 ***\nDESTIN_SZG01046          7.614e-01  4.625e-02    16.460  &lt; 2e-16 ***\nDESTIN_SZG01053          1.329e+00  4.615e-02    28.786  &lt; 2e-16 ***\nDESTIN_SZG01054          9.887e-01  4.617e-02    21.414  &lt; 2e-16 ***\nDESTIN_SZG01055         -3.657e-02  4.659e-02    -0.785 0.432517    \nDESTIN_SZG01056         -5.953e-01  4.718e-02   -12.618  &lt; 2e-16 ***\nDESTIN_SZG01064         -2.391e+00  9.842e-02   -24.299  &lt; 2e-16 ***\nDESTIN_SZG01066          1.384e+00  4.608e-02    30.026  &lt; 2e-16 ***\nDESTIN_SZG01067          1.300e+00  4.634e-02    28.050  &lt; 2e-16 ***\nDESTIN_SZG01074         -7.191e-01  4.784e-02   -15.033  &lt; 2e-16 ***\nDESTIN_SZG01075          8.751e-01  4.630e-02    18.902  &lt; 2e-16 ***\nDESTIN_SZG01076          9.524e-02  4.639e-02     2.053 0.040085 *  \nDESTIN_SZG01077         -6.019e-01  4.701e-02   -12.803  &lt; 2e-16 ***\nDESTIN_SZG01079          7.507e-01  4.627e-02    16.224  &lt; 2e-16 ***\nDESTIN_SZG01085         -8.186e-01  7.256e-02   -11.281  &lt; 2e-16 ***\nDESTIN_SZG01087          4.676e-01  4.630e-02    10.101  &lt; 2e-16 ***\nDESTIN_SZG01088          9.235e-01  4.622e-02    19.981  &lt; 2e-16 ***\nDESTIN_SZG01094         -2.508e+00  6.652e-02   -37.706  &lt; 2e-16 ***\nDESTIN_SZG01095          3.054e-01  4.780e-02     6.390 1.66e-10 ***\nDESTIN_SZG01096         -2.738e-01  4.820e-02    -5.681 1.34e-08 ***\nDESTIN_SZG01097          1.005e+00  4.610e-02    21.803  &lt; 2e-16 ***\nDESTIN_SZG01098         -1.436e+00  5.072e-02   -28.313  &lt; 2e-16 ***\nDESTIN_SZG01099          1.050e-01  4.654e-02     2.256 0.024059 *  \nDESTIN_SZG01105          1.802e+00  4.671e-02    38.570  &lt; 2e-16 ***\nDESTIN_SZG01106         -2.671e+00  9.646e-02   -27.693  &lt; 2e-16 ***\nDESTIN_SZG01107          5.056e-01  4.649e-02    10.875  &lt; 2e-16 ***\nDESTIN_SZG01108          2.625e+00  4.596e-02    57.115  &lt; 2e-16 ***\nDESTIN_SZG01109         -1.020e+00  5.042e-02   -20.236  &lt; 2e-16 ***\nDESTIN_SZG01116          1.141e-01  4.670e-02     2.443 0.014550 *  \nDESTIN_SZG01117          4.377e-01  4.641e-02     9.430  &lt; 2e-16 ***\nDESTIN_SZG01118         -1.446e+00  4.914e-02   -29.419  &lt; 2e-16 ***\nDESTIN_SZG01119         -6.877e-01  4.702e-02   -14.624  &lt; 2e-16 ***\nDESTIN_SZG01120         -9.021e-01  4.880e-02   -18.485  &lt; 2e-16 ***\nDESTIN_SZG01129         -3.108e-02  4.655e-02    -0.668 0.504360    \nDESTIN_SZG01130          5.939e-01  4.623e-02    12.845  &lt; 2e-16 ***\nDESTIN_SZG01131          2.119e+00  4.618e-02    45.876  &lt; 2e-16 ***\nDESTIN_SZG01136          1.412e+00  4.615e-02    30.599  &lt; 2e-16 ***\nDESTIN_SZG01138         -1.053e+00  4.881e-02   -21.579  &lt; 2e-16 ***\nDESTIN_SZG01139         -1.106e-01  4.642e-02    -2.383 0.017170 *  \nDESTIN_SZG01141          1.021e-01  4.653e-02     2.195 0.028182 *  \nDESTIN_SZG01148         -7.200e-01  5.440e-02   -13.237  &lt; 2e-16 ***\nDESTIN_SZG01149         -3.549e-01  4.774e-02    -7.434 1.05e-13 ***\nDESTIN_SZG01150         -1.279e-01  4.638e-02    -2.759 0.005804 ** \nDESTIN_SZG01151          4.300e-01  4.635e-02     9.278  &lt; 2e-16 ***\nDESTIN_SZG01158         -7.047e-01  4.705e-02   -14.977  &lt; 2e-16 ***\nDESTIN_SZG01159         -5.888e-01  4.671e-02   -12.606  &lt; 2e-16 ***\nDESTIN_SZG01160          9.664e-01  4.609e-02    20.967  &lt; 2e-16 ***\nDESTIN_SZG01171          5.024e-01  4.626e-02    10.860  &lt; 2e-16 ***\nDESTIN_SZG01172          1.910e+00  4.600e-02    41.526  &lt; 2e-16 ***\nDESTIN_SZG01173          1.367e+00  4.617e-02    29.613  &lt; 2e-16 ***\nDESTIN_SZG01174         -1.482e+00  6.183e-02   -23.965  &lt; 2e-16 ***\nDESTIN_SZG01178          1.523e+00  4.605e-02    33.073  &lt; 2e-16 ***\nDESTIN_SZG01179          4.486e-01  4.619e-02     9.712  &lt; 2e-16 ***\nDESTIN_SZG01180          4.598e-01  4.616e-02     9.960  &lt; 2e-16 ***\nDESTIN_SZG01181         -5.877e-01  4.675e-02   -12.573  &lt; 2e-16 ***\nDESTIN_SZG01183          1.242e+00  4.615e-02    26.910  &lt; 2e-16 ***\nDESTIN_SZG01190         -6.481e-01  5.411e-02   -11.978  &lt; 2e-16 ***\nDESTIN_SZG01192          7.710e-01  4.621e-02    16.685  &lt; 2e-16 ***\nDESTIN_SZG01193          7.421e-01  4.621e-02    16.059  &lt; 2e-16 ***\nDESTIN_SZG01194          1.153e+00  4.629e-02    24.902  &lt; 2e-16 ***\nDESTIN_SZG01200          1.184e-01  4.642e-02     2.550 0.010779 *  \nDESTIN_SZG01201         -1.538e-01  4.647e-02    -3.310 0.000933 ***\nDESTIN_SZG01203         -2.958e-02  4.654e-02    -0.636 0.525039    \nDESTIN_SZG01204         -7.525e-02  4.672e-02    -1.611 0.107233    \nDESTIN_SZG01211         -4.263e+00  2.811e-01   -15.164  &lt; 2e-16 ***\nDESTIN_SZG01214         -3.800e-01  4.667e-02    -8.143 3.85e-16 ***\nDESTIN_SZG01215          3.023e-01  4.717e-02     6.408 1.48e-10 ***\nDESTIN_SZG01216          7.564e-01  4.697e-02    16.106  &lt; 2e-16 ***\nDESTIN_SZG01220          3.815e-01  4.630e-02     8.240  &lt; 2e-16 ***\nDESTIN_SZG01221          8.431e-01  4.609e-02    18.292  &lt; 2e-16 ***\nDESTIN_SZG01222         -3.911e-01  4.751e-02    -8.232  &lt; 2e-16 ***\nDESTIN_SZG01223         -6.243e-01  4.721e-02   -13.224  &lt; 2e-16 ***\nDESTIN_SZG01224          6.312e-02  4.656e-02     1.356 0.175212    \nDESTIN_SZG01231         -1.653e+00  7.333e-02   -22.535  &lt; 2e-16 ***\nDESTIN_SZG01232         -4.324e-02  5.198e-02    -0.832 0.405574    \nDESTIN_SZG01235          4.600e-01  4.628e-02     9.941  &lt; 2e-16 ***\nDESTIN_SZG01236          3.504e-01  4.662e-02     7.516 5.65e-14 ***\nDESTIN_SZG01241         -8.204e-01  4.732e-02   -17.335  &lt; 2e-16 ***\nDESTIN_SZG01242         -6.054e-01  4.675e-02   -12.950  &lt; 2e-16 ***\nDESTIN_SZG01243          4.676e-01  4.619e-02    10.124  &lt; 2e-16 ***\nDESTIN_SZG01246         -1.951e-01  4.666e-02    -4.182 2.89e-05 ***\nDESTIN_SZG01256         -3.127e-01  4.668e-02    -6.700 2.09e-11 ***\nDESTIN_SZG01257          7.629e-01  4.631e-02    16.473  &lt; 2e-16 ***\nDESTIN_SZG01258          1.581e+00  4.620e-02    34.227  &lt; 2e-16 ***\nDESTIN_SZG01262         -1.071e+00  4.757e-02   -22.523  &lt; 2e-16 ***\nDESTIN_SZG01263          1.117e+00  4.604e-02    24.248  &lt; 2e-16 ***\nDESTIN_SZG01264          7.876e-02  4.649e-02     1.694 0.090246 .  \nDESTIN_SZG01265          2.433e-01  4.654e-02     5.228 1.71e-07 ***\nDESTIN_SZG01266          5.127e-01  4.639e-02    11.052  &lt; 2e-16 ***\nDESTIN_SZG01267         -9.356e-01  4.861e-02   -19.249  &lt; 2e-16 ***\nDESTIN_SZG01272         -3.769e+00  1.196e-01   -31.515  &lt; 2e-16 ***\nDESTIN_SZG01273          8.187e-01  4.645e-02    17.626  &lt; 2e-16 ***\nDESTIN_SZG01277          9.792e-01  4.612e-02    21.232  &lt; 2e-16 ***\nDESTIN_SZG01278          6.149e-01  4.631e-02    13.279  &lt; 2e-16 ***\nDESTIN_SZG01283          1.580e+00  4.604e-02    34.311  &lt; 2e-16 ***\nDESTIN_SZG01284          1.068e+00  4.607e-02    23.172  &lt; 2e-16 ***\nDESTIN_SZG01285          6.617e-01  4.613e-02    14.344  &lt; 2e-16 ***\nDESTIN_SZG01286         -2.707e-01  4.690e-02    -5.771 7.89e-09 ***\nDESTIN_SZG01289         -2.324e+00  5.904e-02   -39.364  &lt; 2e-16 ***\nDESTIN_SZG01293         -3.399e+00  8.686e-02   -39.129  &lt; 2e-16 ***\nDESTIN_SZG01294          5.485e-01  4.669e-02    11.749  &lt; 2e-16 ***\nDESTIN_SZG01295         -1.471e+00  5.100e-02   -28.837  &lt; 2e-16 ***\nDESTIN_SZG01298          8.540e-02  4.642e-02     1.840 0.065822 .  \nDESTIN_SZG01299         -2.591e-02  4.674e-02    -0.554 0.579265    \nDESTIN_SZG01304          4.222e-01  4.628e-02     9.122  &lt; 2e-16 ***\nDESTIN_SZG01305          5.897e-01  4.611e-02    12.789  &lt; 2e-16 ***\nDESTIN_SZG01307         -6.965e-01  4.975e-02   -13.999  &lt; 2e-16 ***\nDESTIN_SZG01308          7.437e-01  4.623e-02    16.087  &lt; 2e-16 ***\nDESTIN_SZG01310         -4.518e+00  1.945e-01   -23.229  &lt; 2e-16 ***\nDESTIN_SZG01316         -1.095e+00  4.851e-02   -22.565  &lt; 2e-16 ***\nDESTIN_SZG01317         -1.118e+00  4.773e-02   -23.430  &lt; 2e-16 ***\nDESTIN_SZG01318         -1.395e+00  4.853e-02   -28.749  &lt; 2e-16 ***\nDESTIN_SZG01319          1.541e+00  4.604e-02    33.466  &lt; 2e-16 ***\nDESTIN_SZG01320         -7.262e-01  4.782e-02   -15.184  &lt; 2e-16 ***\nDESTIN_SZG01324          5.081e-01  4.845e-02    10.487  &lt; 2e-16 ***\nDESTIN_SZG01325         -1.205e+00  4.803e-02   -25.097  &lt; 2e-16 ***\nDESTIN_SZG01326          1.702e-01  4.624e-02     3.681 0.000232 ***\nDESTIN_SZG01327          3.316e-01  4.621e-02     7.177 7.10e-13 ***\nDESTIN_SZG01328          2.454e-01  4.635e-02     5.294 1.20e-07 ***\nDESTIN_SZG01329          2.921e-01  4.669e-02     6.256 3.94e-10 ***\nDESTIN_SZG01330          1.560e+00  4.620e-02    33.770  &lt; 2e-16 ***\nDESTIN_SZG01331         -4.774e+00  2.623e-01   -18.202  &lt; 2e-16 ***\nDESTIN_SZG01333         -1.159e+00  4.854e-02   -23.875  &lt; 2e-16 ***\nDESTIN_SZG01334         -5.924e-01  4.765e-02   -12.431  &lt; 2e-16 ***\nDESTIN_SZG01335          1.312e+00  4.624e-02    28.377  &lt; 2e-16 ***\nDESTIN_SZG01336         -2.459e+00  7.229e-02   -34.012  &lt; 2e-16 ***\nDESTIN_SZG01337         -2.156e+00  5.447e-02   -39.581  &lt; 2e-16 ***\nDESTIN_SZG01338         -2.382e+00  5.304e-02   -44.912  &lt; 2e-16 ***\nDESTIN_SZG01339          1.252e+00  4.607e-02    27.170  &lt; 2e-16 ***\nDESTIN_SZG01340         -2.719e-01  4.680e-02    -5.810 6.24e-09 ***\nDESTIN_SZG01341         -3.947e+00  1.066e-01   -37.012  &lt; 2e-16 ***\nDESTIN_SZG01346          1.769e-01  4.646e-02     3.808 0.000140 ***\nDESTIN_SZG01347          1.179e+00  4.606e-02    25.596  &lt; 2e-16 ***\nDESTIN_SZG01348         -8.658e-02  4.638e-02    -1.867 0.061940 .  \nDESTIN_SZG01349          9.650e-01  4.621e-02    20.884  &lt; 2e-16 ***\nDESTIN_SZG01350         -1.240e-01  4.758e-02    -2.606 0.009156 ** \nDESTIN_SZG01353          3.079e-01  4.632e-02     6.647 2.99e-11 ***\nDESTIN_SZG01354         -8.876e-01  4.739e-02   -18.731  &lt; 2e-16 ***\nDESTIN_SZG01355         -5.807e-01  4.719e-02   -12.305  &lt; 2e-16 ***\nDESTIN_SZG01357         -1.103e+00  4.953e-02   -22.278  &lt; 2e-16 ***\nDESTIN_SZG01358          1.220e+00  4.607e-02    26.491  &lt; 2e-16 ***\nDESTIN_SZG01359          4.538e-03  4.638e-02     0.098 0.922046    \nDESTIN_SZG01360         -2.303e-01  4.649e-02    -4.953 7.29e-07 ***\nDESTIN_SZG01361         -7.696e-02  4.672e-02    -1.647 0.099547 .  \nDESTIN_SZG01362         -1.525e+00  5.431e-02   -28.082  &lt; 2e-16 ***\nDESTIN_SZG01368         -7.895e-01  4.676e-02   -16.883  &lt; 2e-16 ***\nDESTIN_SZG01369         -6.815e-01  4.670e-02   -14.592  &lt; 2e-16 ***\nDESTIN_SZG01370          1.194e+00  4.606e-02    25.913  &lt; 2e-16 ***\nDESTIN_SZG01371          2.398e-01  4.654e-02     5.153 2.57e-07 ***\nDESTIN_SZG01372          3.116e-01  4.644e-02     6.710 1.94e-11 ***\nDESTIN_SZG01373         -2.617e+00  5.623e-02   -46.547  &lt; 2e-16 ***\nDESTIN_SZG01374         -1.470e+00  4.809e-02   -30.574  &lt; 2e-16 ***\nDESTIN_SZG01375          4.697e-01  4.647e-02    10.108  &lt; 2e-16 ***\nDESTIN_SZG01376         -1.228e+00  4.890e-02   -25.120  &lt; 2e-16 ***\nDESTIN_SZG01379         -3.200e+00  7.807e-02   -40.989  &lt; 2e-16 ***\nDESTIN_SZG01380          1.892e+00  4.599e-02    41.147  &lt; 2e-16 ***\nDESTIN_SZG01381          2.263e+00  4.598e-02    49.219  &lt; 2e-16 ***\nDESTIN_SZG01382          1.341e+00  4.612e-02    29.082  &lt; 2e-16 ***\nDESTIN_SZG01383         -1.406e+00  4.984e-02   -28.213  &lt; 2e-16 ***\nDESTIN_SZG01388         -8.141e-05  4.635e-02    -0.002 0.998598    \nDESTIN_SZG01389         -4.299e-01  4.647e-02    -9.251  &lt; 2e-16 ***\nDESTIN_SZG01390         -9.591e-02  4.641e-02    -2.067 0.038780 *  \nDESTIN_SZG01391          1.002e+00  4.617e-02    21.699  &lt; 2e-16 ***\nDESTIN_SZG01392          8.839e-01  4.753e-02    18.596  &lt; 2e-16 ***\nDESTIN_SZG01393         -3.906e-01  4.670e-02    -8.364  &lt; 2e-16 ***\nDESTIN_SZG01394         -1.086e-02  4.632e-02    -0.235 0.814552    \nDESTIN_SZG01395         -2.717e-01  4.644e-02    -5.850 4.92e-09 ***\nDESTIN_SZG01396          5.533e-01  4.621e-02    11.973  &lt; 2e-16 ***\nDESTIN_SZG01397         -2.348e-01  4.653e-02    -5.046 4.51e-07 ***\nDESTIN_SZG01398         -6.539e-01  4.795e-02   -13.636  &lt; 2e-16 ***\nDESTIN_SZG01400         -6.837e-01  4.723e-02   -14.477  &lt; 2e-16 ***\nDESTIN_SZG01401          1.128e+00  4.604e-02    24.498  &lt; 2e-16 ***\nDESTIN_SZG01402          3.981e-01  4.623e-02     8.612  &lt; 2e-16 ***\nDESTIN_SZG01404         -3.008e-01  5.083e-02    -5.918 3.26e-09 ***\nDESTIN_SZG01410          9.233e-01  4.608e-02    20.038  &lt; 2e-16 ***\nDESTIN_SZG01411         -9.800e-02  4.642e-02    -2.111 0.034758 *  \nDESTIN_SZG01412          9.154e-01  4.610e-02    19.856  &lt; 2e-16 ***\nDESTIN_SZG01413          6.242e-01  4.623e-02    13.503  &lt; 2e-16 ***\nDESTIN_SZG01414          1.263e-01  4.628e-02     2.730 0.006333 ** \nDESTIN_SZG01415          3.909e-01  4.623e-02     8.456  &lt; 2e-16 ***\nDESTIN_SZG01416          2.339e-02  4.640e-02     0.504 0.614251    \nDESTIN_SZG01417          6.042e-02  4.626e-02     1.306 0.191494    \nDESTIN_SZG01418          2.876e-01  4.625e-02     6.219 5.01e-10 ***\nDESTIN_SZG01419         -1.661e-01  4.655e-02    -3.567 0.000361 ***\nDESTIN_SZG01422          1.643e-01  4.632e-02     3.547 0.000389 ***\nDESTIN_SZG01423          6.712e-01  4.620e-02    14.529  &lt; 2e-16 ***\nDESTIN_SZG01430          6.919e-01  4.618e-02    14.984  &lt; 2e-16 ***\nDESTIN_SZG01431          1.058e+00  4.606e-02    22.963  &lt; 2e-16 ***\nDESTIN_SZG01432          7.358e-01  4.610e-02    15.959  &lt; 2e-16 ***\nDESTIN_SZG01433          1.230e-01  4.682e-02     2.626 0.008633 ** \nDESTIN_SZG01434          1.008e+00  4.609e-02    21.861  &lt; 2e-16 ***\nDESTIN_SZG01435          4.748e-01  4.615e-02    10.288  &lt; 2e-16 ***\nDESTIN_SZG01436         -9.422e-01  4.711e-02   -20.002  &lt; 2e-16 ***\nDESTIN_SZG01437         -9.925e-02  4.634e-02    -2.142 0.032217 *  \nDESTIN_SZG01438          5.336e-01  4.611e-02    11.573  &lt; 2e-16 ***\nDESTIN_SZG01439          1.310e+00  4.604e-02    28.458  &lt; 2e-16 ***\nDESTIN_SZG01440          8.058e-01  4.631e-02    17.400  &lt; 2e-16 ***\nDESTIN_SZG01442         -1.493e+00  4.878e-02   -30.607  &lt; 2e-16 ***\nDESTIN_SZG01443          3.627e-01  4.628e-02     7.837 4.62e-15 ***\nDESTIN_SZG01444          1.165e+00  4.628e-02    25.164  &lt; 2e-16 ***\nDESTIN_SZG01452          1.294e+00  4.603e-02    28.106  &lt; 2e-16 ***\nDESTIN_SZG01453          4.757e-01  4.618e-02    10.300  &lt; 2e-16 ***\nDESTIN_SZG01454         -6.598e-01  4.724e-02   -13.967  &lt; 2e-16 ***\nDESTIN_SZG01455          7.045e-02  4.644e-02     1.517 0.129219    \nDESTIN_SZG01456          2.928e-01  4.626e-02     6.329 2.47e-10 ***\nDESTIN_SZG01457          1.012e+00  4.612e-02    21.938  &lt; 2e-16 ***\nDESTIN_SZG01458          1.813e+00  4.599e-02    39.417  &lt; 2e-16 ***\nDESTIN_SZG01459         -7.117e-01  4.661e-02   -15.268  &lt; 2e-16 ***\nDESTIN_SZG01460          5.686e-01  4.612e-02    12.330  &lt; 2e-16 ***\nDESTIN_SZG01461          4.473e-01  4.637e-02     9.647  &lt; 2e-16 ***\nDESTIN_SZG01464          3.443e-02  4.644e-02     0.741 0.458545    \nDESTIN_SZG01465         -4.084e-01  4.708e-02    -8.675  &lt; 2e-16 ***\nDESTIN_SZG01472          1.786e-01  4.645e-02     3.845 0.000120 ***\nDESTIN_SZG01473          1.135e+00  4.606e-02    24.642  &lt; 2e-16 ***\nDESTIN_SZG01474          1.053e+00  4.604e-02    22.874  &lt; 2e-16 ***\nDESTIN_SZG01475          8.015e-01  4.610e-02    17.387  &lt; 2e-16 ***\nDESTIN_SZG01476         -1.671e-01  4.645e-02    -3.598 0.000321 ***\nDESTIN_SZG01477          1.780e+00  4.598e-02    38.723  &lt; 2e-16 ***\nDESTIN_SZG01478          1.801e-01  4.620e-02     3.898 9.69e-05 ***\nDESTIN_SZG01479         -6.137e-01  4.650e-02   -13.197  &lt; 2e-16 ***\nDESTIN_SZG01480          1.741e+00  4.598e-02    37.858  &lt; 2e-16 ***\nDESTIN_SZG01481          4.098e-01  4.628e-02     8.855  &lt; 2e-16 ***\nDESTIN_SZG01482          1.373e+00  4.616e-02    29.737  &lt; 2e-16 ***\nDESTIN_SZG01485         -8.569e-01  4.755e-02   -18.020  &lt; 2e-16 ***\nDESTIN_SZG01494          9.725e-01  4.611e-02    21.089  &lt; 2e-16 ***\nDESTIN_SZG01495          1.919e-02  4.629e-02     0.415 0.678405    \nDESTIN_SZG01496          1.029e+00  4.605e-02    22.340  &lt; 2e-16 ***\nDESTIN_SZG01497         -2.256e-01  4.647e-02    -4.854 1.21e-06 ***\nDESTIN_SZG01498          4.448e-02  4.631e-02     0.960 0.336855    \nDESTIN_SZG01499          4.509e-01  4.612e-02     9.777  &lt; 2e-16 ***\nDESTIN_SZG01500         -1.795e-01  4.666e-02    -3.846 0.000120 ***\nDESTIN_SZG01501          7.821e-01  4.608e-02    16.973  &lt; 2e-16 ***\nDESTIN_SZG01502          7.682e-01  4.611e-02    16.659  &lt; 2e-16 ***\nDESTIN_SZG01506         -2.823e+00  7.786e-02   -36.257  &lt; 2e-16 ***\nDESTIN_SZG01515         -2.528e-01  4.791e-02    -5.277 1.31e-07 ***\nDESTIN_SZG01516          1.132e+00  4.605e-02    24.587  &lt; 2e-16 ***\nDESTIN_SZG01517          1.042e-01  4.635e-02     2.247 0.024648 *  \nDESTIN_SZG01518         -4.594e-01  4.656e-02    -9.866  &lt; 2e-16 ***\nDESTIN_SZG01519          4.012e-02  4.657e-02     0.861 0.388987    \nDESTIN_SZG01520          2.331e-01  4.621e-02     5.046 4.51e-07 ***\nDESTIN_SZG01521         -3.423e-01  4.650e-02    -7.362 1.81e-13 ***\nDESTIN_SZG01522          5.380e-01  4.616e-02    11.654  &lt; 2e-16 ***\nDESTIN_SZG01523          1.753e+00  4.611e-02    38.011  &lt; 2e-16 ***\nDESTIN_SZG01524         -4.584e-01  4.732e-02    -9.686  &lt; 2e-16 ***\nDESTIN_SZG01527         -2.091e+00  5.404e-02   -38.698  &lt; 2e-16 ***\nDESTIN_SZG01535         -1.391e+00  6.813e-02   -20.423  &lt; 2e-16 ***\nDESTIN_SZG01536         -1.277e+00  5.074e-02   -25.175  &lt; 2e-16 ***\nDESTIN_SZG01537          4.916e-01  4.628e-02    10.623  &lt; 2e-16 ***\nDESTIN_SZG01538          3.507e-01  4.619e-02     7.592 3.14e-14 ***\nDESTIN_SZG01539          4.085e-01  4.613e-02     8.855  &lt; 2e-16 ***\nDESTIN_SZG01540         -1.584e-01  4.630e-02    -3.422 0.000622 ***\nDESTIN_SZG01541          8.375e-01  4.636e-02    18.067  &lt; 2e-16 ***\nDESTIN_SZG01542         -3.782e-01  4.688e-02    -8.069 7.08e-16 ***\nDESTIN_SZG01543         -3.516e-01  5.252e-02    -6.694 2.18e-11 ***\nDESTIN_SZG01544         -1.595e-01  4.676e-02    -3.410 0.000649 ***\nDESTIN_SZG01547         -4.610e-01  4.822e-02    -9.560  &lt; 2e-16 ***\nDESTIN_SZG01556         -1.852e+00  7.471e-02   -24.788  &lt; 2e-16 ***\nDESTIN_SZG01557         -7.787e-01  4.852e-02   -16.047  &lt; 2e-16 ***\nDESTIN_SZG01558          7.833e-01  4.753e-02    16.481  &lt; 2e-16 ***\nDESTIN_SZG01559          9.128e-01  4.607e-02    19.812  &lt; 2e-16 ***\nDESTIN_SZG01560          9.180e-01  4.606e-02    19.929  &lt; 2e-16 ***\nDESTIN_SZG01561          3.538e-01  4.634e-02     7.634 2.27e-14 ***\nDESTIN_SZG01562         -1.937e+00  4.884e-02   -39.652  &lt; 2e-16 ***\nDESTIN_SZG01563         -8.216e-01  4.679e-02   -17.558  &lt; 2e-16 ***\nDESTIN_SZG01564         -3.413e-01  4.662e-02    -7.321 2.46e-13 ***\nDESTIN_SZG01565          3.156e-01  4.632e-02     6.814 9.51e-12 ***\nDESTIN_SZG01566         -1.306e+00  4.870e-02   -26.819  &lt; 2e-16 ***\nDESTIN_SZG01567         -8.305e-01  4.904e-02   -16.936  &lt; 2e-16 ***\nDESTIN_SZG01568         -1.387e-01  4.745e-02    -2.924 0.003461 ** \nDESTIN_SZG01578         -2.651e+00  1.092e-01   -24.287  &lt; 2e-16 ***\nDESTIN_SZG01580         -1.903e+00  5.164e-02   -36.854  &lt; 2e-16 ***\nDESTIN_SZG01581          5.921e-01  4.614e-02    12.833  &lt; 2e-16 ***\nDESTIN_SZG01582          7.595e-01  4.608e-02    16.485  &lt; 2e-16 ***\nDESTIN_SZG01583         -7.194e-01  5.002e-02   -14.383  &lt; 2e-16 ***\nDESTIN_SZG01584         -8.948e-01  4.744e-02   -18.861  &lt; 2e-16 ***\nDESTIN_SZG01585         -6.552e-02  4.651e-02    -1.409 0.158944    \nDESTIN_SZG01586          6.232e-01  4.619e-02    13.494  &lt; 2e-16 ***\nDESTIN_SZG01589         -6.074e-01  4.765e-02   -12.749  &lt; 2e-16 ***\nDESTIN_SZG01590         -8.436e-02  4.773e-02    -1.768 0.077117 .  \nDESTIN_SZG01600          1.250e-01  4.800e-02     2.605 0.009197 ** \nDESTIN_SZG01601         -3.462e-01  4.645e-02    -7.454 9.06e-14 ***\nDESTIN_SZG01602          1.289e-01  4.636e-02     2.781 0.005420 ** \nDESTIN_SZG01603          1.183e+00  4.607e-02    25.675  &lt; 2e-16 ***\nDESTIN_SZG01604         -1.044e+00  4.702e-02   -22.196  &lt; 2e-16 ***\nDESTIN_SZG01605          8.028e-02  4.625e-02     1.736 0.082633 .  \nDESTIN_SZG01606         -4.126e-01  4.776e-02    -8.639  &lt; 2e-16 ***\nDESTIN_SZG01607          8.186e-01  4.610e-02    17.757  &lt; 2e-16 ***\nDESTIN_SZG01608          1.635e-01  4.632e-02     3.530 0.000416 ***\nDESTIN_SZG01609          8.264e-01  4.618e-02    17.894  &lt; 2e-16 ***\nDESTIN_SZG01610         -1.115e+00  5.252e-02   -21.231  &lt; 2e-16 ***\nDESTIN_SZG01622          9.390e-01  4.713e-02    19.924  &lt; 2e-16 ***\nDESTIN_SZG01623          6.805e-01  4.610e-02    14.761  &lt; 2e-16 ***\nDESTIN_SZG01624          1.198e+00  4.606e-02    25.998  &lt; 2e-16 ***\nDESTIN_SZG01625          3.965e-01  4.624e-02     8.575  &lt; 2e-16 ***\nDESTIN_SZG01626          2.215e+00  4.597e-02    48.186  &lt; 2e-16 ***\nDESTIN_SZG01627         -8.523e-01  4.673e-02   -18.238  &lt; 2e-16 ***\nDESTIN_SZG01628          1.310e+00  4.604e-02    28.444  &lt; 2e-16 ***\nDESTIN_SZG01629         -1.456e+00  4.798e-02   -30.354  &lt; 2e-16 ***\nDESTIN_SZG01630         -9.286e-01  4.726e-02   -19.649  &lt; 2e-16 ***\nDESTIN_SZG01631         -1.390e+00  4.956e-02   -28.050  &lt; 2e-16 ***\nDESTIN_SZG01642         -1.785e+00  5.578e-02   -31.995  &lt; 2e-16 ***\nDESTIN_SZG01643          2.296e-01  4.627e-02     4.963 6.93e-07 ***\nDESTIN_SZG01644          1.151e-01  4.658e-02     2.470 0.013514 *  \nDESTIN_SZG01645          4.098e-02  4.632e-02     0.885 0.376373    \nDESTIN_SZG01646          2.612e-01  4.653e-02     5.613 1.98e-08 ***\nDESTIN_SZG01647         -1.670e-01  4.630e-02    -3.607 0.000310 ***\nDESTIN_SZG01648         -2.339e-02  4.626e-02    -0.506 0.613129    \nDESTIN_SZG01649          6.562e-01  4.610e-02    14.235  &lt; 2e-16 ***\nDESTIN_SZG01650         -1.063e-01  4.648e-02    -2.286 0.022227 *  \nDESTIN_SZG01664         -3.345e+00  1.250e-01   -26.758  &lt; 2e-16 ***\nDESTIN_SZG01665          8.159e-01  4.608e-02    17.705  &lt; 2e-16 ***\nDESTIN_SZG01666          7.901e-01  4.608e-02    17.144  &lt; 2e-16 ***\nDESTIN_SZG01667         -3.541e-01  4.852e-02    -7.300 2.89e-13 ***\nDESTIN_SZG01668         -1.820e-01  4.639e-02    -3.924 8.72e-05 ***\nDESTIN_SZG01670          4.782e-01  4.613e-02    10.365  &lt; 2e-16 ***\nDESTIN_SZG01671         -1.924e-02  4.706e-02    -0.409 0.682724    \nDESTIN_SZG01672         -8.659e-01  4.733e-02   -18.296  &lt; 2e-16 ***\nDESTIN_SZG01684          5.278e-01  4.683e-02    11.269  &lt; 2e-16 ***\nDESTIN_SZG01685         -4.128e-01  4.670e-02    -8.839  &lt; 2e-16 ***\nDESTIN_SZG01686          1.568e-01  4.625e-02     3.390 0.000698 ***\nDESTIN_SZG01687          5.761e-01  4.639e-02    12.418  &lt; 2e-16 ***\nDESTIN_SZG01688         -1.320e-01  4.638e-02    -2.846 0.004428 ** \nDESTIN_SZG01689         -7.800e-01  4.690e-02   -16.632  &lt; 2e-16 ***\nDESTIN_SZG01690         -1.251e+00  4.757e-02   -26.306  &lt; 2e-16 ***\nDESTIN_SZG01691          5.667e-01  4.612e-02    12.289  &lt; 2e-16 ***\nDESTIN_SZG01692         -1.391e+00  4.783e-02   -29.070  &lt; 2e-16 ***\nDESTIN_SZG01706          1.694e-01  4.652e-02     3.640 0.000272 ***\nDESTIN_SZG01707         -6.601e-01  4.659e-02   -14.166  &lt; 2e-16 ***\nDESTIN_SZG01708         -1.001e-02  4.632e-02    -0.216 0.828914    \nDESTIN_SZG01709          6.773e-01  4.614e-02    14.680  &lt; 2e-16 ***\nDESTIN_SZG01710          6.189e-01  4.618e-02    13.401  &lt; 2e-16 ***\nDESTIN_SZG01711          1.338e+00  4.604e-02    29.071  &lt; 2e-16 ***\nDESTIN_SZG01712          4.578e-01  4.611e-02     9.929  &lt; 2e-16 ***\nDESTIN_SZG01713         -1.989e+00  4.832e-02   -41.167  &lt; 2e-16 ***\nDESTIN_SZG01714         -4.701e-01  4.660e-02   -10.088  &lt; 2e-16 ***\nDESTIN_SZG01727          6.943e-01  4.622e-02    15.023  &lt; 2e-16 ***\nDESTIN_SZG01728          5.909e-01  4.612e-02    12.811  &lt; 2e-16 ***\nDESTIN_SZG01729          7.605e-01  4.610e-02    16.497  &lt; 2e-16 ***\nDESTIN_SZG01730         -2.538e-01  4.671e-02    -5.434 5.52e-08 ***\nDESTIN_SZG01731          5.358e-01  4.619e-02    11.601  &lt; 2e-16 ***\nDESTIN_SZG01732          3.460e-01  4.613e-02     7.499 6.42e-14 ***\nDESTIN_SZG01733         -8.654e-01  4.659e-02   -18.574  &lt; 2e-16 ***\nDESTIN_SZG01734          2.892e-01  4.615e-02     6.267 3.69e-10 ***\nDESTIN_SZG01735         -3.466e-01  4.791e-02    -7.234 4.68e-13 ***\nDESTIN_SZG01748         -2.068e-01  4.672e-02    -4.426 9.59e-06 ***\nDESTIN_SZG01749          8.912e-01  4.608e-02    19.342  &lt; 2e-16 ***\nDESTIN_SZG01750          6.671e-01  4.610e-02    14.471  &lt; 2e-16 ***\nDESTIN_SZG01751          3.506e-01  4.631e-02     7.571 3.72e-14 ***\nDESTIN_SZG01753          6.725e-01  4.612e-02    14.581  &lt; 2e-16 ***\nDESTIN_SZG01754          1.692e+00  4.598e-02    36.790  &lt; 2e-16 ***\nDESTIN_SZG01755          9.041e-01  4.604e-02    19.636  &lt; 2e-16 ***\nDESTIN_SZG01756         -5.782e-02  4.623e-02    -1.251 0.211057    \nDESTIN_SZG01757         -1.627e+00  5.078e-02   -32.031  &lt; 2e-16 ***\nDESTIN_SZG01769          2.506e-01  4.634e-02     5.408 6.36e-08 ***\nDESTIN_SZG01770         -1.546e-01  4.639e-02    -3.333 0.000859 ***\nDESTIN_SZG01771          8.146e-01  4.616e-02    17.646  &lt; 2e-16 ***\nDESTIN_SZG01772          1.687e+00  4.640e-02    36.358  &lt; 2e-16 ***\nDESTIN_SZG01774         -2.928e-01  4.642e-02    -6.309 2.81e-10 ***\nDESTIN_SZG01775         -8.357e-01  4.657e-02   -17.944  &lt; 2e-16 ***\nDESTIN_SZG01776          1.482e+00  4.599e-02    32.222  &lt; 2e-16 ***\nDESTIN_SZG01777         -3.083e-01  4.641e-02    -6.644 3.05e-11 ***\nDESTIN_SZG01778         -1.177e+00  5.034e-02   -23.372  &lt; 2e-16 ***\nDESTIN_SZG01790          1.023e+00  4.617e-02    22.153  &lt; 2e-16 ***\nDESTIN_SZG01791          4.372e-01  4.626e-02     9.451  &lt; 2e-16 ***\nDESTIN_SZG01792          4.560e-01  4.642e-02     9.823  &lt; 2e-16 ***\nDESTIN_SZG01793          5.103e-01  4.625e-02    11.033  &lt; 2e-16 ***\nDESTIN_SZG01794          1.956e+00  4.646e-02    42.090  &lt; 2e-16 ***\nDESTIN_SZG01795         -1.839e+00  5.065e-02   -36.302  &lt; 2e-16 ***\nDESTIN_SZG01796          2.304e-01  4.622e-02     4.986 6.17e-07 ***\nDESTIN_SZG01797         -1.095e-01  4.623e-02    -2.368 0.017890 *  \nDESTIN_SZG01798          8.709e-02  4.619e-02     1.885 0.059366 .  \nDESTIN_SZG01799         -6.440e-01  4.677e-02   -13.771  &lt; 2e-16 ***\nDESTIN_SZG01800         -2.191e+00  6.799e-02   -32.232  &lt; 2e-16 ***\nDESTIN_SZG01811          1.469e-01  4.650e-02     3.159 0.001582 ** \nDESTIN_SZG01812          1.330e+00  4.603e-02    28.892  &lt; 2e-16 ***\nDESTIN_SZG01813          1.406e+00  4.602e-02    30.556  &lt; 2e-16 ***\nDESTIN_SZG01817         -1.319e+00  4.739e-02   -27.831  &lt; 2e-16 ***\nDESTIN_SZG01818         -3.310e-01  4.629e-02    -7.151 8.64e-13 ***\nDESTIN_SZG01819          1.527e+00  4.599e-02    33.202  &lt; 2e-16 ***\nDESTIN_SZG01820         -2.787e+00  6.157e-02   -45.259  &lt; 2e-16 ***\nDESTIN_SZG01832          1.434e+00  4.609e-02    31.104  &lt; 2e-16 ***\nDESTIN_SZG01833          2.710e-04  4.641e-02     0.006 0.995341    \nDESTIN_SZG01834         -2.105e-01  4.639e-02    -4.538 5.67e-06 ***\nDESTIN_SZG01835         -9.676e-02  4.650e-02    -2.081 0.037420 *  \nDESTIN_SZG01837         -4.540e-02  4.790e-02    -0.948 0.343278    \nDESTIN_SZG01839         -1.272e+00  4.731e-02   -26.878  &lt; 2e-16 ***\nDESTIN_SZG01840          1.243e+00  4.601e-02    27.004  &lt; 2e-16 ***\nDESTIN_SZG01841         -1.823e+00  5.098e-02   -35.757  &lt; 2e-16 ***\nDESTIN_SZG01842         -1.794e-01  4.809e-02    -3.730 0.000191 ***\nDESTIN_SZG01853          3.596e-01  4.627e-02     7.771 7.77e-15 ***\nDESTIN_SZG01854          6.888e-01  4.617e-02    14.918  &lt; 2e-16 ***\nDESTIN_SZG01855          8.896e-01  4.612e-02    19.287  &lt; 2e-16 ***\nDESTIN_SZG01858          8.379e-01  4.667e-02    17.953  &lt; 2e-16 ***\nDESTIN_SZG01860         -7.438e-01  4.925e-02   -15.103  &lt; 2e-16 ***\nDESTIN_SZG01861         -1.032e-01  4.632e-02    -2.227 0.025948 *  \nDESTIN_SZG01874          1.898e-01  4.682e-02     4.054 5.04e-05 ***\nDESTIN_SZG01875         -1.510e+00  4.992e-02   -30.253  &lt; 2e-16 ***\nDESTIN_SZG01876         -1.720e-01  5.072e-02    -3.392 0.000694 ***\nDESTIN_SZG01877          6.232e-01  4.616e-02    13.501  &lt; 2e-16 ***\nDESTIN_SZG01880         -7.896e-02  4.797e-02    -1.646 0.099757 .  \nDESTIN_SZG01882         -3.441e-02  4.633e-02    -0.743 0.457587    \nDESTIN_SZG01883         -1.351e+00  4.971e-02   -27.185  &lt; 2e-16 ***\nDESTIN_SZG01895          6.541e-01  4.623e-02    14.150  &lt; 2e-16 ***\nDESTIN_SZG01896         -1.778e-01  4.655e-02    -3.819 0.000134 ***\nDESTIN_SZG01897         -9.119e-01  4.735e-02   -19.260  &lt; 2e-16 ***\nDESTIN_SZG01898         -1.267e+00  5.169e-02   -24.505  &lt; 2e-16 ***\nDESTIN_SZG01901         -4.304e-01  5.044e-02    -8.533  &lt; 2e-16 ***\nDESTIN_SZG01903         -1.482e+00  4.892e-02   -30.307  &lt; 2e-16 ***\nDESTIN_SZG01917         -1.692e-01  4.672e-02    -3.622 0.000292 ***\nDESTIN_SZG01918          1.035e+00  4.631e-02    22.354  &lt; 2e-16 ***\nDESTIN_SZG01919          8.813e-01  4.613e-02    19.104  &lt; 2e-16 ***\nDESTIN_SZG01922          5.905e-01  4.701e-02    12.562  &lt; 2e-16 ***\nDESTIN_SZG01924         -1.686e+00  4.953e-02   -34.048  &lt; 2e-16 ***\nDESTIN_SZG01937          2.181e-01  4.652e-02     4.688 2.76e-06 ***\nDESTIN_SZG01938          1.025e+00  4.612e-02    22.217  &lt; 2e-16 ***\nDESTIN_SZG01939         -1.124e-01  4.660e-02    -2.411 0.015889 *  \nDESTIN_SZG01942         -8.388e-01  5.004e-02   -16.765  &lt; 2e-16 ***\nDESTIN_SZG01959         -1.326e-01  4.680e-02    -2.834 0.004598 ** \nDESTIN_SZG01960          2.128e+00  4.597e-02    46.289  &lt; 2e-16 ***\nDESTIN_SZG01961         -6.314e-01  4.697e-02   -13.442  &lt; 2e-16 ***\nDESTIN_SZG01962          2.520e-01  4.631e-02     5.441 5.31e-08 ***\nDESTIN_SZG01964          1.022e+00  4.724e-02    21.635  &lt; 2e-16 ***\nDESTIN_SZG01979          1.927e-01  4.667e-02     4.129 3.65e-05 ***\nDESTIN_SZG01980          1.258e-01  4.637e-02     2.714 0.006655 ** \nDESTIN_SZG01981         -4.308e-03  4.647e-02    -0.093 0.926128    \nDESTIN_SZG01982          4.005e-01  4.644e-02     8.624  &lt; 2e-16 ***\nDESTIN_SZG01983          2.227e-01  4.631e-02     4.808 1.52e-06 ***\nDESTIN_SZG01984          2.679e-01  4.633e-02     5.783 7.35e-09 ***\nDESTIN_SZG01985          4.943e-01  4.625e-02    10.688  &lt; 2e-16 ***\nDESTIN_SZG02001          2.317e-01  4.637e-02     4.996 5.85e-07 ***\nDESTIN_SZG02002          4.273e-01  4.617e-02     9.255  &lt; 2e-16 ***\nDESTIN_SZG02003          8.403e-01  4.611e-02    18.225  &lt; 2e-16 ***\nDESTIN_SZG02004          1.066e+00  4.609e-02    23.133  &lt; 2e-16 ***\nDESTIN_SZG02005          7.316e-02  4.633e-02     1.579 0.114328    \nDESTIN_SZG02006          1.092e+00  4.612e-02    23.681  &lt; 2e-16 ***\nDESTIN_SZG02007         -2.146e+00  5.378e-02   -39.897  &lt; 2e-16 ***\nDESTIN_SZG02022          9.153e-01  4.634e-02    19.754  &lt; 2e-16 ***\nDESTIN_SZG02023          7.184e-01  4.614e-02    15.568  &lt; 2e-16 ***\nDESTIN_SZG02024          9.619e-01  4.607e-02    20.879  &lt; 2e-16 ***\nDESTIN_SZG02025         -1.668e-01  4.636e-02    -3.598 0.000320 ***\nDESTIN_SZG02026         -8.621e-01  4.725e-02   -18.244  &lt; 2e-16 ***\nDESTIN_SZG02027          9.764e-01  4.611e-02    21.173  &lt; 2e-16 ***\nDESTIN_SZG02043         -5.238e-01  4.716e-02   -11.108  &lt; 2e-16 ***\nDESTIN_SZG02044          1.945e-01  4.631e-02     4.200 2.67e-05 ***\nDESTIN_SZG02045         -5.070e-01  4.743e-02   -10.689  &lt; 2e-16 ***\nDESTIN_SZG02046          1.004e+00  4.604e-02    21.800  &lt; 2e-16 ***\nDESTIN_SZG02047         -7.549e-01  4.677e-02   -16.140  &lt; 2e-16 ***\nDESTIN_SZG02048         -5.275e-01  4.664e-02   -11.309  &lt; 2e-16 ***\nDESTIN_SZG02049         -2.313e+00  5.338e-02   -43.329  &lt; 2e-16 ***\nDESTIN_SZG02064          1.850e-01  4.646e-02     3.983 6.82e-05 ***\nDESTIN_SZG02065         -1.384e-01  4.654e-02    -2.975 0.002932 ** \nDESTIN_SZG02066         -2.194e+00  5.552e-02   -39.514  &lt; 2e-16 ***\nDESTIN_SZG02067          2.391e+00  4.596e-02    52.015  &lt; 2e-16 ***\nDESTIN_SZG02068         -6.619e-01  4.755e-02   -13.918  &lt; 2e-16 ***\nDESTIN_SZG02069         -2.716e-01  4.661e-02    -5.827 5.64e-09 ***\nDESTIN_SZG02085          1.655e-01  4.656e-02     3.554 0.000380 ***\nDESTIN_SZG02086          1.523e+00  4.605e-02    33.070  &lt; 2e-16 ***\nDESTIN_SZG02087          1.188e+00  4.608e-02    25.778  &lt; 2e-16 ***\nDESTIN_SZG02088         -5.663e-03  4.625e-02    -0.122 0.902541    \nDESTIN_SZG02089         -5.242e-01  4.677e-02   -11.206  &lt; 2e-16 ***\nDESTIN_SZG02090          2.091e+00  4.598e-02    45.470  &lt; 2e-16 ***\nDESTIN_SZG02091         -2.781e+00  7.689e-02   -36.173  &lt; 2e-16 ***\nDESTIN_SZG02105          8.041e-01  8.827e-02     9.110  &lt; 2e-16 ***\nDESTIN_SZG02106         -1.179e+00  4.832e-02   -24.395  &lt; 2e-16 ***\nDESTIN_SZG02107          1.459e+00  4.606e-02    31.681  &lt; 2e-16 ***\nDESTIN_SZG02108          9.645e-01  4.613e-02    20.908  &lt; 2e-16 ***\nDESTIN_SZG02109         -2.686e-01  4.635e-02    -5.795 6.81e-09 ***\nDESTIN_SZG02110         -1.016e+00  4.740e-02   -21.434  &lt; 2e-16 ***\nDESTIN_SZG02111         -1.937e+00  5.643e-02   -34.331  &lt; 2e-16 ***\nDESTIN_SZG02128          5.081e-01  4.680e-02    10.857  &lt; 2e-16 ***\nDESTIN_SZG02129          1.730e-01  4.693e-02     3.687 0.000227 ***\nDESTIN_SZG02130          1.019e-01  4.622e-02     2.204 0.027522 *  \nDESTIN_SZG02131         -1.184e-02  4.647e-02    -0.255 0.798859    \nDESTIN_SZG02132         -1.569e-01  4.648e-02    -3.376 0.000735 ***\nDESTIN_SZG02148         -1.202e-01  4.801e-02    -2.503 0.012318 *  \nDESTIN_SZG02149         -4.260e-01  4.714e-02    -9.037  &lt; 2e-16 ***\nDESTIN_SZG02150         -1.440e-01  4.658e-02    -3.093 0.001984 ** \nDESTIN_SZG02151          1.486e+00  4.601e-02    32.290  &lt; 2e-16 ***\nDESTIN_SZG02152          4.785e-01  4.619e-02    10.358  &lt; 2e-16 ***\nDESTIN_SZG02153         -6.765e-01  4.723e-02   -14.323  &lt; 2e-16 ***\nDESTIN_SZG02171          7.332e-01  4.621e-02    15.866  &lt; 2e-16 ***\nDESTIN_SZG02172         -9.950e-01  4.726e-02   -21.056  &lt; 2e-16 ***\nDESTIN_SZG02173         -4.338e-01  4.649e-02    -9.331  &lt; 2e-16 ***\nDESTIN_SZG02174          1.841e-01  4.641e-02     3.967 7.27e-05 ***\nDESTIN_SZG02191          9.757e-01  4.648e-02    20.990  &lt; 2e-16 ***\nDESTIN_SZG02192         -3.302e-01  4.711e-02    -7.008 2.41e-12 ***\nDESTIN_SZG02193          3.160e-01  4.630e-02     6.824 8.86e-12 ***\nDESTIN_SZG02194          2.614e-01  4.627e-02     5.650 1.60e-08 ***\nDESTIN_SZG02195         -8.409e-01  5.704e-02   -14.743  &lt; 2e-16 ***\nDESTIN_SZG02212          1.150e+00  4.778e-02    24.071  &lt; 2e-16 ***\nDESTIN_SZG02213          6.453e-01  4.661e-02    13.844  &lt; 2e-16 ***\nDESTIN_SZG02214          1.346e+00  4.641e-02    29.004  &lt; 2e-16 ***\nDESTIN_SZG02215         -3.982e-01  4.682e-02    -8.505  &lt; 2e-16 ***\nDESTIN_SZG02216          5.080e-01  4.628e-02    10.976  &lt; 2e-16 ***\nDESTIN_SZG02233          1.213e+00  4.691e-02    25.862  &lt; 2e-16 ***\nDESTIN_SZG02234          1.609e+00  4.661e-02    34.521  &lt; 2e-16 ***\nDESTIN_SZG02235          5.069e-01  4.678e-02    10.836  &lt; 2e-16 ***\nDESTIN_SZG02236         -9.746e-01  4.784e-02   -20.373  &lt; 2e-16 ***\nDESTIN_SZG02237          4.201e-01  4.731e-02     8.880  &lt; 2e-16 ***\nDESTIN_SZG02256          4.983e-01  4.757e-02    10.475  &lt; 2e-16 ***\nDESTIN_SZG02257         -1.669e+00  5.269e-02   -31.681  &lt; 2e-16 ***\nDESTIN_SZG02258          2.263e-01  4.649e-02     4.867 1.13e-06 ***\nDESTIN_SZG02259          1.280e+00  4.699e-02    27.236  &lt; 2e-16 ***\nDESTIN_SZG02277         -3.818e-01  5.206e-02    -7.335 2.22e-13 ***\nDESTIN_SZG02278         -3.250e-01  4.849e-02    -6.703 2.04e-11 ***\nDESTIN_SZG02279          4.261e-01  4.649e-02     9.166  &lt; 2e-16 ***\nDESTIN_SZG02280         -1.012e+00  5.579e-02   -18.140  &lt; 2e-16 ***\nDESTIN_SZG02297         -2.411e-01  4.862e-02    -4.960 7.05e-07 ***\nDESTIN_SZG02300         -5.702e-01  4.997e-02   -11.410  &lt; 2e-16 ***\nDESTIN_SZG02301          3.453e-02  4.694e-02     0.736 0.461929    \nDESTIN_SZG02318          1.744e+00  4.624e-02    37.725  &lt; 2e-16 ***\nDESTIN_SZG02319          1.807e+00  4.618e-02    39.128  &lt; 2e-16 ***\nDESTIN_SZG02322          4.058e-01  4.685e-02     8.662  &lt; 2e-16 ***\nDESTIN_SZG02337          1.463e+00  4.847e-02    30.191  &lt; 2e-16 ***\nDESTIN_SZG02341          1.991e+00  4.617e-02    43.125  &lt; 2e-16 ***\nDESTIN_SZG02343         -4.269e-01  4.762e-02    -8.966  &lt; 2e-16 ***\nDESTIN_SZG02361          8.567e-01  4.672e-02    18.336  &lt; 2e-16 ***\nDESTIN_SZG02364         -1.511e+00  5.461e-02   -27.667  &lt; 2e-16 ***\nDESTIN_SZG02379          6.551e-01  5.228e-02    12.531  &lt; 2e-16 ***\nDESTIN_SZG02384          1.483e+00  4.638e-02    31.972  &lt; 2e-16 ***\nDESTIN_SZG02405          2.103e+00  4.615e-02    45.569  &lt; 2e-16 ***\nDESTIN_SZG02406         -9.463e-01  5.177e-02   -18.280  &lt; 2e-16 ***\nDESTIN_SZG02426          1.482e+00  4.721e-02    31.389  &lt; 2e-16 ***\nDESTIN_SZG02427          1.708e+00  4.639e-02    36.831  &lt; 2e-16 ***\nDESTIN_SZG02505          2.017e+00  4.936e-02    40.856  &lt; 2e-16 ***\nlog(ORIG_BUSSTOP_COUNT)  2.687e-01  5.167e-04   520.049  &lt; 2e-16 ***\nlog(ORIG_TEXIT_COUNT)    3.076e-01  3.274e-04   939.640  &lt; 2e-16 ***\nlog(ORIG_HDB_COUNT)      3.699e-01  1.822e-04  2030.859  &lt; 2e-16 ***\nlog(dist)               -1.482e+00  2.634e-04 -5626.382  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98771330  on 65139  degrees of freedom\nResidual deviance: 34303201  on 64318  degrees of freedom\nAIC: 34663046\n\nNumber of Fisher Scoring iterations: 8\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(decSIM$data$MORNING_PEAK, decSIM$fitted.values)\n\n[1] 0.4440809\n\n\n\nAnalysis\nAll the propulsive values used in this study has impact the number of trips people take in the morning peak hour. From the result, increases in the busstop, train exit station and hdb are associated with an increase in the number of trips to the destination. The negative coefficient for distance indicates that as the distance increases, the number of trips decreases, is expected."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#doubly-constrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#doubly-constrained",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Doubly constrained",
    "text": "Doubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\n\ndbcSIM &lt;- glm(formula = MORNING_PEAK ~ \n                ORIGIN_SZ + \n                DESTIN_SZ + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = MORNING_PEAK ~ ORIGIN_SZ + DESTIN_SZ + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     15.4942090  0.1103022   140.471  &lt; 2e-16 ***\nORIGIN_SZG00044 -2.2261649  0.1714014   -12.988  &lt; 2e-16 ***\nORIGIN_SZG00046 -0.9391965  0.1331280    -7.055 1.73e-12 ***\nORIGIN_SZG00066 -1.6333096  0.1603154   -10.188  &lt; 2e-16 ***\nORIGIN_SZG00067  1.2322059  0.1029843    11.965  &lt; 2e-16 ***\nORIGIN_SZG00068 -1.6039500  0.1639164    -9.785  &lt; 2e-16 ***\nORIGIN_SZG00086 -0.9148277  0.1229765    -7.439 1.01e-13 ***\nORIGIN_SZG00087 -0.1331171  0.1293397    -1.029 0.303383    \nORIGIN_SZG00088  1.8650144  0.1015745    18.361  &lt; 2e-16 ***\nORIGIN_SZG00089  0.3037941  0.1122312     2.707 0.006792 ** \nORIGIN_SZG00090  0.4332718  0.1664561     2.603 0.009243 ** \nORIGIN_SZG00109 -0.0501938  0.1414406    -0.355 0.722683    \nORIGIN_SZG00110  0.2439160  0.1236881     1.972 0.048607 *  \nORIGIN_SZG00111  3.6693504  0.1012040    36.257  &lt; 2e-16 ***\nORIGIN_SZG00112 -0.4720571  0.1191661    -3.961 7.45e-05 ***\nORIGIN_SZG00128  2.8173803  0.1045258    26.954  &lt; 2e-16 ***\nORIGIN_SZG00129 -0.2095342  0.2144718    -0.977 0.328580    \nORIGIN_SZG00130 -0.0932297  0.1172665    -0.795 0.426599    \nORIGIN_SZG00131  0.0548677  0.1065627     0.515 0.606632    \nORIGIN_SZG00132 -0.1650509  0.1112830    -1.483 0.138031    \nORIGIN_SZG00133  0.6478961  0.1070772     6.051 1.44e-09 ***\nORIGIN_SZG00134  3.5920244  0.1037597    34.619  &lt; 2e-16 ***\nORIGIN_SZG00150  3.7030609  0.1024235    36.154  &lt; 2e-16 ***\nORIGIN_SZG00151  0.7121524  0.1164906     6.113 9.75e-10 ***\nORIGIN_SZG00152  0.1702301  0.1294176     1.315 0.188391    \nORIGIN_SZG00153  0.9277519  0.1088952     8.520  &lt; 2e-16 ***\nORIGIN_SZG00154  3.5888818  0.1005865    35.680  &lt; 2e-16 ***\nORIGIN_SZG00155  0.7950126  0.1054865     7.537 4.82e-14 ***\nORIGIN_SZG00156  1.6997660  0.1076343    15.792  &lt; 2e-16 ***\nORIGIN_SZG00172  1.7857644  0.1262030    14.150  &lt; 2e-16 ***\nORIGIN_SZG00174  0.6816211  0.1108080     6.151 7.68e-10 ***\nORIGIN_SZG00175  3.4584193  0.1009408    34.262  &lt; 2e-16 ***\nORIGIN_SZG00176  4.3716371  0.1004260    43.531  &lt; 2e-16 ***\nORIGIN_SZG00195 -0.5653621  0.1291233    -4.378 1.20e-05 ***\nORIGIN_SZG00196  0.3829824  0.1088526     3.518 0.000434 ***\nORIGIN_SZG00197 -0.1734698  0.1488434    -1.165 0.243836    \nORIGIN_SZG00215  0.7152806  0.1300940     5.498 3.84e-08 ***\nORIGIN_SZG00216  4.8326685  0.1006133    48.032  &lt; 2e-16 ***\nORIGIN_SZG00217  2.0536397  0.1024824    20.039  &lt; 2e-16 ***\nORIGIN_SZG00237 -0.7852855  0.1857893    -4.227 2.37e-05 ***\nORIGIN_SZG00238  0.8727845  0.1126938     7.745 9.58e-15 ***\nORIGIN_SZG00239  0.1656299  0.1874028     0.884 0.376795    \nORIGIN_SZG00257 -0.2848797  0.1155207    -2.466 0.013661 *  \nORIGIN_SZG00258  1.6611126  0.1040811    15.960  &lt; 2e-16 ***\nORIGIN_SZG00259  1.0011388  0.1082591     9.248  &lt; 2e-16 ***\nORIGIN_SZG00278  0.4728009  0.1078236     4.385 1.16e-05 ***\nORIGIN_SZG00279  0.1461150  0.1093553     1.336 0.181501    \nORIGIN_SZG00280  0.7239146  0.1101490     6.572 4.96e-11 ***\nORIGIN_SZG00298 -2.9826533  0.3484528    -8.560  &lt; 2e-16 ***\nORIGIN_SZG00299 -0.3403259  0.1122081    -3.033 0.002421 ** \nORIGIN_SZG00300  3.6162468  0.1008458    35.859  &lt; 2e-16 ***\nORIGIN_SZG00320 -1.1529101  0.1191018    -9.680  &lt; 2e-16 ***\nORIGIN_SZG00321  0.8854067  0.1233891     7.176 7.19e-13 ***\nORIGIN_SZG00322  1.4506023  0.1107550    13.097  &lt; 2e-16 ***\nORIGIN_SZG00340  1.2379446  0.1043173    11.867  &lt; 2e-16 ***\nORIGIN_SZG00341 -0.4339660  0.1098381    -3.951 7.78e-05 ***\nORIGIN_SZG00342  0.7915909  0.1086123     7.288 3.14e-13 ***\nORIGIN_SZG00363  0.9180813  0.1071693     8.567  &lt; 2e-16 ***\nORIGIN_SZG00364  1.7132673  0.1039538    16.481  &lt; 2e-16 ***\nORIGIN_SZG00383  0.6494891  0.1052656     6.170 6.83e-10 ***\nORIGIN_SZG00384 -0.0679253  0.1131947    -0.600 0.548456    \nORIGIN_SZG00385  1.1744545  0.1105927    10.620  &lt; 2e-16 ***\nORIGIN_SZG00404  1.4131898  0.1062469    13.301  &lt; 2e-16 ***\nORIGIN_SZG00405 -0.0003367  0.1116602    -0.003 0.997594    \nORIGIN_SZG00406  5.5525520  0.1004899    55.255  &lt; 2e-16 ***\nORIGIN_SZG00407  1.5048962  0.1103105    13.642  &lt; 2e-16 ***\nORIGIN_SZG00408  2.2741472  0.1030831    22.061  &lt; 2e-16 ***\nORIGIN_SZG00425 -1.1069089  0.1337216    -8.278  &lt; 2e-16 ***\nORIGIN_SZG00426  0.8811736  0.1047303     8.414  &lt; 2e-16 ***\nORIGIN_SZG00427  0.7188642  0.1065115     6.749 1.49e-11 ***\nORIGIN_SZG00428  0.4585322  0.1271503     3.606 0.000311 ***\nORIGIN_SZG00429  1.5170898  0.1030662    14.720  &lt; 2e-16 ***\nORIGIN_SZG00446  0.3995715  0.1166063     3.427 0.000611 ***\nORIGIN_SZG00447  0.0396371  0.1099247     0.361 0.718410    \nORIGIN_SZG00448  1.4076206  0.1042769    13.499  &lt; 2e-16 ***\nORIGIN_SZG00449  4.7171668  0.1006893    46.849  &lt; 2e-16 ***\nORIGIN_SZG00450  1.5420782  0.1024164    15.057  &lt; 2e-16 ***\nORIGIN_SZG00468  1.6620068  0.1042315    15.945  &lt; 2e-16 ***\nORIGIN_SZG00469  2.3395126  0.1019933    22.938  &lt; 2e-16 ***\nORIGIN_SZG00470  4.7027682  0.1006175    46.739  &lt; 2e-16 ***\nORIGIN_SZG00471  2.5396738  0.1018140    24.944  &lt; 2e-16 ***\nORIGIN_SZG00488  0.1886708  0.1158543     1.629 0.103415    \nORIGIN_SZG00489 -1.3977461  0.2695129    -5.186 2.15e-07 ***\nORIGIN_SZG00490  3.2397857  0.1011340    32.035  &lt; 2e-16 ***\nORIGIN_SZG00491  3.7271659  0.1007717    36.986  &lt; 2e-16 ***\nORIGIN_SZG00493 -0.9359380  0.1713299    -5.463 4.69e-08 ***\nORIGIN_SZG00494  1.0467349  0.1165886     8.978  &lt; 2e-16 ***\nORIGIN_SZG00509  0.3275382  0.1061067     3.087 0.002023 ** \nORIGIN_SZG00510  0.9203041  0.1035195     8.890  &lt; 2e-16 ***\nORIGIN_SZG00511  2.6551949  0.1010501    26.276  &lt; 2e-16 ***\nORIGIN_SZG00512  5.2569915  0.1005496    52.283  &lt; 2e-16 ***\nORIGIN_SZG00513  1.8380375  0.1033583    17.783  &lt; 2e-16 ***\nORIGIN_SZG00514  1.6921683  0.1070905    15.801  &lt; 2e-16 ***\nORIGIN_SZG00515  0.1442498  0.1703974     0.847 0.397247    \nORIGIN_SZG00530 -0.7243171  0.1290900    -5.611 2.01e-08 ***\nORIGIN_SZG00531  1.4649529  0.1026016    14.278  &lt; 2e-16 ***\nORIGIN_SZG00532  1.1321610  0.1030966    10.982  &lt; 2e-16 ***\nORIGIN_SZG00533  4.9659337  0.1005495    49.388  &lt; 2e-16 ***\nORIGIN_SZG00534  5.5441306  0.1005663    55.129  &lt; 2e-16 ***\nORIGIN_SZG00536  2.2556561  0.1036769    21.757  &lt; 2e-16 ***\nORIGIN_SZG00537  0.2416097  0.1703028     1.419 0.155985    \nORIGIN_SZG00538  0.1618825  0.2276365     0.711 0.476995    \nORIGIN_SZG00539 -1.0001450  0.5868826    -1.704 0.088350 .  \nORIGIN_SZG00551 -0.7287037  0.1141513    -6.384 1.73e-10 ***\nORIGIN_SZG00552  1.7703811  0.1070876    16.532  &lt; 2e-16 ***\nORIGIN_SZG00553  1.2627395  0.1022665    12.348  &lt; 2e-16 ***\nORIGIN_SZG00554  4.8703944  0.1005596    48.433  &lt; 2e-16 ***\nORIGIN_SZG00555  4.2979333  0.1007491    42.660  &lt; 2e-16 ***\nORIGIN_SZG00559  0.7700466  0.1374366     5.603 2.11e-08 ***\nORIGIN_SZG00560  3.1402743  0.1112643    28.224  &lt; 2e-16 ***\nORIGIN_SZG00572 -1.9278363  0.2454531    -7.854 4.02e-15 ***\nORIGIN_SZG00573 -0.2029375  0.1095985    -1.852 0.064077 .  \nORIGIN_SZG00574  1.3123306  0.1067832    12.290  &lt; 2e-16 ***\nORIGIN_SZG00575  5.9738460  0.1005239    59.427  &lt; 2e-16 ***\nORIGIN_SZG00576  4.5204334  0.1006213    44.925  &lt; 2e-16 ***\nORIGIN_SZG00578 -0.2018923  0.1470308    -1.373 0.169712    \nORIGIN_SZG00582  0.1228583  0.1471102     0.835 0.403636    \nORIGIN_SZG00583 -0.0166328  0.2208708    -0.075 0.939972    \nORIGIN_SZG00584  3.3493055  0.1148029    29.174  &lt; 2e-16 ***\nORIGIN_SZG00593  1.1378569  0.1120740    10.153  &lt; 2e-16 ***\nORIGIN_SZG00594  0.9422287  0.1038451     9.073  &lt; 2e-16 ***\nORIGIN_SZG00595  1.1481337  0.1024266    11.209  &lt; 2e-16 ***\nORIGIN_SZG00596  4.2675466  0.1005919    42.424  &lt; 2e-16 ***\nORIGIN_SZG00597  1.4906151  0.1164873    12.796  &lt; 2e-16 ***\nORIGIN_SZG00603  0.7593388  0.1482793     5.121 3.04e-07 ***\nORIGIN_SZG00604 -1.0145959  0.2862761    -3.544 0.000394 ***\nORIGIN_SZG00615 -0.2814000  0.1097136    -2.565 0.010322 *  \nORIGIN_SZG00616  0.8461527  0.1046263     8.087 6.10e-16 ***\nORIGIN_SZG00617  1.6794348  0.1019926    16.466  &lt; 2e-16 ***\nORIGIN_SZG00618  4.9327663  0.1005746    49.046  &lt; 2e-16 ***\nORIGIN_SZG00620  1.9811727  0.1056358    18.755  &lt; 2e-16 ***\nORIGIN_SZG00637  0.5563318  0.1078849     5.157 2.51e-07 ***\nORIGIN_SZG00638  4.4033437  0.1005901    43.775  &lt; 2e-16 ***\nORIGIN_SZG00657  2.2696835  0.1018305    22.289  &lt; 2e-16 ***\nORIGIN_SZG00658  3.7323019  0.1007093    37.060  &lt; 2e-16 ***\nORIGIN_SZG00659  3.9545616  0.1006506    39.290  &lt; 2e-16 ***\nORIGIN_SZG00660  5.1271607  0.1005604    50.986  &lt; 2e-16 ***\nORIGIN_SZG00662  5.0414772  0.1007991    50.015  &lt; 2e-16 ***\nORIGIN_SZG00677  2.1684454  0.1030260    21.048  &lt; 2e-16 ***\nORIGIN_SZG00678  0.0845926  0.1095712     0.772 0.440095    \nORIGIN_SZG00679  4.9604070  0.1005732    49.321  &lt; 2e-16 ***\nORIGIN_SZG00680  5.2101281  0.1005711    51.805  &lt; 2e-16 ***\nORIGIN_SZG00681  3.9174221  0.1008596    38.840  &lt; 2e-16 ***\nORIGIN_SZG00699  1.7055648  0.1029158    16.572  &lt; 2e-16 ***\nORIGIN_SZG00700  3.9039968  0.1006914    38.772  &lt; 2e-16 ***\nORIGIN_SZG00701  3.8156223  0.1006949    37.893  &lt; 2e-16 ***\nORIGIN_SZG00702  4.9258333  0.1005684    48.980  &lt; 2e-16 ***\nORIGIN_SZG00704  1.9681949  0.1054923    18.657  &lt; 2e-16 ***\nORIGIN_SZG00722  1.7613477  0.1020852    17.254  &lt; 2e-16 ***\nORIGIN_SZG00725  1.2662960  0.1095636    11.558  &lt; 2e-16 ***\nORIGIN_SZG00741  2.1878381  0.1018608    21.479  &lt; 2e-16 ***\nORIGIN_SZG00743  2.4482198  0.1012555    24.179  &lt; 2e-16 ***\nORIGIN_SZG00744  4.5108606  0.1006059    44.837  &lt; 2e-16 ***\nORIGIN_SZG00761  1.6449142  0.1041596    15.792  &lt; 2e-16 ***\nORIGIN_SZG00762  3.6988897  0.1007665    36.708  &lt; 2e-16 ***\nORIGIN_SZG00763  0.8957865  0.1042256     8.595  &lt; 2e-16 ***\nORIGIN_SZG00764  5.0120561  0.1005672    49.838  &lt; 2e-16 ***\nORIGIN_SZG00765  3.9739889  0.1008402    39.409  &lt; 2e-16 ***\nORIGIN_SZG00767  6.0308148  0.1005877    59.956  &lt; 2e-16 ***\nORIGIN_SZG00772  0.7915610  0.1238393     6.392 1.64e-10 ***\nORIGIN_SZG00784  1.0636164  0.1032117    10.305  &lt; 2e-16 ***\nORIGIN_SZG00785  4.0946407  0.1006039    40.701  &lt; 2e-16 ***\nORIGIN_SZG00786  3.8363878  0.1006878    38.102  &lt; 2e-16 ***\nORIGIN_SZG00787  4.4563453  0.1007697    44.223  &lt; 2e-16 ***\nORIGIN_SZG00788  5.2675152  0.1006591    52.330  &lt; 2e-16 ***\nORIGIN_SZG00789  3.6692953  0.1010627    36.307  &lt; 2e-16 ***\nORIGIN_SZG00803  0.1119448  0.1117774     1.001 0.316586    \nORIGIN_SZG00804  4.7324048  0.1006013    47.041  &lt; 2e-16 ***\nORIGIN_SZG00805  4.7216773  0.1005703    46.949  &lt; 2e-16 ***\nORIGIN_SZG00806  4.4270158  0.1006022    44.005  &lt; 2e-16 ***\nORIGIN_SZG00807  5.3494347  0.1006093    53.170  &lt; 2e-16 ***\nORIGIN_SZG00808  3.6632271  0.1011000    36.234  &lt; 2e-16 ***\nORIGIN_SZG00809  5.4114102  0.1005779    53.803  &lt; 2e-16 ***\nORIGIN_SZG00810  4.7106516  0.1006824    46.787  &lt; 2e-16 ***\nORIGIN_SZG00814  2.5813746  0.1043762    24.731  &lt; 2e-16 ***\nORIGIN_SZG00819  3.7573726  0.1023103    36.725  &lt; 2e-16 ***\nORIGIN_SZG00824  0.7845824  0.1076410     7.289 3.13e-13 ***\nORIGIN_SZG00826  2.3939989  0.1010036    23.702  &lt; 2e-16 ***\nORIGIN_SZG00827  4.3843128  0.1005879    43.587  &lt; 2e-16 ***\nORIGIN_SZG00828  4.7832152  0.1005804    47.556  &lt; 2e-16 ***\nORIGIN_SZG00829  4.8453948  0.1006168    48.157  &lt; 2e-16 ***\nORIGIN_SZG00830  5.0537742  0.1006507    50.211  &lt; 2e-16 ***\nORIGIN_SZG00831  5.9455710  0.1005600    59.125  &lt; 2e-16 ***\nORIGIN_SZG00832  5.1437219  0.1007245    51.067  &lt; 2e-16 ***\nORIGIN_SZG00835  2.1093464  0.1048150    20.124  &lt; 2e-16 ***\nORIGIN_SZG00844 -0.4288131  0.1272128    -3.371 0.000749 ***\nORIGIN_SZG00846  3.8496208  0.1006479    38.248  &lt; 2e-16 ***\nORIGIN_SZG00847  2.9208313  0.1009016    28.947  &lt; 2e-16 ***\nORIGIN_SZG00848  4.1675120  0.1006243    41.417  &lt; 2e-16 ***\nORIGIN_SZG00849  3.3630412  0.1008133    33.359  &lt; 2e-16 ***\nORIGIN_SZG00850  4.3381665  0.1006588    43.098  &lt; 2e-16 ***\nORIGIN_SZG00851  4.8468264  0.1006018    48.178  &lt; 2e-16 ***\nORIGIN_SZG00852  4.4104691  0.1007084    43.794  &lt; 2e-16 ***\nORIGIN_SZG00853  6.3587745  0.1006147    63.199  &lt; 2e-16 ***\nORIGIN_SZG00854  2.6271052  0.1038396    25.300  &lt; 2e-16 ***\nORIGIN_SZG00855  1.2641323  0.1095569    11.539  &lt; 2e-16 ***\nORIGIN_SZG00856  3.0379069  0.1022061    29.723  &lt; 2e-16 ***\nORIGIN_SZG00866  1.2864716  0.1054809    12.196  &lt; 2e-16 ***\nORIGIN_SZG00867  2.5970476  0.1012045    25.661  &lt; 2e-16 ***\nORIGIN_SZG00868  1.8559576  0.1020438    18.188  &lt; 2e-16 ***\nORIGIN_SZG00869  4.5150874  0.1006889    44.842  &lt; 2e-16 ***\nORIGIN_SZG00870  5.3036640  0.1005567    52.743  &lt; 2e-16 ***\nORIGIN_SZG00871  5.1894994  0.1006909    51.539  &lt; 2e-16 ***\nORIGIN_SZG00872  3.1148161  0.1010899    30.812  &lt; 2e-16 ***\nORIGIN_SZG00873  3.2662891  0.1010169    32.334  &lt; 2e-16 ***\nORIGIN_SZG00874  3.5449962  0.1008418    35.154  &lt; 2e-16 ***\nORIGIN_SZG00875  0.7112481  0.1237798     5.746 9.13e-09 ***\nORIGIN_SZG00876  1.5339406  0.1053739    14.557  &lt; 2e-16 ***\nORIGIN_SZG00877  1.1387915  0.1082649    10.519  &lt; 2e-16 ***\nORIGIN_SZG00887  2.0429239  0.1014074    20.146  &lt; 2e-16 ***\nORIGIN_SZG00888  3.5512800  0.1007423    35.251  &lt; 2e-16 ***\nORIGIN_SZG00889  0.3269565  0.1060716     3.082 0.002053 ** \nORIGIN_SZG00890  4.7508565  0.1005798    47.235  &lt; 2e-16 ***\nORIGIN_SZG00891  3.4519903  0.1011463    34.129  &lt; 2e-16 ***\nORIGIN_SZG00893  4.9184992  0.1005913    48.896  &lt; 2e-16 ***\nORIGIN_SZG00894  3.0137311  0.1010976    29.810  &lt; 2e-16 ***\nORIGIN_SZG00895  2.5850442  0.1016548    25.430  &lt; 2e-16 ***\nORIGIN_SZG00896  1.6654076  0.1036654    16.065  &lt; 2e-16 ***\nORIGIN_SZG00897 -0.2691737  0.1191474    -2.259 0.023873 *  \nORIGIN_SZG00898  2.0529759  0.1046946    19.609  &lt; 2e-16 ***\nORIGIN_SZG00908  3.5135254  0.1012258    34.710  &lt; 2e-16 ***\nORIGIN_SZG00909  3.5441360  0.1006670    35.207  &lt; 2e-16 ***\nORIGIN_SZG00910  1.4854581  0.1019617    14.569  &lt; 2e-16 ***\nORIGIN_SZG00911  2.9615485  0.1008834    29.356  &lt; 2e-16 ***\nORIGIN_SZG00912  4.4820952  0.1006017    44.553  &lt; 2e-16 ***\nORIGIN_SZG00915  4.7869122  0.1006048    47.581  &lt; 2e-16 ***\nORIGIN_SZG00917  4.2028403  0.1007856    41.701  &lt; 2e-16 ***\nORIGIN_SZG00918  0.7838437  0.1068266     7.338 2.18e-13 ***\nORIGIN_SZG00919  3.3396731  0.1009324    33.088  &lt; 2e-16 ***\nORIGIN_SZG00928  2.4362509  0.1014081    24.024  &lt; 2e-16 ***\nORIGIN_SZG00929  3.9127436  0.1006137    38.889  &lt; 2e-16 ***\nORIGIN_SZG00930  4.7916755  0.1005583    47.651  &lt; 2e-16 ***\nORIGIN_SZG00931  1.7763058  0.1018649    17.438  &lt; 2e-16 ***\nORIGIN_SZG00932  2.1881361  0.1020062    21.451  &lt; 2e-16 ***\nORIGIN_SZG00933  4.3777841  0.1006640    43.489  &lt; 2e-16 ***\nORIGIN_SZG00934  1.9483070  0.1019559    19.109  &lt; 2e-16 ***\nORIGIN_SZG00935  5.6731710  0.1005582    56.417  &lt; 2e-16 ***\nORIGIN_SZG00938 -1.7344343  0.2357479    -7.357 1.88e-13 ***\nORIGIN_SZG00939  5.6960605  0.1005975    56.622  &lt; 2e-16 ***\nORIGIN_SZG00940 -0.1018339  0.1172587    -0.868 0.385146    \nORIGIN_SZG00949  2.3287563  0.1012948    22.990  &lt; 2e-16 ***\nORIGIN_SZG00950  4.3888967  0.1006276    43.615  &lt; 2e-16 ***\nORIGIN_SZG00951  5.2501439  0.1005485    52.215  &lt; 2e-16 ***\nORIGIN_SZG00952  1.8894066  0.1026523    18.406  &lt; 2e-16 ***\nORIGIN_SZG00953  3.1315037  0.1009435    31.022  &lt; 2e-16 ***\nORIGIN_SZG00954  1.9710568  0.1018615    19.350  &lt; 2e-16 ***\nORIGIN_SZG00955  4.2369251  0.1006643    42.090  &lt; 2e-16 ***\nORIGIN_SZG00956  2.6426587  0.1011420    26.128  &lt; 2e-16 ***\nORIGIN_SZG00957  4.8216620  0.1006713    47.895  &lt; 2e-16 ***\nORIGIN_SZG00959  0.8787792  0.1116129     7.873 3.45e-15 ***\nORIGIN_SZG00961  0.8632570  0.1048437     8.234  &lt; 2e-16 ***\nORIGIN_SZG00962  6.1635585  0.1007091    61.202  &lt; 2e-16 ***\nORIGIN_SZG00970  2.7119255  0.1008204    26.899  &lt; 2e-16 ***\nORIGIN_SZG00971  4.1036472  0.1005827    40.799  &lt; 2e-16 ***\nORIGIN_SZG00972  3.9205364  0.1006195    38.964  &lt; 2e-16 ***\nORIGIN_SZG00974  3.6082469  0.1007708    35.806  &lt; 2e-16 ***\nORIGIN_SZG00975  3.2635133  0.1008920    32.347  &lt; 2e-16 ***\nORIGIN_SZG00976  1.9476539  0.1018809    19.117  &lt; 2e-16 ***\nORIGIN_SZG00977  5.1607163  0.1005811    51.309  &lt; 2e-16 ***\nORIGIN_SZG00978  5.0266799  0.1007509    49.892  &lt; 2e-16 ***\nORIGIN_SZG00982  2.1990302  0.1015305    21.659  &lt; 2e-16 ***\nORIGIN_SZG00983  6.8141507  0.1005966    67.737  &lt; 2e-16 ***\nORIGIN_SZG00984  5.0353031  0.1011321    49.789  &lt; 2e-16 ***\nORIGIN_SZG00991  2.8024577  0.1008936    27.776  &lt; 2e-16 ***\nORIGIN_SZG00992  3.0357174  0.1007417    30.134  &lt; 2e-16 ***\nORIGIN_SZG00993  2.8103440  0.1007735    27.888  &lt; 2e-16 ***\nORIGIN_SZG00994  2.2859327  0.1010870    22.614  &lt; 2e-16 ***\nORIGIN_SZG00995  3.8266654  0.1006617    38.015  &lt; 2e-16 ***\nORIGIN_SZG00996  3.5503660  0.1007839    35.228  &lt; 2e-16 ***\nORIGIN_SZG00997  2.1443020  0.1046655    20.487  &lt; 2e-16 ***\nORIGIN_SZG00998  5.2738556  0.1005865    52.431  &lt; 2e-16 ***\nORIGIN_SZG00999  5.2997039  0.1006642    52.647  &lt; 2e-16 ***\nORIGIN_SZG01001  2.1763698  0.1035112    21.025  &lt; 2e-16 ***\nORIGIN_SZG01003  4.8012988  0.1006096    47.722  &lt; 2e-16 ***\nORIGIN_SZG01004  5.7075755  0.1005758    56.749  &lt; 2e-16 ***\nORIGIN_SZG01011  0.8615325  0.1049362     8.210  &lt; 2e-16 ***\nORIGIN_SZG01012  0.7655994  0.1054270     7.262 3.82e-13 ***\nORIGIN_SZG01013  1.5717475  0.1017470    15.448  &lt; 2e-16 ***\nORIGIN_SZG01014  2.3245677  0.1010668    23.000  &lt; 2e-16 ***\nORIGIN_SZG01015  1.6797880  0.1017476    16.509  &lt; 2e-16 ***\nORIGIN_SZG01016  3.5362049  0.1007572    35.096  &lt; 2e-16 ***\nORIGIN_SZG01018  4.1156439  0.1009920    40.752  &lt; 2e-16 ***\nORIGIN_SZG01019  5.7346211  0.1006259    56.990  &lt; 2e-16 ***\nORIGIN_SZG01023  3.7859701  0.1009481    37.504  &lt; 2e-16 ***\nORIGIN_SZG01024  4.8665393  0.1006196    48.366  &lt; 2e-16 ***\nORIGIN_SZG01025  0.2987243  0.1118953     2.670 0.007592 ** \nORIGIN_SZG01033  2.2159442  0.1011226    21.913  &lt; 2e-16 ***\nORIGIN_SZG01034  3.1178222  0.1007632    30.942  &lt; 2e-16 ***\nORIGIN_SZG01035  3.8206712  0.1006553    37.958  &lt; 2e-16 ***\nORIGIN_SZG01036  1.9491464  0.1014556    19.212  &lt; 2e-16 ***\nORIGIN_SZG01037  3.1044446  0.1007485    30.814  &lt; 2e-16 ***\nORIGIN_SZG01043  2.1296566  0.1036076    20.555  &lt; 2e-16 ***\nORIGIN_SZG01045  4.5077948  0.1006189    44.801  &lt; 2e-16 ***\nORIGIN_SZG01046  4.4065728  0.1006461    43.783  &lt; 2e-16 ***\nORIGIN_SZG01053  3.6851787  0.1006797    36.603  &lt; 2e-16 ***\nORIGIN_SZG01054  2.6972763  0.1008122    26.755  &lt; 2e-16 ***\nORIGIN_SZG01055  3.7181118  0.1006451    36.943  &lt; 2e-16 ***\nORIGIN_SZG01056  2.7148478  0.1009252    26.900  &lt; 2e-16 ***\nORIGIN_SZG01064 -0.6393570  0.2694891    -2.372 0.017669 *  \nORIGIN_SZG01066  4.2331343  0.1006470    42.059  &lt; 2e-16 ***\nORIGIN_SZG01067  4.3845420  0.1007422    43.522  &lt; 2e-16 ***\nORIGIN_SZG01074  3.0101024  0.1007965    29.863  &lt; 2e-16 ***\nORIGIN_SZG01075  2.3492501  0.1010145    23.257  &lt; 2e-16 ***\nORIGIN_SZG01076  2.4002233  0.1008810    23.793  &lt; 2e-16 ***\nORIGIN_SZG01077  2.5829156  0.1010132    25.570  &lt; 2e-16 ***\nORIGIN_SZG01079  4.1280810  0.1006360    41.020  &lt; 2e-16 ***\nORIGIN_SZG01085 -1.7828070  0.1736594   -10.266  &lt; 2e-16 ***\nORIGIN_SZG01087  4.0911803  0.1006924    40.630  &lt; 2e-16 ***\nORIGIN_SZG01088  2.4712946  0.1012125    24.417  &lt; 2e-16 ***\nORIGIN_SZG01094  1.1019203  0.1095525    10.058  &lt; 2e-16 ***\nORIGIN_SZG01095  0.7387377  0.1057479     6.986 2.83e-12 ***\nORIGIN_SZG01096  2.3789932  0.1025839    23.191  &lt; 2e-16 ***\nORIGIN_SZG01097  4.3884569  0.1005838    43.630  &lt; 2e-16 ***\nORIGIN_SZG01098  2.0303511  0.1021048    19.885  &lt; 2e-16 ***\nORIGIN_SZG01099  3.3924597  0.1007360    33.677  &lt; 2e-16 ***\nORIGIN_SZG01105  1.2038316  0.1177525    10.223  &lt; 2e-16 ***\nORIGIN_SZG01106 -0.3741760  0.1361634    -2.748 0.005996 ** \nORIGIN_SZG01107  1.8904159  0.1041988    18.142  &lt; 2e-16 ***\nORIGIN_SZG01108  6.1062255  0.1005571    60.724  &lt; 2e-16 ***\nORIGIN_SZG01109  3.0381634  0.1010463    30.067  &lt; 2e-16 ***\nORIGIN_SZG01116  2.7881335  0.1008655    27.642  &lt; 2e-16 ***\nORIGIN_SZG01117  1.4193591  0.1020144    13.913  &lt; 2e-16 ***\nORIGIN_SZG01118  1.5503336  0.1023137    15.153  &lt; 2e-16 ***\nORIGIN_SZG01119  2.7050480  0.1009742    26.789  &lt; 2e-16 ***\nORIGIN_SZG01120  2.6089426  0.1013571    25.740  &lt; 2e-16 ***\nORIGIN_SZG01129  4.4958551  0.1006394    44.673  &lt; 2e-16 ***\nORIGIN_SZG01130  4.5408907  0.1006040    45.136  &lt; 2e-16 ***\nORIGIN_SZG01131  3.4610308  0.1010344    34.256  &lt; 2e-16 ***\nORIGIN_SZG01136  1.6308244  0.1016610    16.042  &lt; 2e-16 ***\nORIGIN_SZG01138  0.8421005  0.1045007     8.058 7.73e-16 ***\nORIGIN_SZG01139  3.5602289  0.1006462    35.374  &lt; 2e-16 ***\nORIGIN_SZG01141  3.5411149  0.1007070    35.163  &lt; 2e-16 ***\nORIGIN_SZG01148  0.9431613  0.1130866     8.340  &lt; 2e-16 ***\nORIGIN_SZG01149  2.4828375  0.1019899    24.344  &lt; 2e-16 ***\nORIGIN_SZG01150  4.7662728  0.1005930    47.382  &lt; 2e-16 ***\nORIGIN_SZG01151  3.6842826  0.1007328    36.575  &lt; 2e-16 ***\nORIGIN_SZG01158  1.9158558  0.1011168    18.947  &lt; 2e-16 ***\nORIGIN_SZG01159  3.3594569  0.1006757    33.369  &lt; 2e-16 ***\nORIGIN_SZG01160  4.3818693  0.1005873    43.563  &lt; 2e-16 ***\nORIGIN_SZG01171  5.3454364  0.1006055    53.133  &lt; 2e-16 ***\nORIGIN_SZG01172  5.2068980  0.1006004    51.758  &lt; 2e-16 ***\nORIGIN_SZG01173  2.4542164  0.1012885    24.230  &lt; 2e-16 ***\nORIGIN_SZG01174 -1.8627986  0.2856057    -6.522 6.92e-11 ***\nORIGIN_SZG01178  2.1531396  0.1010437    21.309  &lt; 2e-16 ***\nORIGIN_SZG01179  2.8475620  0.1007484    28.264  &lt; 2e-16 ***\nORIGIN_SZG01180  3.8996979  0.1006100    38.761  &lt; 2e-16 ***\nORIGIN_SZG01181  3.1881219  0.1007281    31.651  &lt; 2e-16 ***\nORIGIN_SZG01183  2.4843085  0.1011858    24.552  &lt; 2e-16 ***\nORIGIN_SZG01190  1.4336980  0.1114216    12.867  &lt; 2e-16 ***\nORIGIN_SZG01192  4.0842030  0.1007198    40.550  &lt; 2e-16 ***\nORIGIN_SZG01193  4.0801016  0.1006651    40.531  &lt; 2e-16 ***\nORIGIN_SZG01194  2.3646584  0.1014902    23.299  &lt; 2e-16 ***\nORIGIN_SZG01200  2.9124881  0.1007387    28.911  &lt; 2e-16 ***\nORIGIN_SZG01201  2.7714254  0.1007664    27.503  &lt; 2e-16 ***\nORIGIN_SZG01203  3.6559894  0.1006902    36.309  &lt; 2e-16 ***\nORIGIN_SZG01204  3.3363703  0.1007479    33.116  &lt; 2e-16 ***\nORIGIN_SZG01211  0.7097837  0.1343647     5.283 1.27e-07 ***\nORIGIN_SZG01214  4.8011868  0.1006153    47.718  &lt; 2e-16 ***\nORIGIN_SZG01215  1.3353373  0.1080848    12.355  &lt; 2e-16 ***\nORIGIN_SZG01216  0.4241500  0.1083438     3.915 9.05e-05 ***\nORIGIN_SZG01220  3.9391053  0.1006039    39.155  &lt; 2e-16 ***\nORIGIN_SZG01221  3.5882208  0.1006221    35.660  &lt; 2e-16 ***\nORIGIN_SZG01222  3.2746292  0.1009890    32.426  &lt; 2e-16 ***\nORIGIN_SZG01223  1.5654900  0.1018888    15.365  &lt; 2e-16 ***\nORIGIN_SZG01224  2.4725958  0.1010689    24.464  &lt; 2e-16 ***\nORIGIN_SZG01231 -1.5941753  0.2140992    -7.446 9.62e-14 ***\nORIGIN_SZG01232  0.5193924  0.1503710     3.454 0.000552 ***\nORIGIN_SZG01235  2.3169489  0.1014597    22.836  &lt; 2e-16 ***\nORIGIN_SZG01236  2.3398787  0.1014577    23.063  &lt; 2e-16 ***\nORIGIN_SZG01241  2.1946427  0.1010149    21.726  &lt; 2e-16 ***\nORIGIN_SZG01242  2.7639784  0.1007485    27.434  &lt; 2e-16 ***\nORIGIN_SZG01243  3.4399487  0.1006380    34.181  &lt; 2e-16 ***\nORIGIN_SZG01246  2.6671380  0.1009298    26.426  &lt; 2e-16 ***\nORIGIN_SZG01256  3.7288442  0.1008002    36.992  &lt; 2e-16 ***\nORIGIN_SZG01257  4.6261357  0.1006736    45.952  &lt; 2e-16 ***\nORIGIN_SZG01258  2.6233252  0.1015689    25.828  &lt; 2e-16 ***\nORIGIN_SZG01262  2.5356933  0.1008550    25.142  &lt; 2e-16 ***\nORIGIN_SZG01263  3.1306978  0.1006559    31.103  &lt; 2e-16 ***\nORIGIN_SZG01264  2.1596879  0.1012047    21.340  &lt; 2e-16 ***\nORIGIN_SZG01265  1.9565555  0.1014744    19.281  &lt; 2e-16 ***\nORIGIN_SZG01266  3.2672451  0.1008150    32.408  &lt; 2e-16 ***\nORIGIN_SZG01267  1.3853800  0.1039950    13.322  &lt; 2e-16 ***\nORIGIN_SZG01272 -0.9516229  0.1531328    -6.214 5.15e-10 ***\nORIGIN_SZG01273  3.1773778  0.1012367    31.386  &lt; 2e-16 ***\nORIGIN_SZG01277  4.7765841  0.1006148    47.474  &lt; 2e-16 ***\nORIGIN_SZG01278  2.2147342  0.1014672    21.827  &lt; 2e-16 ***\nORIGIN_SZG01283  4.3728596  0.1005924    43.471  &lt; 2e-16 ***\nORIGIN_SZG01284  3.5368710  0.1006344    35.146  &lt; 2e-16 ***\nORIGIN_SZG01285  4.2376876  0.1005788    42.133  &lt; 2e-16 ***\nORIGIN_SZG01286  2.5226863  0.1010196    24.972  &lt; 2e-16 ***\nORIGIN_SZG01289  0.6847130  0.1105531     6.194 5.88e-10 ***\nORIGIN_SZG01293 -0.6771832  0.1343514    -5.040 4.65e-07 ***\nORIGIN_SZG01294  4.6369060  0.1007109    46.042  &lt; 2e-16 ***\nORIGIN_SZG01295  2.1573924  0.1026180    21.024  &lt; 2e-16 ***\nORIGIN_SZG01298  3.7818889  0.1007616    37.533  &lt; 2e-16 ***\nORIGIN_SZG01299  4.1591095  0.1007216    41.293  &lt; 2e-16 ***\nORIGIN_SZG01304  4.1488698  0.1005971    41.242  &lt; 2e-16 ***\nORIGIN_SZG01305  3.5376313  0.1006073    35.163  &lt; 2e-16 ***\nORIGIN_SZG01307  0.0658663  0.1073162     0.614 0.539374    \nORIGIN_SZG01308  3.3992677  0.1007072    33.754  &lt; 2e-16 ***\nORIGIN_SZG01310 -0.6704378  0.1645015    -4.076 4.59e-05 ***\nORIGIN_SZG01316  1.2058422  0.1058481    11.392  &lt; 2e-16 ***\nORIGIN_SZG01317  2.8062876  0.1011490    27.744  &lt; 2e-16 ***\nORIGIN_SZG01318  2.1337689  0.1016801    20.985  &lt; 2e-16 ***\nORIGIN_SZG01319  5.0427695  0.1006065    50.124  &lt; 2e-16 ***\nORIGIN_SZG01320  3.5678436  0.1009262    35.351  &lt; 2e-16 ***\nORIGIN_SZG01325  1.7572704  0.1012647    17.353  &lt; 2e-16 ***\nORIGIN_SZG01326  3.7218367  0.1006052    36.994  &lt; 2e-16 ***\nORIGIN_SZG01327  3.5552634  0.1006220    35.333  &lt; 2e-16 ***\nORIGIN_SZG01328  2.2138347  0.1009565    21.929  &lt; 2e-16 ***\nORIGIN_SZG01329  2.4759936  0.1011817    24.471  &lt; 2e-16 ***\nORIGIN_SZG01330  3.3047511  0.1008446    32.771  &lt; 2e-16 ***\nORIGIN_SZG01331 -1.1694434  0.3178542    -3.679 0.000234 ***\nORIGIN_SZG01333  2.6733161  0.1012512    26.403  &lt; 2e-16 ***\nORIGIN_SZG01334  3.0110889  0.1011438    29.770  &lt; 2e-16 ***\nORIGIN_SZG01335  2.5341729  0.1018630    24.878  &lt; 2e-16 ***\nORIGIN_SZG01336 -0.1400380  0.1469922    -0.953 0.340747    \nORIGIN_SZG01337  0.2538851  0.1117081     2.273 0.023041 *  \nORIGIN_SZG01338 -0.9064720  0.1293545    -7.008 2.42e-12 ***\nORIGIN_SZG01339  4.9731467  0.1005974    49.436  &lt; 2e-16 ***\nORIGIN_SZG01340  3.2768282  0.1009180    32.470  &lt; 2e-16 ***\nORIGIN_SZG01341 -2.2983850  0.7142208    -3.218 0.001291 ** \nORIGIN_SZG01346  3.4041156  0.1007067    33.802  &lt; 2e-16 ***\nORIGIN_SZG01347  4.3896122  0.1005801    43.643  &lt; 2e-16 ***\nORIGIN_SZG01348  2.8118111  0.1007120    27.919  &lt; 2e-16 ***\nORIGIN_SZG01349  2.6170318  0.1008446    25.951  &lt; 2e-16 ***\nORIGIN_SZG01350  2.7950797  0.1011351    27.637  &lt; 2e-16 ***\nORIGIN_SZG01353  3.0386181  0.1008696    30.124  &lt; 2e-16 ***\nORIGIN_SZG01354  2.5315425  0.1012392    25.006  &lt; 2e-16 ***\nORIGIN_SZG01355  3.3030367  0.1008716    32.745  &lt; 2e-16 ***\nORIGIN_SZG01357  2.3799499  0.1022460    23.277  &lt; 2e-16 ***\nORIGIN_SZG01358  3.6890144  0.1007822    36.604  &lt; 2e-16 ***\nORIGIN_SZG01359  3.9841653  0.1006623    39.580  &lt; 2e-16 ***\nORIGIN_SZG01360  4.0260457  0.1006718    39.992  &lt; 2e-16 ***\nORIGIN_SZG01361  5.1701174  0.1006165    51.384  &lt; 2e-16 ***\nORIGIN_SZG01362  1.1552067  0.1102247    10.480  &lt; 2e-16 ***\nORIGIN_SZG01368  2.2352117  0.1008708    22.159  &lt; 2e-16 ***\nORIGIN_SZG01369  2.0911356  0.1008875    20.727  &lt; 2e-16 ***\nORIGIN_SZG01370  3.2301949  0.1006449    32.095  &lt; 2e-16 ***\nORIGIN_SZG01371  2.5914487  0.1010018    25.657  &lt; 2e-16 ***\nORIGIN_SZG01372  1.8446979  0.1013665    18.198  &lt; 2e-16 ***\nORIGIN_SZG01373  0.3142033  0.1107370     2.837 0.004548 ** \nORIGIN_SZG01374  2.0840043  0.1012495    20.583  &lt; 2e-16 ***\nORIGIN_SZG01375  3.7097666  0.1008147    36.798  &lt; 2e-16 ***\nORIGIN_SZG01376  3.1125264  0.1012831    30.731  &lt; 2e-16 ***\nORIGIN_SZG01379  1.2716305  0.1062354    11.970  &lt; 2e-16 ***\nORIGIN_SZG01380  5.3852195  0.1005743    53.545  &lt; 2e-16 ***\nORIGIN_SZG01381  4.9553751  0.1006000    49.258  &lt; 2e-16 ***\nORIGIN_SZG01382  4.3555117  0.1007267    43.241  &lt; 2e-16 ***\nORIGIN_SZG01383  1.8101010  0.1033745    17.510  &lt; 2e-16 ***\nORIGIN_SZG01388  2.8297716  0.1007296    28.093  &lt; 2e-16 ***\nORIGIN_SZG01389  1.9751681  0.1009081    19.574  &lt; 2e-16 ***\nORIGIN_SZG01390  2.7372689  0.1007412    27.171  &lt; 2e-16 ***\nORIGIN_SZG01391  2.5523414  0.1008611    25.306  &lt; 2e-16 ***\nORIGIN_SZG01392  2.3263469  0.1017525    22.863  &lt; 2e-16 ***\nORIGIN_SZG01393  1.4950382  0.1016162    14.713  &lt; 2e-16 ***\nORIGIN_SZG01394  2.9156725  0.1007962    28.926  &lt; 2e-16 ***\nORIGIN_SZG01395  3.0189371  0.1007871    29.954  &lt; 2e-16 ***\nORIGIN_SZG01396  4.0574214  0.1006491    40.313  &lt; 2e-16 ***\nORIGIN_SZG01397  4.1244393  0.1006598    40.974  &lt; 2e-16 ***\nORIGIN_SZG01398  3.0388960  0.1011131    30.054  &lt; 2e-16 ***\nORIGIN_SZG01400  4.1431813  0.1007421    41.127  &lt; 2e-16 ***\nORIGIN_SZG01401  4.5209288  0.1006049    44.937  &lt; 2e-16 ***\nORIGIN_SZG01402  4.5384866  0.1006264    45.102  &lt; 2e-16 ***\nORIGIN_SZG01404  4.5958381  0.1016816    45.198  &lt; 2e-16 ***\nORIGIN_SZG01410  3.4327802  0.1006170    34.117  &lt; 2e-16 ***\nORIGIN_SZG01411  2.3498175  0.1008349    23.304  &lt; 2e-16 ***\nORIGIN_SZG01412  2.7045716  0.1007147    26.854  &lt; 2e-16 ***\nORIGIN_SZG01413  3.5845065  0.1006341    35.619  &lt; 2e-16 ***\nORIGIN_SZG01414  2.8870307  0.1007187    28.664  &lt; 2e-16 ***\nORIGIN_SZG01415  2.3954225  0.1009402    23.731  &lt; 2e-16 ***\nORIGIN_SZG01416  3.0340216  0.1007636    30.110  &lt; 2e-16 ***\nORIGIN_SZG01417  3.2423112  0.1007273    32.189  &lt; 2e-16 ***\nORIGIN_SZG01418  4.0263897  0.1006391    40.008  &lt; 2e-16 ***\nORIGIN_SZG01419  3.4964306  0.1007362    34.709  &lt; 2e-16 ***\nORIGIN_SZG01422  4.5733699  0.1006553    45.436  &lt; 2e-16 ***\nORIGIN_SZG01423  5.4427330  0.1005916    54.107  &lt; 2e-16 ***\nORIGIN_SZG01430  3.1365369  0.1006896    31.151  &lt; 2e-16 ***\nORIGIN_SZG01431  3.1834063  0.1006366    31.633  &lt; 2e-16 ***\nORIGIN_SZG01432  3.2303699  0.1006332    32.100  &lt; 2e-16 ***\nORIGIN_SZG01433  1.9018135  0.1017601    18.689  &lt; 2e-16 ***\nORIGIN_SZG01434  3.4375248  0.1006645    34.148  &lt; 2e-16 ***\nORIGIN_SZG01435  3.8445327  0.1006009    38.216  &lt; 2e-16 ***\nORIGIN_SZG01436  0.8568736  0.1028952     8.328  &lt; 2e-16 ***\nORIGIN_SZG01437  4.0494652  0.1006149    40.247  &lt; 2e-16 ***\nORIGIN_SZG01438  4.4922557  0.1005779    44.664  &lt; 2e-16 ***\nORIGIN_SZG01439  5.1108243  0.1005670    50.820  &lt; 2e-16 ***\nORIGIN_SZG01440  1.4950832  0.1025193    14.583  &lt; 2e-16 ***\nORIGIN_SZG01442  4.4213843  0.1007437    43.887  &lt; 2e-16 ***\nORIGIN_SZG01443  5.4684481  0.1005983    54.359  &lt; 2e-16 ***\nORIGIN_SZG01444  4.4800764  0.1007986    44.446  &lt; 2e-16 ***\nORIGIN_SZG01452  2.2937160  0.1008072    22.754  &lt; 2e-16 ***\nORIGIN_SZG01453  2.4265304  0.1007886    24.075  &lt; 2e-16 ***\nORIGIN_SZG01454  1.4235617  0.1021388    13.938  &lt; 2e-16 ***\nORIGIN_SZG01455  2.8178253  0.1008431    27.943  &lt; 2e-16 ***\nORIGIN_SZG01456  3.2333354  0.1006926    32.111  &lt; 2e-16 ***\nORIGIN_SZG01457  4.0601917  0.1006042    40.358  &lt; 2e-16 ***\nORIGIN_SZG01458  4.4022276  0.1005888    43.765  &lt; 2e-16 ***\nORIGIN_SZG01459  3.8601373  0.1006260    38.361  &lt; 2e-16 ***\nORIGIN_SZG01460  3.1241350  0.1007147    31.020  &lt; 2e-16 ***\nORIGIN_SZG01461  1.6836242  0.1018895    16.524  &lt; 2e-16 ***\nORIGIN_SZG01464  5.8380625  0.1005896    58.038  &lt; 2e-16 ***\nORIGIN_SZG01465  5.3265425  0.1006404    52.926  &lt; 2e-16 ***\nORIGIN_SZG01472  0.8147520  0.1022803     7.966 1.64e-15 ***\nORIGIN_SZG01473  1.8536522  0.1009812    18.356  &lt; 2e-16 ***\nORIGIN_SZG01474  2.9619095  0.1006574    29.426  &lt; 2e-16 ***\nORIGIN_SZG01475  3.9351839  0.1006037    39.116  &lt; 2e-16 ***\nORIGIN_SZG01476  3.2267222  0.1007070    32.041  &lt; 2e-16 ***\nORIGIN_SZG01477  4.7387541  0.1005588    47.124  &lt; 2e-16 ***\nORIGIN_SZG01478  3.0719463  0.1007131    30.502  &lt; 2e-16 ***\nORIGIN_SZG01479  3.3005936  0.1006798    32.783  &lt; 2e-16 ***\nORIGIN_SZG01480  5.0987842  0.1005578    50.705  &lt; 2e-16 ***\nORIGIN_SZG01481  2.4164049  0.1010135    23.922  &lt; 2e-16 ***\nORIGIN_SZG01482  2.7085278  0.1013038    26.737  &lt; 2e-16 ***\nORIGIN_SZG01485  5.2700675  0.1006454    52.363  &lt; 2e-16 ***\nORIGIN_SZG01494  2.1234038  0.1011921    20.984  &lt; 2e-16 ***\nORIGIN_SZG01495  2.2470353  0.1008127    22.289  &lt; 2e-16 ***\nORIGIN_SZG01496  3.3759101  0.1006202    33.551  &lt; 2e-16 ***\nORIGIN_SZG01497  3.5884477  0.1006478    35.654  &lt; 2e-16 ***\nORIGIN_SZG01498  4.0156234  0.1005992    39.917  &lt; 2e-16 ***\nORIGIN_SZG01499  4.2386299  0.1005837    42.140  &lt; 2e-16 ***\nORIGIN_SZG01500  4.1223730  0.1006585    40.954  &lt; 2e-16 ***\nORIGIN_SZG01501  4.4126906  0.1005860    43.870  &lt; 2e-16 ***\nORIGIN_SZG01502  3.8719391  0.1006261    38.478  &lt; 2e-16 ***\nORIGIN_SZG01506 -0.0005228  0.1479104    -0.004 0.997180    \nORIGIN_SZG01515  1.2228384  0.1027062    11.906  &lt; 2e-16 ***\nORIGIN_SZG01516  2.7423584  0.1007251    27.226  &lt; 2e-16 ***\nORIGIN_SZG01517  2.9824583  0.1007386    29.606  &lt; 2e-16 ***\nORIGIN_SZG01518  2.9741622  0.1007748    29.513  &lt; 2e-16 ***\nORIGIN_SZG01519  4.2269512  0.1006337    42.003  &lt; 2e-16 ***\nORIGIN_SZG01520  3.7087623  0.1006350    36.854  &lt; 2e-16 ***\nORIGIN_SZG01521  2.2374854  0.1011006    22.131  &lt; 2e-16 ***\nORIGIN_SZG01522  4.6087805  0.1005784    45.823  &lt; 2e-16 ***\nORIGIN_SZG01523  3.1384247  0.1016164    30.885  &lt; 2e-16 ***\nORIGIN_SZG01524  3.3162231  0.1009334    32.856  &lt; 2e-16 ***\nORIGIN_SZG01527  3.3113506  0.1017721    32.537  &lt; 2e-16 ***\nORIGIN_SZG01535  0.1332807  0.1241953     1.073 0.283202    \nORIGIN_SZG01536  0.4142504  0.1055809     3.924 8.73e-05 ***\nORIGIN_SZG01537  1.5241460  0.1017048    14.986  &lt; 2e-16 ***\nORIGIN_SZG01538  2.8805581  0.1006924    28.608  &lt; 2e-16 ***\nORIGIN_SZG01539  3.3403048  0.1006398    33.191  &lt; 2e-16 ***\nORIGIN_SZG01540  3.8987431  0.1006073    38.752  &lt; 2e-16 ***\nORIGIN_SZG01541  5.1530770  0.1006388    51.204  &lt; 2e-16 ***\nORIGIN_SZG01542  2.1467610  0.1014941    21.152  &lt; 2e-16 ***\nORIGIN_SZG01543  2.9638942  0.1024181    28.939  &lt; 2e-16 ***\nORIGIN_SZG01544  3.8371678  0.1007194    38.098  &lt; 2e-16 ***\nORIGIN_SZG01547  0.6899515  0.1158644     5.955 2.60e-09 ***\nORIGIN_SZG01556  0.9485853  0.1157887     8.192 2.56e-16 ***\nORIGIN_SZG01557  0.6370233  0.1051268     6.060 1.36e-09 ***\nORIGIN_SZG01558  1.7830585  0.1020407    17.474  &lt; 2e-16 ***\nORIGIN_SZG01559  3.5141452  0.1006234    34.924  &lt; 2e-16 ***\nORIGIN_SZG01560  4.3301719  0.1005793    43.052  &lt; 2e-16 ***\nORIGIN_SZG01561  4.1613396  0.1006176    41.358  &lt; 2e-16 ***\nORIGIN_SZG01562  1.2557012  0.1022642    12.279  &lt; 2e-16 ***\nORIGIN_SZG01563  3.0560464  0.1007615    30.329  &lt; 2e-16 ***\nORIGIN_SZG01564  2.1780799  0.1013064    21.500  &lt; 2e-16 ***\nORIGIN_SZG01565  2.2630790  0.1013898    22.321  &lt; 2e-16 ***\nORIGIN_SZG01566  2.0114836  0.1023174    19.659  &lt; 2e-16 ***\nORIGIN_SZG01567  0.0401764  0.1263381     0.318 0.750480    \nORIGIN_SZG01568  0.8240150  0.1172769     7.026 2.12e-12 ***\nORIGIN_SZG01578 -2.1438163  0.7142508    -3.001 0.002687 ** \nORIGIN_SZG01580  2.0629280  0.1015966    20.305  &lt; 2e-16 ***\nORIGIN_SZG01581  0.7336085  0.1024007     7.164 7.83e-13 ***\nORIGIN_SZG01582  4.0352340  0.1005866    40.117  &lt; 2e-16 ***\nORIGIN_SZG01583  2.2308076  0.1024374    21.777  &lt; 2e-16 ***\nORIGIN_SZG01584  2.5777732  0.1009858    25.526  &lt; 2e-16 ***\nORIGIN_SZG01585  3.2389606  0.1008949    32.102  &lt; 2e-16 ***\nORIGIN_SZG01586  2.2585676  0.1012280    22.312  &lt; 2e-16 ***\nORIGIN_SZG01589  1.0738569  0.1078559     9.956  &lt; 2e-16 ***\nORIGIN_SZG01590  0.9286720  0.1158146     8.019 1.07e-15 ***\nORIGIN_SZG01600  4.1243471  0.1009898    40.839  &lt; 2e-16 ***\nORIGIN_SZG01601  2.6347511  0.1007704    26.146  &lt; 2e-16 ***\nORIGIN_SZG01602  3.2903660  0.1006851    32.680  &lt; 2e-16 ***\nORIGIN_SZG01603  4.2385420  0.1005902    42.137  &lt; 2e-16 ***\nORIGIN_SZG01604  2.7457555  0.1007926    27.242  &lt; 2e-16 ***\nORIGIN_SZG01605  4.1182266  0.1006013    40.936  &lt; 2e-16 ***\nORIGIN_SZG01606  3.6142809  0.1009104    35.817  &lt; 2e-16 ***\nORIGIN_SZG01607  2.8548343  0.1009308    28.285  &lt; 2e-16 ***\nORIGIN_SZG01608  4.9269738  0.1006117    48.970  &lt; 2e-16 ***\nORIGIN_SZG01609  4.8036516  0.1006638    47.720  &lt; 2e-16 ***\nORIGIN_SZG01610  1.2530218  0.1168841    10.720  &lt; 2e-16 ***\nORIGIN_SZG01622  2.6908090  0.1025423    26.241  &lt; 2e-16 ***\nORIGIN_SZG01623  4.0044089  0.1005931    39.808  &lt; 2e-16 ***\nORIGIN_SZG01624  2.7513531  0.1008233    27.289  &lt; 2e-16 ***\nORIGIN_SZG01625  4.1831878  0.1006139    41.577  &lt; 2e-16 ***\nORIGIN_SZG01626  4.8321659  0.1005705    48.048  &lt; 2e-16 ***\nORIGIN_SZG01627  3.2424458  0.1007419    32.186  &lt; 2e-16 ***\nORIGIN_SZG01628  4.9303687  0.1005754    49.022  &lt; 2e-16 ***\nORIGIN_SZG01629  3.8805753  0.1007377    38.522  &lt; 2e-16 ***\nORIGIN_SZG01630  3.9861014  0.1008040    39.543  &lt; 2e-16 ***\nORIGIN_SZG01631  0.3781955  0.1164506     3.248 0.001163 ** \nORIGIN_SZG01642  1.4917447  0.1041554    14.322  &lt; 2e-16 ***\nORIGIN_SZG01643  3.9087435  0.1006086    38.851  &lt; 2e-16 ***\nORIGIN_SZG01644  1.6898998  0.1017506    16.608  &lt; 2e-16 ***\nORIGIN_SZG01645  3.2104564  0.1006866    31.886  &lt; 2e-16 ***\nORIGIN_SZG01646  3.0401503  0.1008622    30.142  &lt; 2e-16 ***\nORIGIN_SZG01647  3.4591659  0.1006651    34.363  &lt; 2e-16 ***\nORIGIN_SZG01648  4.0696141  0.1006231    40.444  &lt; 2e-16 ***\nORIGIN_SZG01649  4.7980130  0.1005839    47.702  &lt; 2e-16 ***\nORIGIN_SZG01650  4.8791194  0.1006512    48.476  &lt; 2e-16 ***\nORIGIN_SZG01664 -1.1393419  0.1947598    -5.850 4.92e-09 ***\nORIGIN_SZG01665  4.1187908  0.1005908    40.946  &lt; 2e-16 ***\nORIGIN_SZG01666  2.8366051  0.1007406    28.158  &lt; 2e-16 ***\nORIGIN_SZG01667  3.8167840  0.1009954    37.792  &lt; 2e-16 ***\nORIGIN_SZG01668  3.9470324  0.1006200    39.227  &lt; 2e-16 ***\nORIGIN_SZG01670  4.8380385  0.1005742    48.104  &lt; 2e-16 ***\nORIGIN_SZG01671  5.5005200  0.1006483    54.651  &lt; 2e-16 ***\nORIGIN_SZG01672  5.0982979  0.1006851    50.636  &lt; 2e-16 ***\nORIGIN_SZG01684  3.2245549  0.1012010    31.863  &lt; 2e-16 ***\nORIGIN_SZG01685  3.6748155  0.1006496    36.511  &lt; 2e-16 ***\nORIGIN_SZG01686  3.5364705  0.1006515    35.136  &lt; 2e-16 ***\nORIGIN_SZG01687  3.1376809  0.1007709    31.137  &lt; 2e-16 ***\nORIGIN_SZG01688  2.7210067  0.1008416    26.983  &lt; 2e-16 ***\nORIGIN_SZG01689  2.3114005  0.1012103    22.838  &lt; 2e-16 ***\nORIGIN_SZG01690  3.7158112  0.1007186    36.893  &lt; 2e-16 ***\nORIGIN_SZG01691  4.5236586  0.1006108    44.962  &lt; 2e-16 ***\nORIGIN_SZG01692  4.1123662  0.1008263    40.787  &lt; 2e-16 ***\nORIGIN_SZG01706  3.6549642  0.1007000    36.296  &lt; 2e-16 ***\nORIGIN_SZG01707  3.5484317  0.1006350    35.260  &lt; 2e-16 ***\nORIGIN_SZG01708  4.0620224  0.1005965    40.379  &lt; 2e-16 ***\nORIGIN_SZG01709  3.1567107  0.1007241    31.340  &lt; 2e-16 ***\nORIGIN_SZG01710  4.4153503  0.1006009    43.890  &lt; 2e-16 ***\nORIGIN_SZG01711  4.2478260  0.1006326    42.211  &lt; 2e-16 ***\nORIGIN_SZG01712  4.8552980  0.1005736    48.276  &lt; 2e-16 ***\nORIGIN_SZG01713  2.4788961  0.1012620    24.480  &lt; 2e-16 ***\nORIGIN_SZG01714  5.0843315  0.1006244    50.528  &lt; 2e-16 ***\nORIGIN_SZG01727  3.8383668  0.1006477    38.137  &lt; 2e-16 ***\nORIGIN_SZG01728  3.7014657  0.1006265    36.784  &lt; 2e-16 ***\nORIGIN_SZG01729  3.2123279  0.1006692    31.910  &lt; 2e-16 ***\nORIGIN_SZG01730  1.3308659  0.1024824    12.986  &lt; 2e-16 ***\nORIGIN_SZG01731  3.8217342  0.1006589    37.967  &lt; 2e-16 ***\nORIGIN_SZG01732  4.5368610  0.1005840    45.105  &lt; 2e-16 ***\nORIGIN_SZG01733  4.2469137  0.1006161    42.209  &lt; 2e-16 ***\nORIGIN_SZG01734  4.6759061  0.1006095    46.476  &lt; 2e-16 ***\nORIGIN_SZG01735  6.3513148  0.1007265    63.055  &lt; 2e-16 ***\nORIGIN_SZG01748  2.6215307  0.1009367    25.972  &lt; 2e-16 ***\nORIGIN_SZG01749  3.5610155  0.1006373    35.385  &lt; 2e-16 ***\nORIGIN_SZG01750  2.6859249  0.1007694    26.654  &lt; 2e-16 ***\nORIGIN_SZG01751  2.0149520  0.1010700    19.936  &lt; 2e-16 ***\nORIGIN_SZG01753  4.5570823  0.1005919    45.303  &lt; 2e-16 ***\nORIGIN_SZG01754  4.9236082  0.1005729    48.956  &lt; 2e-16 ***\nORIGIN_SZG01755  4.4093494  0.1006139    43.824  &lt; 2e-16 ***\nORIGIN_SZG01756  4.3906494  0.1006570    43.620  &lt; 2e-16 ***\nORIGIN_SZG01757  2.8523885  0.1035147    27.555  &lt; 2e-16 ***\nORIGIN_SZG01769  3.4306128  0.1006775    34.075  &lt; 2e-16 ***\nORIGIN_SZG01770  3.3566282  0.1008607    33.280  &lt; 2e-16 ***\nORIGIN_SZG01771  2.2519988  0.1009992    22.297  &lt; 2e-16 ***\nORIGIN_SZG01772  1.0416221  0.1032525    10.088  &lt; 2e-16 ***\nORIGIN_SZG01774  4.2562210  0.1006082    42.305  &lt; 2e-16 ***\nORIGIN_SZG01775  3.9246680  0.1006627    38.988  &lt; 2e-16 ***\nORIGIN_SZG01776  5.1170926  0.1005779    50.877  &lt; 2e-16 ***\nORIGIN_SZG01777  5.1728221  0.1005990    51.420  &lt; 2e-16 ***\nORIGIN_SZG01778  4.9316770  0.1012087    48.728  &lt; 2e-16 ***\nORIGIN_SZG01790  4.0808855  0.1006328    40.552  &lt; 2e-16 ***\nORIGIN_SZG01791  3.3826982  0.1007116    33.588  &lt; 2e-16 ***\nORIGIN_SZG01792  3.3805277  0.1007230    33.563  &lt; 2e-16 ***\nORIGIN_SZG01793  1.4190772  0.1014046    13.994  &lt; 2e-16 ***\nORIGIN_SZG01794  1.1451278  0.1042400    10.985  &lt; 2e-16 ***\nORIGIN_SZG01795  0.7211358  0.1057241     6.821 9.05e-12 ***\nORIGIN_SZG01796  4.7916737  0.1006057    47.628  &lt; 2e-16 ***\nORIGIN_SZG01797  4.7605718  0.1005946    47.324  &lt; 2e-16 ***\nORIGIN_SZG01798  4.7862473  0.1005966    47.579  &lt; 2e-16 ***\nORIGIN_SZG01799  4.0159057  0.1008068    39.838  &lt; 2e-16 ***\nORIGIN_SZG01800  3.1178978  0.1044396    29.854  &lt; 2e-16 ***\nORIGIN_SZG01811  3.1204128  0.1007756    30.964  &lt; 2e-16 ***\nORIGIN_SZG01812  4.2872738  0.1005821    42.625  &lt; 2e-16 ***\nORIGIN_SZG01813  4.0796555  0.1005941    40.556  &lt; 2e-16 ***\nORIGIN_SZG01817  4.6473564  0.1006559    46.171  &lt; 2e-16 ***\nORIGIN_SZG01818  4.6214380  0.1006158    45.932  &lt; 2e-16 ***\nORIGIN_SZG01819  5.1369174  0.1005894    51.068  &lt; 2e-16 ***\nORIGIN_SZG01820  2.3136664  0.1059313    21.841  &lt; 2e-16 ***\nORIGIN_SZG01832  3.9041332  0.1006534    38.788  &lt; 2e-16 ***\nORIGIN_SZG01833  3.3508714  0.1006882    33.280  &lt; 2e-16 ***\nORIGIN_SZG01834  3.6875251  0.1006202    36.648  &lt; 2e-16 ***\nORIGIN_SZG01835  2.9882592  0.1007819    29.651  &lt; 2e-16 ***\nORIGIN_SZG01837  0.3251723  0.1175287     2.767 0.005662 ** \nORIGIN_SZG01839  4.2501604  0.1007329    42.192  &lt; 2e-16 ***\nORIGIN_SZG01840  5.8934738  0.1005603    58.606  &lt; 2e-16 ***\nORIGIN_SZG01841  1.7715211  0.1062652    16.671  &lt; 2e-16 ***\nORIGIN_SZG01842  5.8237066  0.1011037    57.601  &lt; 2e-16 ***\nORIGIN_SZG01853  3.7303125  0.1006387    37.066  &lt; 2e-16 ***\nORIGIN_SZG01854  3.9898965  0.1006238    39.652  &lt; 2e-16 ***\nORIGIN_SZG01855  4.2679810  0.1006035    42.424  &lt; 2e-16 ***\nORIGIN_SZG01858  2.0265280  0.1036811    19.546  &lt; 2e-16 ***\nORIGIN_SZG01860  5.4083806  0.1008728    53.616  &lt; 2e-16 ***\nORIGIN_SZG01861  4.8573154  0.1006245    48.272  &lt; 2e-16 ***\nORIGIN_SZG01874  3.9390395  0.1006949    39.119  &lt; 2e-16 ***\nORIGIN_SZG01875  2.3014485  0.1012703    22.726  &lt; 2e-16 ***\nORIGIN_SZG01876  4.3930806  0.1010242    43.485  &lt; 2e-16 ***\nORIGIN_SZG01877  3.9749109  0.1006306    39.500  &lt; 2e-16 ***\nORIGIN_SZG01880  0.3327571  0.1126034     2.955 0.003125 ** \nORIGIN_SZG01882  4.7105954  0.1006396    46.807  &lt; 2e-16 ***\nORIGIN_SZG01883  5.1985504  0.1009178    51.513  &lt; 2e-16 ***\nORIGIN_SZG01895  4.0660335  0.1006262    40.407  &lt; 2e-16 ***\nORIGIN_SZG01896  2.3652873  0.1009820    23.423  &lt; 2e-16 ***\nORIGIN_SZG01897  3.0542194  0.1008950    30.271  &lt; 2e-16 ***\nORIGIN_SZG01898 -1.2479122  0.1662993    -7.504 6.19e-14 ***\nORIGIN_SZG01901  0.5908508  0.1165317     5.070 3.97e-07 ***\nORIGIN_SZG01903  4.2812600  0.1009014    42.430  &lt; 2e-16 ***\nORIGIN_SZG01917  2.6872997  0.1009160    26.629  &lt; 2e-16 ***\nORIGIN_SZG01918  4.0700844  0.1006800    40.426  &lt; 2e-16 ***\nORIGIN_SZG01919  3.9554932  0.1006473    39.301  &lt; 2e-16 ***\nORIGIN_SZG01922  1.8011992  0.1044499    17.245  &lt; 2e-16 ***\nORIGIN_SZG01924  4.4224451  0.1009398    43.813  &lt; 2e-16 ***\nORIGIN_SZG01937  3.4653757  0.1007396    34.399  &lt; 2e-16 ***\nORIGIN_SZG01938  4.0666846  0.1006153    40.418  &lt; 2e-16 ***\nORIGIN_SZG01939  4.6537787  0.1006013    46.260  &lt; 2e-16 ***\nORIGIN_SZG01942  0.4005898  0.1109692     3.610 0.000306 ***\nORIGIN_SZG01959  3.0255106  0.1008691    29.994  &lt; 2e-16 ***\nORIGIN_SZG01960  5.0038018  0.1005615    49.759  &lt; 2e-16 ***\nORIGIN_SZG01961  3.4262871  0.1007418    34.011  &lt; 2e-16 ***\nORIGIN_SZG01962  4.4190166  0.1006106    43.922  &lt; 2e-16 ***\nORIGIN_SZG01964 -0.5476749  0.1336993    -4.096 4.20e-05 ***\nORIGIN_SZG01979  3.3410476  0.1008099    33.142  &lt; 2e-16 ***\nORIGIN_SZG01980  1.6205519  0.1014257    15.978  &lt; 2e-16 ***\nORIGIN_SZG01981  4.0532496  0.1006123    40.286  &lt; 2e-16 ***\nORIGIN_SZG01982  3.1490595  0.1010791    31.154  &lt; 2e-16 ***\nORIGIN_SZG01983  4.3643812  0.1006132    43.378  &lt; 2e-16 ***\nORIGIN_SZG01984  3.1343212  0.1007937    31.096  &lt; 2e-16 ***\nORIGIN_SZG01985  3.8147120  0.1007106    37.878  &lt; 2e-16 ***\nORIGIN_SZG02001  3.6274748  0.1006845    36.028  &lt; 2e-16 ***\nORIGIN_SZG02002  4.1905185  0.1005903    41.659  &lt; 2e-16 ***\nORIGIN_SZG02003  3.7874751  0.1006443    37.632  &lt; 2e-16 ***\nORIGIN_SZG02004  4.4582367  0.1006058    44.314  &lt; 2e-16 ***\nORIGIN_SZG02005  4.3345616  0.1006061    43.084  &lt; 2e-16 ***\nORIGIN_SZG02006  2.8863024  0.1009282    28.598  &lt; 2e-16 ***\nORIGIN_SZG02007  2.2949952  0.1017470    22.556  &lt; 2e-16 ***\nORIGIN_SZG02022  4.0260105  0.1006818    39.987  &lt; 2e-16 ***\nORIGIN_SZG02023  4.4444373  0.1005878    44.185  &lt; 2e-16 ***\nORIGIN_SZG02024  3.7610797  0.1006284    37.376  &lt; 2e-16 ***\nORIGIN_SZG02025  3.7915342  0.1006245    37.680  &lt; 2e-16 ***\nORIGIN_SZG02026  2.3976510  0.1011692    23.699  &lt; 2e-16 ***\nORIGIN_SZG02027  4.6994545  0.1006004    46.714  &lt; 2e-16 ***\nORIGIN_SZG02043  3.3491252  0.1007947    33.227  &lt; 2e-16 ***\nORIGIN_SZG02044  4.0607524  0.1006078    40.362  &lt; 2e-16 ***\nORIGIN_SZG02045 -0.4934906  0.1250455    -3.946 7.93e-05 ***\nORIGIN_SZG02046  4.0056129  0.1005944    39.819  &lt; 2e-16 ***\nORIGIN_SZG02047  3.8168350  0.1006483    37.922  &lt; 2e-16 ***\nORIGIN_SZG02048  4.0365719  0.1006258    40.115  &lt; 2e-16 ***\nORIGIN_SZG02049  3.0581483  0.1014427    30.147  &lt; 2e-16 ***\nORIGIN_SZG02064  4.0600204  0.1006365    40.343  &lt; 2e-16 ***\nORIGIN_SZG02065  2.5259718  0.1008535    25.046  &lt; 2e-16 ***\nORIGIN_SZG02066  2.0844524  0.1025931    20.318  &lt; 2e-16 ***\nORIGIN_SZG02067  5.2535898  0.1005576    52.245  &lt; 2e-16 ***\nORIGIN_SZG02068  3.6203938  0.1007457    35.936  &lt; 2e-16 ***\nORIGIN_SZG02069  3.9084462  0.1006685    38.825  &lt; 2e-16 ***\nORIGIN_SZG02085  2.9264022  0.1009385    28.992  &lt; 2e-16 ***\nORIGIN_SZG02086  4.3183229  0.1006020    42.925  &lt; 2e-16 ***\nORIGIN_SZG02087  2.9704444  0.1007682    29.478  &lt; 2e-16 ***\nORIGIN_SZG02088  3.6695949  0.1006216    36.469  &lt; 2e-16 ***\nORIGIN_SZG02089  3.3779894  0.1007250    33.537  &lt; 2e-16 ***\nORIGIN_SZG02090  4.9289022  0.1005797    49.005  &lt; 2e-16 ***\nORIGIN_SZG02091  0.2377863  0.1213282     1.960 0.050012 .  \nORIGIN_SZG02105  0.8034572  0.1425299     5.637 1.73e-08 ***\nORIGIN_SZG02106  1.2762534  0.1022390    12.483  &lt; 2e-16 ***\nORIGIN_SZG02107  2.3485654  0.1009297    23.269  &lt; 2e-16 ***\nORIGIN_SZG02108  3.6640412  0.1006627    36.399  &lt; 2e-16 ***\nORIGIN_SZG02109  3.7243479  0.1006199    37.014  &lt; 2e-16 ***\nORIGIN_SZG02110  3.1779808  0.1007700    31.537  &lt; 2e-16 ***\nORIGIN_SZG02111  0.5729240  0.1079137     5.309 1.10e-07 ***\nORIGIN_SZG02128  2.2068133  0.1013443    21.775  &lt; 2e-16 ***\nORIGIN_SZG02129  1.5513112  0.1015436    15.277  &lt; 2e-16 ***\nORIGIN_SZG02130  4.1569580  0.1005952    41.324  &lt; 2e-16 ***\nORIGIN_SZG02131  4.5259460  0.1006191    44.981  &lt; 2e-16 ***\nORIGIN_SZG02132  3.4858201  0.1006920    34.619  &lt; 2e-16 ***\nORIGIN_SZG02148  3.0564141  0.1011114    30.228  &lt; 2e-16 ***\nORIGIN_SZG02149  1.4440046  0.1016914    14.200  &lt; 2e-16 ***\nORIGIN_SZG02150  4.0684360  0.1006225    40.433  &lt; 2e-16 ***\nORIGIN_SZG02151  4.5412007  0.1005813    45.150  &lt; 2e-16 ***\nORIGIN_SZG02152  4.7190219  0.1005899    46.913  &lt; 2e-16 ***\nORIGIN_SZG02153  4.0252620  0.1006729    39.984  &lt; 2e-16 ***\nORIGIN_SZG02171  3.0574441  0.1007641    30.343  &lt; 2e-16 ***\nORIGIN_SZG02172  3.2187868  0.1008117    31.929  &lt; 2e-16 ***\nORIGIN_SZG02173  3.6758451  0.1006490    36.521  &lt; 2e-16 ***\nORIGIN_SZG02174  4.0013049  0.1006542    39.753  &lt; 2e-16 ***\nORIGIN_SZG02191  2.5151235  0.1010464    24.891  &lt; 2e-16 ***\nORIGIN_SZG02192  2.4294580  0.1010872    24.033  &lt; 2e-16 ***\nORIGIN_SZG02193  3.3916984  0.1007035    33.680  &lt; 2e-16 ***\nORIGIN_SZG02194  3.8448166  0.1006451    38.202  &lt; 2e-16 ***\nORIGIN_SZG02195  3.2313187  0.1024952    31.527  &lt; 2e-16 ***\nORIGIN_SZG02212  0.2985343  0.1284228     2.325 0.020092 *  \nORIGIN_SZG02213  0.3364533  0.1074962     3.130 0.001749 ** \nORIGIN_SZG02214  1.0749201  0.1034622    10.389  &lt; 2e-16 ***\nORIGIN_SZG02215  3.5454450  0.1007370    35.195  &lt; 2e-16 ***\nORIGIN_SZG02216  2.5021746  0.1010821    24.754  &lt; 2e-16 ***\nORIGIN_SZG02233  0.7742600  0.1077753     7.184 6.77e-13 ***\nORIGIN_SZG02234  2.0391523  0.1024557    19.903  &lt; 2e-16 ***\nORIGIN_SZG02235  2.2842429  0.1013678    22.534  &lt; 2e-16 ***\nORIGIN_SZG02236  2.2437786  0.1013014    22.150  &lt; 2e-16 ***\nORIGIN_SZG02237  0.1411501  0.1138626     1.240 0.215104    \nORIGIN_SZG02256 -0.3724675  0.1124385    -3.313 0.000924 ***\nORIGIN_SZG02257  2.0461818  0.1022011    20.021  &lt; 2e-16 ***\nORIGIN_SZG02258  1.3007989  0.1020407    12.748  &lt; 2e-16 ***\nORIGIN_SZG02259  1.1500473  0.1065378    10.795  &lt; 2e-16 ***\nORIGIN_SZG02277  1.9621605  0.1079246    18.181  &lt; 2e-16 ***\nORIGIN_SZG02278  2.7241265  0.1016249    26.806  &lt; 2e-16 ***\nORIGIN_SZG02279  1.1892371  0.1023240    11.622  &lt; 2e-16 ***\nORIGIN_SZG02280 -0.5864947  0.1422474    -4.123 3.74e-05 ***\nORIGIN_SZG02297  3.9251710  0.1008992    38.902  &lt; 2e-16 ***\nORIGIN_SZG02300  0.0420637  0.1168405     0.360 0.718840    \nORIGIN_SZG02301  1.5597690  0.1021660    15.267  &lt; 2e-16 ***\nORIGIN_SZG02318  2.0244820  0.1021504    19.819  &lt; 2e-16 ***\nORIGIN_SZG02319  2.7464249  0.1010338    27.183  &lt; 2e-16 ***\nORIGIN_SZG02322  2.6298667  0.1012516    25.974  &lt; 2e-16 ***\nORIGIN_SZG02337  3.5955177  0.1020344    35.238  &lt; 2e-16 ***\nORIGIN_SZG02341  3.2026174  0.1009390    31.728  &lt; 2e-16 ***\nORIGIN_SZG02343  1.9125346  0.1014994    18.843  &lt; 2e-16 ***\nORIGIN_SZG02361  2.5422547  0.1010815    25.151  &lt; 2e-16 ***\nORIGIN_SZG02364 -0.7338371  0.1194365    -6.144 8.04e-10 ***\nORIGIN_SZG02379  2.7476106  0.1026364    26.770  &lt; 2e-16 ***\nORIGIN_SZG02384  1.9678528  0.1015865    19.371  &lt; 2e-16 ***\nORIGIN_SZG02405  1.6654406  0.1015965    16.393  &lt; 2e-16 ***\nORIGIN_SZG02406  0.2930837  0.1058941     2.768 0.005645 ** \nORIGIN_SZG02426  1.1807954  0.1039924    11.355  &lt; 2e-16 ***\nORIGIN_SZG02427  2.7150732  0.1011150    26.851  &lt; 2e-16 ***\nORIGIN_SZG02505  2.8886395  0.1071343    26.963  &lt; 2e-16 ***\nDESTIN_SZG00044  1.3493780  0.0506991    26.615  &lt; 2e-16 ***\nDESTIN_SZG00046  0.1270484  0.0508754     2.497 0.012516 *  \nDESTIN_SZG00066 -0.4157943  0.0634297    -6.555 5.56e-11 ***\nDESTIN_SZG00067  0.2337303  0.0485651     4.813 1.49e-06 ***\nDESTIN_SZG00068 -0.2036026  0.0507596    -4.011 6.04e-05 ***\nDESTIN_SZG00086  0.2635754  0.0576227     4.574 4.78e-06 ***\nDESTIN_SZG00087 -3.3482723  0.0996317   -33.606  &lt; 2e-16 ***\nDESTIN_SZG00088 -0.3225851  0.0495828    -6.506 7.72e-11 ***\nDESTIN_SZG00089 -1.1585881  0.0520677   -22.252  &lt; 2e-16 ***\nDESTIN_SZG00090 -3.3322501  0.5024202    -6.632 3.30e-11 ***\nDESTIN_SZG00109 -0.8783353  0.0531134   -16.537  &lt; 2e-16 ***\nDESTIN_SZG00110 -3.3177500  0.1106934   -29.972  &lt; 2e-16 ***\nDESTIN_SZG00111  0.9539705  0.0478268    19.946  &lt; 2e-16 ***\nDESTIN_SZG00112 -2.5546381  0.0553321   -46.169  &lt; 2e-16 ***\nDESTIN_SZG00128  1.0916537  0.0515172    21.190  &lt; 2e-16 ***\nDESTIN_SZG00129 -4.4580909  0.1229458   -36.261  &lt; 2e-16 ***\nDESTIN_SZG00130 -0.9140708  0.0515029   -17.748  &lt; 2e-16 ***\nDESTIN_SZG00131 -1.3927621  0.0526668   -26.445  &lt; 2e-16 ***\nDESTIN_SZG00132 -0.6011819  0.0486911   -12.347  &lt; 2e-16 ***\nDESTIN_SZG00133 -1.0576247  0.0480566   -22.008  &lt; 2e-16 ***\nDESTIN_SZG00134 -0.9302453  0.0478879   -19.425  &lt; 2e-16 ***\nDESTIN_SZG00150 -0.5914265  0.0571138   -10.355  &lt; 2e-16 ***\nDESTIN_SZG00151 -0.6604248  0.0511953   -12.900  &lt; 2e-16 ***\nDESTIN_SZG00152  0.4318867  0.0487331     8.862  &lt; 2e-16 ***\nDESTIN_SZG00153 -0.2874460  0.0485542    -5.920 3.22e-09 ***\nDESTIN_SZG00154 -2.4625438  0.0536842   -45.871  &lt; 2e-16 ***\nDESTIN_SZG00155 -1.7845279  0.0495651   -36.004  &lt; 2e-16 ***\nDESTIN_SZG00156 -1.7445769  0.0505192   -34.533  &lt; 2e-16 ***\nDESTIN_SZG00172 -1.8835925  0.0645569   -29.177  &lt; 2e-16 ***\nDESTIN_SZG00174 -1.3182840  0.0490655   -26.868  &lt; 2e-16 ***\nDESTIN_SZG00175 -0.7788083  0.0475707   -16.372  &lt; 2e-16 ***\nDESTIN_SZG00176 -2.3042180  0.0544529   -42.316  &lt; 2e-16 ***\nDESTIN_SZG00195 -2.7596907  0.0555936   -49.640  &lt; 2e-16 ***\nDESTIN_SZG00196 -1.2562712  0.0476727   -26.352  &lt; 2e-16 ***\nDESTIN_SZG00197 -3.6369893  0.0986839   -36.855  &lt; 2e-16 ***\nDESTIN_SZG00215 -0.6363793  0.0543100   -11.718  &lt; 2e-16 ***\nDESTIN_SZG00216 -0.8586570  0.0491570   -17.468  &lt; 2e-16 ***\nDESTIN_SZG00217 -0.5155653  0.0474793   -10.859  &lt; 2e-16 ***\nDESTIN_SZG00237 -2.8238315  0.0548111   -51.519  &lt; 2e-16 ***\nDESTIN_SZG00238 -1.9221132  0.0489283   -39.284  &lt; 2e-16 ***\nDESTIN_SZG00239 -2.0695667  0.0551760   -37.508  &lt; 2e-16 ***\nDESTIN_SZG00257  0.2218237  0.0491736     4.511 6.45e-06 ***\nDESTIN_SZG00258 -1.8063516  0.0505824   -35.711  &lt; 2e-16 ***\nDESTIN_SZG00259 -0.7008677  0.0481669   -14.551  &lt; 2e-16 ***\nDESTIN_SZG00278  0.2710258  0.0492900     5.499 3.83e-08 ***\nDESTIN_SZG00279 -1.2542493  0.0483884   -25.920  &lt; 2e-16 ***\nDESTIN_SZG00280 -0.9086123  0.0482548   -18.829  &lt; 2e-16 ***\nDESTIN_SZG00298 -3.9457742  0.1405478   -28.074  &lt; 2e-16 ***\nDESTIN_SZG00299 -0.9814282  0.0494214   -19.858  &lt; 2e-16 ***\nDESTIN_SZG00300 -1.4981134  0.0496361   -30.182  &lt; 2e-16 ***\nDESTIN_SZG00320  0.2541526  0.0487349     5.215 1.84e-07 ***\nDESTIN_SZG00321 -1.8195677  0.0521243   -34.908  &lt; 2e-16 ***\nDESTIN_SZG00322 -0.7435897  0.0481177   -15.454  &lt; 2e-16 ***\nDESTIN_SZG00340  1.0466847  0.0480509    21.783  &lt; 2e-16 ***\nDESTIN_SZG00341 -0.2063212  0.0481687    -4.283 1.84e-05 ***\nDESTIN_SZG00342 -0.7390119  0.0478384   -15.448  &lt; 2e-16 ***\nDESTIN_SZG00363 -0.8636047  0.0486725   -17.743  &lt; 2e-16 ***\nDESTIN_SZG00364 -0.7636778  0.0473587   -16.125  &lt; 2e-16 ***\nDESTIN_SZG00383  0.1668126  0.0475727     3.506 0.000454 ***\nDESTIN_SZG00384 -1.0306520  0.0474735   -21.710  &lt; 2e-16 ***\nDESTIN_SZG00385 -1.9990720  0.0490884   -40.724  &lt; 2e-16 ***\nDESTIN_SZG00404 -0.0204445  0.0490827    -0.417 0.677021    \nDESTIN_SZG00405 -0.3903360  0.0478935    -8.150 3.64e-16 ***\nDESTIN_SZG00406  0.0370746  0.0470587     0.788 0.430792    \nDESTIN_SZG00407 -0.3156810  0.0476110    -6.630 3.35e-11 ***\nDESTIN_SZG00408  0.8768343  0.0470848    18.622  &lt; 2e-16 ***\nDESTIN_SZG00425 -1.8407118  0.0524462   -35.097  &lt; 2e-16 ***\nDESTIN_SZG00426 -1.4915181  0.0478879   -31.146  &lt; 2e-16 ***\nDESTIN_SZG00427 -3.8716253  0.0521919   -74.181  &lt; 2e-16 ***\nDESTIN_SZG00428 -1.2905120  0.0480243   -26.872  &lt; 2e-16 ***\nDESTIN_SZG00429 -1.6867312  0.0521277   -32.358  &lt; 2e-16 ***\nDESTIN_SZG00446 -0.7625183  0.0517769   -14.727  &lt; 2e-16 ***\nDESTIN_SZG00447 -1.7091084  0.0498360   -34.295  &lt; 2e-16 ***\nDESTIN_SZG00448 -1.9741052  0.0481575   -40.993  &lt; 2e-16 ***\nDESTIN_SZG00449 -1.4259777  0.0474383   -30.060  &lt; 2e-16 ***\nDESTIN_SZG00450 -1.7975187  0.0483534   -37.175  &lt; 2e-16 ***\nDESTIN_SZG00468 -0.9466155  0.0478545   -19.781  &lt; 2e-16 ***\nDESTIN_SZG00469 -1.8512682  0.0475846   -38.905  &lt; 2e-16 ***\nDESTIN_SZG00470 -1.4590919  0.0473283   -30.829  &lt; 2e-16 ***\nDESTIN_SZG00471 -1.3010692  0.0493707   -26.353  &lt; 2e-16 ***\nDESTIN_SZG00488 -0.9290897  0.0519164   -17.896  &lt; 2e-16 ***\nDESTIN_SZG00489 -2.9851669  0.0665311   -44.869  &lt; 2e-16 ***\nDESTIN_SZG00490 -1.0078864  0.0475341   -21.203  &lt; 2e-16 ***\nDESTIN_SZG00491 -3.3042468  0.0491221   -67.266  &lt; 2e-16 ***\nDESTIN_SZG00493 -3.9546899  0.0680742   -58.094  &lt; 2e-16 ***\nDESTIN_SZG00494 -2.0889712  0.0517471   -40.369  &lt; 2e-16 ***\nDESTIN_SZG00509 -0.4862749  0.0491096    -9.902  &lt; 2e-16 ***\nDESTIN_SZG00510 -0.7510890  0.0478478   -15.697  &lt; 2e-16 ***\nDESTIN_SZG00511 -1.4787000  0.0472787   -31.276  &lt; 2e-16 ***\nDESTIN_SZG00512 -1.6064568  0.0472374   -34.008  &lt; 2e-16 ***\nDESTIN_SZG00513 -0.5615416  0.0474568   -11.833  &lt; 2e-16 ***\nDESTIN_SZG00514 -1.0601190  0.0483503   -21.926  &lt; 2e-16 ***\nDESTIN_SZG00515 -2.3279965  0.0552222   -42.157  &lt; 2e-16 ***\nDESTIN_SZG00530 -1.2746811  0.0554590   -22.984  &lt; 2e-16 ***\nDESTIN_SZG00531  1.0886608  0.0472281    23.051  &lt; 2e-16 ***\nDESTIN_SZG00532 -1.3289112  0.0476305   -27.900  &lt; 2e-16 ***\nDESTIN_SZG00533 -0.0988822  0.0469373    -2.107 0.035145 *  \nDESTIN_SZG00534 -1.4472693  0.0472634   -30.621  &lt; 2e-16 ***\nDESTIN_SZG00536 -1.9021389  0.0501018   -37.965  &lt; 2e-16 ***\nDESTIN_SZG00537 -2.6578233  0.0576697   -46.087  &lt; 2e-16 ***\nDESTIN_SZG00538 -3.0052947  0.0633400   -47.447  &lt; 2e-16 ***\nDESTIN_SZG00539 -6.5423509  0.5792663   -11.294  &lt; 2e-16 ***\nDESTIN_SZG00551 -0.6007733  0.0501517   -11.979  &lt; 2e-16 ***\nDESTIN_SZG00552 -0.1357004  0.0480112    -2.826 0.004707 ** \nDESTIN_SZG00553 -2.0626794  0.0475957   -43.338  &lt; 2e-16 ***\nDESTIN_SZG00554 -2.0879184  0.0473341   -44.110  &lt; 2e-16 ***\nDESTIN_SZG00555 -0.8767678  0.0474455   -18.479  &lt; 2e-16 ***\nDESTIN_SZG00559 -3.4187476  0.0720518   -47.448  &lt; 2e-16 ***\nDESTIN_SZG00560 -0.7734909  0.0496685   -15.573  &lt; 2e-16 ***\nDESTIN_SZG00561 -3.0891624  0.0820202   -37.663  &lt; 2e-16 ***\nDESTIN_SZG00572 -1.4044652  0.0569722   -24.652  &lt; 2e-16 ***\nDESTIN_SZG00573  0.2234975  0.0479538     4.661 3.15e-06 ***\nDESTIN_SZG00574 -1.7285965  0.0495934   -34.855  &lt; 2e-16 ***\nDESTIN_SZG00575  0.9469692  0.0468921    20.195  &lt; 2e-16 ***\nDESTIN_SZG00576 -1.7474174  0.0472740   -36.964  &lt; 2e-16 ***\nDESTIN_SZG00578 -5.4395444  0.1164855   -46.697  &lt; 2e-16 ***\nDESTIN_SZG00582 -3.5854989  0.0809682   -44.283  &lt; 2e-16 ***\nDESTIN_SZG00583 -5.1910334  0.2232140   -23.256  &lt; 2e-16 ***\nDESTIN_SZG00584 -1.7598879  0.0584850   -30.091  &lt; 2e-16 ***\nDESTIN_SZG00593 -1.9367878  0.0525263   -36.873  &lt; 2e-16 ***\nDESTIN_SZG00594 -0.7666586  0.0487524   -15.726  &lt; 2e-16 ***\nDESTIN_SZG00595 -0.9845518  0.0472050   -20.857  &lt; 2e-16 ***\nDESTIN_SZG00596 -1.5806219  0.0471285   -33.539  &lt; 2e-16 ***\nDESTIN_SZG00597 -2.1032434  0.0493416   -42.626  &lt; 2e-16 ***\nDESTIN_SZG00603 -3.0414076  0.0696220   -43.685  &lt; 2e-16 ***\nDESTIN_SZG00604 -2.3680084  0.0646052   -36.654  &lt; 2e-16 ***\nDESTIN_SZG00615 -1.7243485  0.0490713   -35.140  &lt; 2e-16 ***\nDESTIN_SZG00616 -1.0902073  0.0476053   -22.901  &lt; 2e-16 ***\nDESTIN_SZG00617 -2.3458559  0.0477345   -49.144  &lt; 2e-16 ***\nDESTIN_SZG00618 -1.6258400  0.0472537   -34.407  &lt; 2e-16 ***\nDESTIN_SZG00620 -1.6440519  0.0482351   -34.084  &lt; 2e-16 ***\nDESTIN_SZG00637 -1.7332877  0.0480763   -36.053  &lt; 2e-16 ***\nDESTIN_SZG00638 -1.6113286  0.0471987   -34.139  &lt; 2e-16 ***\nDESTIN_SZG00657 -0.3416325  0.0473704    -7.212 5.52e-13 ***\nDESTIN_SZG00658 -1.0044525  0.0472354   -21.265  &lt; 2e-16 ***\nDESTIN_SZG00659 -1.3390238  0.0472034   -28.367  &lt; 2e-16 ***\nDESTIN_SZG00660 -0.7534230  0.0470286   -16.021  &lt; 2e-16 ***\nDESTIN_SZG00662 -1.3706275  0.0481876   -28.444  &lt; 2e-16 ***\nDESTIN_SZG00677 -0.2776290  0.0477685    -5.812 6.17e-09 ***\nDESTIN_SZG00678 -2.2335798  0.0488488   -45.724  &lt; 2e-16 ***\nDESTIN_SZG00679 -0.7304659  0.0471226   -15.501  &lt; 2e-16 ***\nDESTIN_SZG00680  0.6810882  0.0469319    14.512  &lt; 2e-16 ***\nDESTIN_SZG00681 -3.0409611  0.0501618   -60.623  &lt; 2e-16 ***\nDESTIN_SZG00699 -0.8933591  0.0476766   -18.738  &lt; 2e-16 ***\nDESTIN_SZG00700 -1.2769852  0.0473387   -26.976  &lt; 2e-16 ***\nDESTIN_SZG00701 -3.5768026  0.0505891   -70.703  &lt; 2e-16 ***\nDESTIN_SZG00702 -1.0914823  0.0470993   -23.174  &lt; 2e-16 ***\nDESTIN_SZG00704 -1.8889832  0.0480136   -39.343  &lt; 2e-16 ***\nDESTIN_SZG00722 -2.1655028  0.0478476   -45.258  &lt; 2e-16 ***\nDESTIN_SZG00725 -4.2071507  0.0540255   -77.873  &lt; 2e-16 ***\nDESTIN_SZG00741 -0.2747129  0.0474066    -5.795 6.84e-09 ***\nDESTIN_SZG00743 -3.7982864  0.0513100   -74.026  &lt; 2e-16 ***\nDESTIN_SZG00744 -1.0472576  0.0471122   -22.229  &lt; 2e-16 ***\nDESTIN_SZG00761  0.0010571  0.0476057     0.022 0.982285    \nDESTIN_SZG00762 -1.9031676  0.0485416   -39.207  &lt; 2e-16 ***\nDESTIN_SZG00763 -3.5849464  0.0510888   -70.171  &lt; 2e-16 ***\nDESTIN_SZG00764 -0.4216604  0.0469946    -8.973  &lt; 2e-16 ***\nDESTIN_SZG00765 -1.9773625  0.0477762   -41.388  &lt; 2e-16 ***\nDESTIN_SZG00767 -1.6419319  0.0473794   -34.655  &lt; 2e-16 ***\nDESTIN_SZG00772 -2.5300951  0.0584598   -43.279  &lt; 2e-16 ***\nDESTIN_SZG00784 -3.2632126  0.0508801   -64.135  &lt; 2e-16 ***\nDESTIN_SZG00785 -1.4699436  0.0471873   -31.151  &lt; 2e-16 ***\nDESTIN_SZG00786 -1.4151454  0.0471342   -30.024  &lt; 2e-16 ***\nDESTIN_SZG00787 -1.9327521  0.0478365   -40.403  &lt; 2e-16 ***\nDESTIN_SZG00788 -3.3941926  0.0489146   -69.390  &lt; 2e-16 ***\nDESTIN_SZG00789 -3.7677840  0.0497937   -75.668  &lt; 2e-16 ***\nDESTIN_SZG00803 -1.2806344  0.0488551   -26.213  &lt; 2e-16 ***\nDESTIN_SZG00804 -0.7937305  0.0473380   -16.767  &lt; 2e-16 ***\nDESTIN_SZG00805  0.3030261  0.0469577     6.453 1.10e-10 ***\nDESTIN_SZG00806 -1.6477099  0.0472267   -34.889  &lt; 2e-16 ***\nDESTIN_SZG00807 -1.5922821  0.0473894   -33.600  &lt; 2e-16 ***\nDESTIN_SZG00808 -3.3102436  0.0508480   -65.101  &lt; 2e-16 ***\nDESTIN_SZG00809 -1.8367185  0.0471932   -38.919  &lt; 2e-16 ***\nDESTIN_SZG00810 -2.2667929  0.0476775   -47.544  &lt; 2e-16 ***\nDESTIN_SZG00814 -1.5095090  0.0508234   -29.701  &lt; 2e-16 ***\nDESTIN_SZG00819  0.6976746  0.0490486    14.224  &lt; 2e-16 ***\nDESTIN_SZG00824 -0.9243246  0.0487543   -18.959  &lt; 2e-16 ***\nDESTIN_SZG00826 -1.3041730  0.0472556   -27.598  &lt; 2e-16 ***\nDESTIN_SZG00827 -1.5564571  0.0472760   -32.923  &lt; 2e-16 ***\nDESTIN_SZG00828 -1.3740604  0.0471210   -29.160  &lt; 2e-16 ***\nDESTIN_SZG00829 -1.9964091  0.0475890   -41.951  &lt; 2e-16 ***\nDESTIN_SZG00830 -3.2342309  0.0485716   -66.587  &lt; 2e-16 ***\nDESTIN_SZG00831  0.1401467  0.0469607     2.984 0.002842 ** \nDESTIN_SZG00832 -0.2447902  0.0470676    -5.201 1.98e-07 ***\nDESTIN_SZG00835 -2.0178607  0.0508503   -39.682  &lt; 2e-16 ***\nDESTIN_SZG00844 -1.2816815  0.0501708   -25.546  &lt; 2e-16 ***\nDESTIN_SZG00846 -1.2830165  0.0473740   -27.083  &lt; 2e-16 ***\nDESTIN_SZG00847 -0.4855510  0.0470744   -10.315  &lt; 2e-16 ***\nDESTIN_SZG00848 -1.7493361  0.0472851   -36.996  &lt; 2e-16 ***\nDESTIN_SZG00849 -2.5008676  0.0475882   -52.552  &lt; 2e-16 ***\nDESTIN_SZG00850 -1.7458249  0.0472279   -36.966  &lt; 2e-16 ***\nDESTIN_SZG00851 -2.1045693  0.0472810   -44.512  &lt; 2e-16 ***\nDESTIN_SZG00852 -2.3692662  0.0476383   -49.734  &lt; 2e-16 ***\nDESTIN_SZG00853 -1.1552375  0.0476324   -24.253  &lt; 2e-16 ***\nDESTIN_SZG00854 -1.3238359  0.0489993   -27.017  &lt; 2e-16 ***\nDESTIN_SZG00855 -2.2594133  0.0508549   -44.429  &lt; 2e-16 ***\nDESTIN_SZG00856 -2.9359052  0.0564878   -51.974  &lt; 2e-16 ***\nDESTIN_SZG00866 -0.5865325  0.0479305   -12.237  &lt; 2e-16 ***\nDESTIN_SZG00867  0.0100527  0.0470904     0.213 0.830955    \nDESTIN_SZG00868 -0.3709730  0.0471547    -7.867 3.63e-15 ***\nDESTIN_SZG00869  0.3974124  0.0471551     8.428  &lt; 2e-16 ***\nDESTIN_SZG00870 -0.0502006  0.0469620    -1.069 0.285087    \nDESTIN_SZG00871 -0.1017070  0.0470451    -2.162 0.030625 *  \nDESTIN_SZG00872 -1.6279458  0.0472053   -34.486  &lt; 2e-16 ***\nDESTIN_SZG00873 -2.1053563  0.0475506   -44.276  &lt; 2e-16 ***\nDESTIN_SZG00874 -3.4595239  0.0487319   -70.991  &lt; 2e-16 ***\nDESTIN_SZG00875 -2.8618758  0.0547666   -52.256  &lt; 2e-16 ***\nDESTIN_SZG00876 -2.5385359  0.0506590   -50.110  &lt; 2e-16 ***\nDESTIN_SZG00877 -1.6677040  0.0490650   -33.990  &lt; 2e-16 ***\nDESTIN_SZG00887 -1.2171503  0.0475992   -25.571  &lt; 2e-16 ***\nDESTIN_SZG00888 -2.5520159  0.0487775   -52.320  &lt; 2e-16 ***\nDESTIN_SZG00889 -1.9526348  0.0485947   -40.182  &lt; 2e-16 ***\nDESTIN_SZG00890 -0.8890549  0.0471179   -18.869  &lt; 2e-16 ***\nDESTIN_SZG00891 -2.5149901  0.0490348   -51.290  &lt; 2e-16 ***\nDESTIN_SZG00893 -1.2684892  0.0470882   -26.939  &lt; 2e-16 ***\nDESTIN_SZG00894 -2.9377452  0.0483089   -60.812  &lt; 2e-16 ***\nDESTIN_SZG00895 -1.7106901  0.0478062   -35.784  &lt; 2e-16 ***\nDESTIN_SZG00896 -3.8953958  0.0556609   -69.984  &lt; 2e-16 ***\nDESTIN_SZG00897 -3.8311950  0.0542380   -70.637  &lt; 2e-16 ***\nDESTIN_SZG00898 -1.6916369  0.0490531   -34.486  &lt; 2e-16 ***\nDESTIN_SZG00908 -0.4128312  0.0480325    -8.595  &lt; 2e-16 ***\nDESTIN_SZG00909 -1.4010265  0.0473055   -29.617  &lt; 2e-16 ***\nDESTIN_SZG00910 -2.3967049  0.0483308   -49.590  &lt; 2e-16 ***\nDESTIN_SZG00911 -0.1182409  0.0470441    -2.513 0.011957 *  \nDESTIN_SZG00912 -1.8086957  0.0474066   -38.153  &lt; 2e-16 ***\nDESTIN_SZG00915 -1.8489983  0.0472579   -39.126  &lt; 2e-16 ***\nDESTIN_SZG00917 -0.4589493  0.0472142    -9.721  &lt; 2e-16 ***\nDESTIN_SZG00918 -4.8133548  0.0615798   -78.164  &lt; 2e-16 ***\nDESTIN_SZG00919 -2.9760221  0.0491169   -60.591  &lt; 2e-16 ***\nDESTIN_SZG00928 -2.3465807  0.0498885   -47.037  &lt; 2e-16 ***\nDESTIN_SZG00929 -1.4318573  0.0473737   -30.225  &lt; 2e-16 ***\nDESTIN_SZG00930 -0.2467387  0.0470150    -5.248 1.54e-07 ***\nDESTIN_SZG00931 -1.7682889  0.0479625   -36.868  &lt; 2e-16 ***\nDESTIN_SZG00932 -3.5511188  0.0528133   -67.239  &lt; 2e-16 ***\nDESTIN_SZG00933 -1.4085060  0.0474706   -29.671  &lt; 2e-16 ***\nDESTIN_SZG00934 -1.9007167  0.0475691   -39.957  &lt; 2e-16 ***\nDESTIN_SZG00935  0.2021300  0.0469488     4.305 1.67e-05 ***\nDESTIN_SZG00938 -5.9697902  0.1803544   -33.100  &lt; 2e-16 ***\nDESTIN_SZG00939  0.4864970  0.0470282    10.345  &lt; 2e-16 ***\nDESTIN_SZG00940 -3.4555130  0.0504345   -68.515  &lt; 2e-16 ***\nDESTIN_SZG00949 -2.0146996  0.0490406   -41.082  &lt; 2e-16 ***\nDESTIN_SZG00950 -0.0719626  0.0471348    -1.527 0.126826    \nDESTIN_SZG00951  0.7333422  0.0469497    15.620  &lt; 2e-16 ***\nDESTIN_SZG00952 -0.8911453  0.0474974   -18.762  &lt; 2e-16 ***\nDESTIN_SZG00953 -1.3506261  0.0476503   -28.345  &lt; 2e-16 ***\nDESTIN_SZG00954 -3.3422327  0.0498841   -67.000  &lt; 2e-16 ***\nDESTIN_SZG00955 -0.4705028  0.0470765    -9.994  &lt; 2e-16 ***\nDESTIN_SZG00956 -2.4803320  0.0477589   -51.934  &lt; 2e-16 ***\nDESTIN_SZG00957 -2.3016081  0.0476624   -48.290  &lt; 2e-16 ***\nDESTIN_SZG00959 -2.0742869  0.0519271   -39.946  &lt; 2e-16 ***\nDESTIN_SZG00961 -2.3215307  0.0484177   -47.948  &lt; 2e-16 ***\nDESTIN_SZG00962 -0.1997413  0.0471696    -4.235 2.29e-05 ***\nDESTIN_SZG00970 -0.6853120  0.0472762   -14.496  &lt; 2e-16 ***\nDESTIN_SZG00971 -0.6650592  0.0470891   -14.123  &lt; 2e-16 ***\nDESTIN_SZG00972 -1.4449506  0.0473835   -30.495  &lt; 2e-16 ***\nDESTIN_SZG00974 -1.8626532  0.0480074   -38.799  &lt; 2e-16 ***\nDESTIN_SZG00975 -3.1106991  0.0495393   -62.793  &lt; 2e-16 ***\nDESTIN_SZG00976 -2.5662047  0.0481815   -53.261  &lt; 2e-16 ***\nDESTIN_SZG00977 -2.0787865  0.0473253   -43.926  &lt; 2e-16 ***\nDESTIN_SZG00978 -2.4554751  0.0481236   -51.024  &lt; 2e-16 ***\nDESTIN_SZG00982 -2.9662202  0.0481205   -61.642  &lt; 2e-16 ***\nDESTIN_SZG00983  2.4619355  0.0482746    50.999  &lt; 2e-16 ***\nDESTIN_SZG00984  1.4377046  0.0472596    30.421  &lt; 2e-16 ***\nDESTIN_SZG00991 -0.5846142  0.0473527   -12.346  &lt; 2e-16 ***\nDESTIN_SZG00992 -0.4755262  0.0471764   -10.080  &lt; 2e-16 ***\nDESTIN_SZG00993 -2.1507512  0.0478249   -44.971  &lt; 2e-16 ***\nDESTIN_SZG00994 -2.1226037  0.0481799   -44.056  &lt; 2e-16 ***\nDESTIN_SZG00995 -1.4586390  0.0475264   -30.691  &lt; 2e-16 ***\nDESTIN_SZG00996 -2.0803509  0.0480860   -43.263  &lt; 2e-16 ***\nDESTIN_SZG00997 -1.9519604  0.0487104   -40.073  &lt; 2e-16 ***\nDESTIN_SZG00998 -1.4838422  0.0472587   -31.398  &lt; 2e-16 ***\nDESTIN_SZG00999 -2.5704987  0.0479045   -53.659  &lt; 2e-16 ***\nDESTIN_SZG01001 -1.6125597  0.0493916   -32.648  &lt; 2e-16 ***\nDESTIN_SZG01003 -0.2565934  0.0470169    -5.457 4.83e-08 ***\nDESTIN_SZG01004 -1.3869139  0.0471702   -29.402  &lt; 2e-16 ***\nDESTIN_SZG01011 -1.1625116  0.0483719   -24.033  &lt; 2e-16 ***\nDESTIN_SZG01012  0.3353467  0.0472558     7.096 1.28e-12 ***\nDESTIN_SZG01013 -1.0859014  0.0474801   -22.871  &lt; 2e-16 ***\nDESTIN_SZG01014 -2.7057119  0.0494506   -54.715  &lt; 2e-16 ***\nDESTIN_SZG01015  0.0147725  0.0470625     0.314 0.753604    \nDESTIN_SZG01016  0.0299270  0.0470274     0.636 0.524533    \nDESTIN_SZG01018 -2.4089544  0.0484158   -49.756  &lt; 2e-16 ***\nDESTIN_SZG01019 -1.4276993  0.0472453   -30.219  &lt; 2e-16 ***\nDESTIN_SZG01023 -2.4620370  0.0486713   -50.585  &lt; 2e-16 ***\nDESTIN_SZG01024 -1.5813632  0.0473431   -33.402  &lt; 2e-16 ***\nDESTIN_SZG01025 -5.8336358  0.0798243   -73.081  &lt; 2e-16 ***\nDESTIN_SZG01033 -0.5158069  0.0473536   -10.893  &lt; 2e-16 ***\nDESTIN_SZG01034 -0.0056110  0.0470930    -0.119 0.905158    \nDESTIN_SZG01035 -0.1762377  0.0471145    -3.741 0.000184 ***\nDESTIN_SZG01036  0.2679986  0.0470326     5.698 1.21e-08 ***\nDESTIN_SZG01037 -1.0820640  0.0472554   -22.898  &lt; 2e-16 ***\nDESTIN_SZG01043 -0.8503506  0.0481324   -17.667  &lt; 2e-16 ***\nDESTIN_SZG01045 -1.5980207  0.0472555   -33.817  &lt; 2e-16 ***\nDESTIN_SZG01046 -1.3080455  0.0472568   -27.680  &lt; 2e-16 ***\nDESTIN_SZG01053  0.3280366  0.0471155     6.962 3.35e-12 ***\nDESTIN_SZG01054 -0.0478033  0.0471359    -1.014 0.310507    \nDESTIN_SZG01055 -1.2395016  0.0475502   -26.067  &lt; 2e-16 ***\nDESTIN_SZG01056 -1.7876870  0.0481297   -37.143  &lt; 2e-16 ***\nDESTIN_SZG01064 -4.2297075  0.0989382   -42.751  &lt; 2e-16 ***\nDESTIN_SZG01066 -0.6672055  0.0470753   -14.173  &lt; 2e-16 ***\nDESTIN_SZG01067 -0.8014580  0.0473475   -16.927  &lt; 2e-16 ***\nDESTIN_SZG01074 -1.7978321  0.0487747   -36.860  &lt; 2e-16 ***\nDESTIN_SZG01075 -0.1863984  0.0472648    -3.944 8.02e-05 ***\nDESTIN_SZG01076 -0.9516600  0.0473561   -20.096  &lt; 2e-16 ***\nDESTIN_SZG01077 -1.7884600  0.0479624   -37.289  &lt; 2e-16 ***\nDESTIN_SZG01079 -0.6602685  0.0472266   -13.981  &lt; 2e-16 ***\nDESTIN_SZG01085 -2.5224074  0.0732100   -34.454  &lt; 2e-16 ***\nDESTIN_SZG01087 -1.4568018  0.0472929   -30.804  &lt; 2e-16 ***\nDESTIN_SZG01088 -1.1593684  0.0472193   -24.553  &lt; 2e-16 ***\nDESTIN_SZG01094 -3.3096949  0.0672191   -49.237  &lt; 2e-16 ***\nDESTIN_SZG01095 -0.8929945  0.0488060   -18.297  &lt; 2e-16 ***\nDESTIN_SZG01096 -0.6027343  0.0492222   -12.245  &lt; 2e-16 ***\nDESTIN_SZG01097  0.0327716  0.0470651     0.696 0.486238    \nDESTIN_SZG01098 -2.6977351  0.0516057   -52.276  &lt; 2e-16 ***\nDESTIN_SZG01099 -1.3193489  0.0474924   -27.780  &lt; 2e-16 ***\nDESTIN_SZG01105  0.5859597  0.0477346    12.275  &lt; 2e-16 ***\nDESTIN_SZG01106 -4.4886130  0.0969366   -46.305  &lt; 2e-16 ***\nDESTIN_SZG01107 -1.2072333  0.0474933   -25.419  &lt; 2e-16 ***\nDESTIN_SZG01108  1.0431531  0.0469569    22.215  &lt; 2e-16 ***\nDESTIN_SZG01109 -3.2528312  0.0513501   -63.346  &lt; 2e-16 ***\nDESTIN_SZG01116 -0.8797869  0.0476500   -18.464  &lt; 2e-16 ***\nDESTIN_SZG01117 -0.3072231  0.0473811    -6.484 8.93e-11 ***\nDESTIN_SZG01118 -2.1125250  0.0500696   -42.192  &lt; 2e-16 ***\nDESTIN_SZG01119 -1.6970525  0.0479734   -35.375  &lt; 2e-16 ***\nDESTIN_SZG01120 -2.2885841  0.0497253   -46.025  &lt; 2e-16 ***\nDESTIN_SZG01129 -2.0257756  0.0475453   -42.607  &lt; 2e-16 ***\nDESTIN_SZG01130 -1.3667250  0.0472321   -28.936  &lt; 2e-16 ***\nDESTIN_SZG01131  0.1749744  0.0471935     3.708 0.000209 ***\nDESTIN_SZG01136  0.4477141  0.0471120     9.503  &lt; 2e-16 ***\nDESTIN_SZG01138 -1.9916058  0.0497588   -40.025  &lt; 2e-16 ***\nDESTIN_SZG01139 -1.1541714  0.0473770   -24.361  &lt; 2e-16 ***\nDESTIN_SZG01141 -1.2060553  0.0474779   -25.402  &lt; 2e-16 ***\nDESTIN_SZG01148 -2.3657380  0.0552439   -42.824  &lt; 2e-16 ***\nDESTIN_SZG01149 -2.4248644  0.0487273   -49.764  &lt; 2e-16 ***\nDESTIN_SZG01150 -2.0084651  0.0473709   -42.399  &lt; 2e-16 ***\nDESTIN_SZG01151 -1.3059061  0.0473502   -27.580  &lt; 2e-16 ***\nDESTIN_SZG01158 -1.5188160  0.0480026   -31.640  &lt; 2e-16 ***\nDESTIN_SZG01159 -1.4083654  0.0476636   -29.548  &lt; 2e-16 ***\nDESTIN_SZG01160  0.0617368  0.0470587     1.312 0.189550    \nDESTIN_SZG01171 -1.0558712  0.0472653   -22.339  &lt; 2e-16 ***\nDESTIN_SZG01172  0.2494495  0.0470060     5.307 1.12e-07 ***\nDESTIN_SZG01173 -0.2940364  0.0471772    -6.233 4.59e-10 ***\nDESTIN_SZG01174 -2.5989747  0.0626616   -41.476  &lt; 2e-16 ***\nDESTIN_SZG01178  0.6498039  0.0470163    13.821  &lt; 2e-16 ***\nDESTIN_SZG01179 -0.3664748  0.0471553    -7.772 7.75e-15 ***\nDESTIN_SZG01180 -0.3840668  0.0471292    -8.149 3.66e-16 ***\nDESTIN_SZG01181 -1.6057911  0.0477004   -33.664  &lt; 2e-16 ***\nDESTIN_SZG01183 -0.0962642  0.0471132    -2.043 0.041027 *  \nDESTIN_SZG01190 -2.4070162  0.0549521   -43.802  &lt; 2e-16 ***\nDESTIN_SZG01192 -1.1287996  0.0472129   -23.909  &lt; 2e-16 ***\nDESTIN_SZG01193 -0.9330098  0.0472141   -19.761  &lt; 2e-16 ***\nDESTIN_SZG01194 -0.3491814  0.0472864    -7.384 1.53e-13 ***\nDESTIN_SZG01200 -0.6985916  0.0473935   -14.740  &lt; 2e-16 ***\nDESTIN_SZG01201 -1.0110683  0.0474358   -21.314  &lt; 2e-16 ***\nDESTIN_SZG01203 -1.0311900  0.0474974   -21.710  &lt; 2e-16 ***\nDESTIN_SZG01204 -1.3258199  0.0476687   -27.813  &lt; 2e-16 ***\nDESTIN_SZG01211 -5.6979980  0.2814144   -20.248  &lt; 2e-16 ***\nDESTIN_SZG01214 -1.9998615  0.0476610   -41.960  &lt; 2e-16 ***\nDESTIN_SZG01215 -1.5648353  0.0481904   -32.472  &lt; 2e-16 ***\nDESTIN_SZG01216 -0.8610447  0.0479658   -17.951  &lt; 2e-16 ***\nDESTIN_SZG01220 -0.5180771  0.0472590   -10.963  &lt; 2e-16 ***\nDESTIN_SZG01221  0.0529660  0.0470604     1.125 0.260381    \nDESTIN_SZG01222 -1.2465542  0.0484636   -25.721  &lt; 2e-16 ***\nDESTIN_SZG01223 -1.6736425  0.0481530   -34.757  &lt; 2e-16 ***\nDESTIN_SZG01224 -1.1065718  0.0475213   -23.286  &lt; 2e-16 ***\nDESTIN_SZG01231 -3.6502045  0.0740745   -49.277  &lt; 2e-16 ***\nDESTIN_SZG01232 -1.7866272  0.0528660   -33.795  &lt; 2e-16 ***\nDESTIN_SZG01235 -1.2155131  0.0472819   -25.708  &lt; 2e-16 ***\nDESTIN_SZG01236 -1.2454128  0.0476277   -26.149  &lt; 2e-16 ***\nDESTIN_SZG01241 -1.8792411  0.0482709   -38.931  &lt; 2e-16 ***\nDESTIN_SZG01242 -1.4279937  0.0477147   -29.928  &lt; 2e-16 ***\nDESTIN_SZG01243 -0.3215791  0.0471589    -6.819 9.16e-12 ***\nDESTIN_SZG01246 -1.3828104  0.0476158   -29.041  &lt; 2e-16 ***\nDESTIN_SZG01256 -1.9139165  0.0476696   -40.150  &lt; 2e-16 ***\nDESTIN_SZG01257 -0.7696919  0.0473148   -16.267  &lt; 2e-16 ***\nDESTIN_SZG01258  0.1003458  0.0472011     2.126 0.033510 *  \nDESTIN_SZG01262 -2.0744181  0.0485221   -42.752  &lt; 2e-16 ***\nDESTIN_SZG01263  0.2014187  0.0470124     4.284 1.83e-05 ***\nDESTIN_SZG01264 -0.7409782  0.0474651   -15.611  &lt; 2e-16 ***\nDESTIN_SZG01265 -0.7441546  0.0474977   -15.667  &lt; 2e-16 ***\nDESTIN_SZG01266 -0.6733801  0.0473523   -14.221  &lt; 2e-16 ***\nDESTIN_SZG01267 -2.0467640  0.0495236   -41.329  &lt; 2e-16 ***\nDESTIN_SZG01272 -5.8453806  0.1200217   -48.703  &lt; 2e-16 ***\nDESTIN_SZG01273 -0.8583474  0.0474552   -18.088  &lt; 2e-16 ***\nDESTIN_SZG01277 -0.6344553  0.0471257   -13.463  &lt; 2e-16 ***\nDESTIN_SZG01278 -1.0003640  0.0473169   -21.142  &lt; 2e-16 ***\nDESTIN_SZG01283  0.6691571  0.0470100    14.234  &lt; 2e-16 ***\nDESTIN_SZG01284  0.2116471  0.0470464     4.499 6.84e-06 ***\nDESTIN_SZG01285 -0.0583088  0.0470999    -1.238 0.215723    \nDESTIN_SZG01286 -1.0412491  0.0478592   -21.757  &lt; 2e-16 ***\nDESTIN_SZG01289 -3.3735942  0.0598038   -56.411  &lt; 2e-16 ***\nDESTIN_SZG01293 -4.9580607  0.0874024   -56.727  &lt; 2e-16 ***\nDESTIN_SZG01294 -0.8657668  0.0476719   -18.161  &lt; 2e-16 ***\nDESTIN_SZG01295 -3.1721565  0.0519017   -61.119  &lt; 2e-16 ***\nDESTIN_SZG01298 -1.5035209  0.0474199   -31.707  &lt; 2e-16 ***\nDESTIN_SZG01299 -1.6977620  0.0477468   -35.558  &lt; 2e-16 ***\nDESTIN_SZG01304 -0.4585957  0.0472547    -9.705  &lt; 2e-16 ***\nDESTIN_SZG01305 -0.2766892  0.0470768    -5.877 4.17e-09 ***\nDESTIN_SZG01307 -1.7508901  0.0506494   -34.569  &lt; 2e-16 ***\nDESTIN_SZG01308 -0.4306673  0.0471942    -9.125  &lt; 2e-16 ***\nDESTIN_SZG01310 -5.5953627  0.1947207   -28.735  &lt; 2e-16 ***\nDESTIN_SZG01316 -2.8338253  0.0494533   -57.303  &lt; 2e-16 ***\nDESTIN_SZG01317 -2.8525719  0.0486898   -58.587  &lt; 2e-16 ***\nDESTIN_SZG01318 -3.0065462  0.0494798   -60.763  &lt; 2e-16 ***\nDESTIN_SZG01319 -0.1062145  0.0470523    -2.257 0.023985 *  \nDESTIN_SZG01320 -2.2398850  0.0487995   -45.900  &lt; 2e-16 ***\nDESTIN_SZG01324 -0.2202780  0.0494038    -4.459 8.24e-06 ***\nDESTIN_SZG01325 -2.2678402  0.0489714   -46.309  &lt; 2e-16 ***\nDESTIN_SZG01326 -0.6580664  0.0472100   -13.939  &lt; 2e-16 ***\nDESTIN_SZG01327 -0.4924503  0.0471743   -10.439  &lt; 2e-16 ***\nDESTIN_SZG01328 -0.6647489  0.0473135   -14.050  &lt; 2e-16 ***\nDESTIN_SZG01329 -0.8227658  0.0476552   -17.265  &lt; 2e-16 ***\nDESTIN_SZG01330  0.3991907  0.0471618     8.464  &lt; 2e-16 ***\nDESTIN_SZG01331 -5.7258872  0.2624320   -21.819  &lt; 2e-16 ***\nDESTIN_SZG01333 -2.2567515  0.0494744   -45.615  &lt; 2e-16 ***\nDESTIN_SZG01334 -1.8512628  0.0486086   -38.085  &lt; 2e-16 ***\nDESTIN_SZG01335 -0.1992537  0.0472222    -4.219 2.45e-05 ***\nDESTIN_SZG01336 -4.0333656  0.0729316   -55.303  &lt; 2e-16 ***\nDESTIN_SZG01337 -3.6819467  0.0553096   -66.570  &lt; 2e-16 ***\nDESTIN_SZG01338 -4.1390898  0.0539084   -76.780  &lt; 2e-16 ***\nDESTIN_SZG01339 -0.4081029  0.0470646    -8.671  &lt; 2e-16 ***\nDESTIN_SZG01340 -1.8208604  0.0477916   -38.100  &lt; 2e-16 ***\nDESTIN_SZG01341 -5.7683535  0.1070945   -53.862  &lt; 2e-16 ***\nDESTIN_SZG01346 -0.6797336  0.0474227   -14.334  &lt; 2e-16 ***\nDESTIN_SZG01347  0.5721168  0.0470318    12.164  &lt; 2e-16 ***\nDESTIN_SZG01348 -0.8423814  0.0473409   -17.794  &lt; 2e-16 ***\nDESTIN_SZG01349  0.0669067  0.0471700     1.418 0.156069    \nDESTIN_SZG01350 -1.5705689  0.0485290   -32.364  &lt; 2e-16 ***\nDESTIN_SZG01353 -0.7476026  0.0472926   -15.808  &lt; 2e-16 ***\nDESTIN_SZG01354 -2.0896034  0.0483476   -43.220  &lt; 2e-16 ***\nDESTIN_SZG01355 -1.9357656  0.0481539   -40.200  &lt; 2e-16 ***\nDESTIN_SZG01357 -2.5306011  0.0504414   -50.169  &lt; 2e-16 ***\nDESTIN_SZG01358 -0.4281359  0.0470618    -9.097  &lt; 2e-16 ***\nDESTIN_SZG01359 -1.8359352  0.0473712   -38.756  &lt; 2e-16 ***\nDESTIN_SZG01360 -2.0040978  0.0474854   -42.204  &lt; 2e-16 ***\nDESTIN_SZG01361 -1.6735080  0.0477292   -35.063  &lt; 2e-16 ***\nDESTIN_SZG01362 -3.2091899  0.0551870   -58.151  &lt; 2e-16 ***\nDESTIN_SZG01368 -1.5264262  0.0477186   -31.988  &lt; 2e-16 ***\nDESTIN_SZG01369 -1.4359729  0.0476601   -30.129  &lt; 2e-16 ***\nDESTIN_SZG01370  0.2745472  0.0470244     5.838 5.27e-09 ***\nDESTIN_SZG01371 -0.8471687  0.0474992   -17.835  &lt; 2e-16 ***\nDESTIN_SZG01372 -0.7935097  0.0473947   -16.743  &lt; 2e-16 ***\nDESTIN_SZG01373 -3.6675408  0.0570252   -64.314  &lt; 2e-16 ***\nDESTIN_SZG01374 -2.4758604  0.0490217   -50.505  &lt; 2e-16 ***\nDESTIN_SZG01375 -0.6273971  0.0474519   -13.222  &lt; 2e-16 ***\nDESTIN_SZG01376 -2.4149457  0.0498501   -48.444  &lt; 2e-16 ***\nDESTIN_SZG01379 -5.0819947  0.0786651   -64.603  &lt; 2e-16 ***\nDESTIN_SZG01380  0.2265100  0.0469898     4.820 1.43e-06 ***\nDESTIN_SZG01381  0.3980915  0.0469786     8.474  &lt; 2e-16 ***\nDESTIN_SZG01382 -0.3926583  0.0471326    -8.331  &lt; 2e-16 ***\nDESTIN_SZG01383 -3.2562422  0.0508550   -64.030  &lt; 2e-16 ***\nDESTIN_SZG01388 -0.7525673  0.0473084   -15.908  &lt; 2e-16 ***\nDESTIN_SZG01389 -1.0586963  0.0474330   -22.320  &lt; 2e-16 ***\nDESTIN_SZG01390 -0.7625565  0.0473768   -16.096  &lt; 2e-16 ***\nDESTIN_SZG01391 -0.0712123  0.0471430    -1.511 0.130900    \nDESTIN_SZG01392 -0.8286315  0.0485014   -17.085  &lt; 2e-16 ***\nDESTIN_SZG01393 -1.3899295  0.0476553   -29.166  &lt; 2e-16 ***\nDESTIN_SZG01394 -0.9486907  0.0472813   -20.065  &lt; 2e-16 ***\nDESTIN_SZG01395 -1.3381432  0.0474150   -28.222  &lt; 2e-16 ***\nDESTIN_SZG01396 -0.6962237  0.0471886   -14.754  &lt; 2e-16 ***\nDESTIN_SZG01397 -1.5864627  0.0475067   -33.394  &lt; 2e-16 ***\nDESTIN_SZG01398 -1.9733087  0.0489021   -40.352  &lt; 2e-16 ***\nDESTIN_SZG01400 -2.5662859  0.0482135   -53.228  &lt; 2e-16 ***\nDESTIN_SZG01401 -0.7359834  0.0470356   -15.647  &lt; 2e-16 ***\nDESTIN_SZG01402 -1.4874822  0.0472306   -31.494  &lt; 2e-16 ***\nDESTIN_SZG01404 -1.9158921  0.0517967   -36.989  &lt; 2e-16 ***\nDESTIN_SZG01410  0.2342539  0.0470434     4.980 6.37e-07 ***\nDESTIN_SZG01411 -0.6244814  0.0473825   -13.180  &lt; 2e-16 ***\nDESTIN_SZG01412  0.0098418  0.0470631     0.209 0.834355    \nDESTIN_SZG01413 -0.4444020  0.0471940    -9.416  &lt; 2e-16 ***\nDESTIN_SZG01414 -0.8977685  0.0472457   -19.002  &lt; 2e-16 ***\nDESTIN_SZG01415 -0.6273128  0.0471976   -13.291  &lt; 2e-16 ***\nDESTIN_SZG01416 -1.1001646  0.0473755   -23.222  &lt; 2e-16 ***\nDESTIN_SZG01417 -1.1261604  0.0472357   -23.841  &lt; 2e-16 ***\nDESTIN_SZG01418 -1.0778315  0.0472339   -22.819  &lt; 2e-16 ***\nDESTIN_SZG01419 -1.5067462  0.0475289   -31.702  &lt; 2e-16 ***\nDESTIN_SZG01422 -1.9119221  0.0473237   -40.401  &lt; 2e-16 ***\nDESTIN_SZG01423 -1.3664137  0.0472078   -28.945  &lt; 2e-16 ***\nDESTIN_SZG01430 -0.0257457  0.0471395    -0.546 0.584956    \nDESTIN_SZG01431  0.3867866  0.0470250     8.225  &lt; 2e-16 ***\nDESTIN_SZG01432 -0.0523354  0.0470636    -1.112 0.266131    \nDESTIN_SZG01433 -0.9589777  0.0477805   -20.070  &lt; 2e-16 ***\nDESTIN_SZG01434  0.0526122  0.0470651     1.118 0.263627    \nDESTIN_SZG01435 -0.5359811  0.0471215   -11.374  &lt; 2e-16 ***\nDESTIN_SZG01436 -1.8946369  0.0480639   -39.419  &lt; 2e-16 ***\nDESTIN_SZG01437 -1.2165149  0.0473148   -25.711  &lt; 2e-16 ***\nDESTIN_SZG01438 -0.7009768  0.0470843   -14.888  &lt; 2e-16 ***\nDESTIN_SZG01439  0.0918097  0.0470246     1.952 0.050893 .  \nDESTIN_SZG01440 -0.5676046  0.0472933   -12.002  &lt; 2e-16 ***\nDESTIN_SZG01442 -3.5321846  0.0497356   -71.019  &lt; 2e-16 ***\nDESTIN_SZG01443 -1.7648272  0.0472854   -37.323  &lt; 2e-16 ***\nDESTIN_SZG01444 -0.7545956  0.0473011   -15.953  &lt; 2e-16 ***\nDESTIN_SZG01452  0.6116464  0.0469965    13.015  &lt; 2e-16 ***\nDESTIN_SZG01453 -0.1904578  0.0471486    -4.040 5.36e-05 ***\nDESTIN_SZG01454 -1.2734340  0.0481912   -26.425  &lt; 2e-16 ***\nDESTIN_SZG01455 -0.7561040  0.0474055   -15.950  &lt; 2e-16 ***\nDESTIN_SZG01456 -0.7334787  0.0472375   -15.527  &lt; 2e-16 ***\nDESTIN_SZG01457 -0.1405184  0.0471023    -2.983 0.002852 ** \nDESTIN_SZG01458  0.7579044  0.0469624    16.139  &lt; 2e-16 ***\nDESTIN_SZG01459 -1.9907036  0.0475817   -41.838  &lt; 2e-16 ***\nDESTIN_SZG01460 -0.8045253  0.0470965   -17.083  &lt; 2e-16 ***\nDESTIN_SZG01461 -0.9562740  0.0473529   -20.195  &lt; 2e-16 ***\nDESTIN_SZG01464 -1.9087997  0.0474474   -40.230  &lt; 2e-16 ***\nDESTIN_SZG01465 -2.6446626  0.0480746   -55.012  &lt; 2e-16 ***\nDESTIN_SZG01472 -0.4498422  0.0474125    -9.488  &lt; 2e-16 ***\nDESTIN_SZG01473  0.4565237  0.0470281     9.707  &lt; 2e-16 ***\nDESTIN_SZG01474  0.2479014  0.0470093     5.273 1.34e-07 ***\nDESTIN_SZG01475 -0.0374394  0.0470682    -0.795 0.426364    \nDESTIN_SZG01476 -1.1006879  0.0474164   -23.213  &lt; 2e-16 ***\nDESTIN_SZG01477  0.6957817  0.0469530    14.819  &lt; 2e-16 ***\nDESTIN_SZG01478 -0.9909428  0.0471696   -21.008  &lt; 2e-16 ***\nDESTIN_SZG01479 -1.8459220  0.0474711   -38.885  &lt; 2e-16 ***\nDESTIN_SZG01480  0.5081092  0.0469624    10.819  &lt; 2e-16 ***\nDESTIN_SZG01481 -0.9730226  0.0472588   -20.589  &lt; 2e-16 ***\nDESTIN_SZG01482  0.0140231  0.0471428     0.297 0.766115    \nDESTIN_SZG01485 -3.1190757  0.0485397   -64.258  &lt; 2e-16 ***\nDESTIN_SZG01494  0.2451190  0.0470752     5.207 1.92e-07 ***\nDESTIN_SZG01495 -0.6565182  0.0472508   -13.894  &lt; 2e-16 ***\nDESTIN_SZG01496  0.2200311  0.0470163     4.680 2.87e-06 ***\nDESTIN_SZG01497 -1.1016913  0.0474367   -23.224  &lt; 2e-16 ***\nDESTIN_SZG01498 -0.9445491  0.0472829   -19.977  &lt; 2e-16 ***\nDESTIN_SZG01499 -0.7633535  0.0470997   -16.207  &lt; 2e-16 ***\nDESTIN_SZG01500 -1.1485929  0.0476356   -24.112  &lt; 2e-16 ***\nDESTIN_SZG01501 -0.5156843  0.0470580   -10.958  &lt; 2e-16 ***\nDESTIN_SZG01502 -0.6153376  0.0470911   -13.067  &lt; 2e-16 ***\nDESTIN_SZG01506 -4.9607619  0.0785324   -63.168  &lt; 2e-16 ***\nDESTIN_SZG01515 -0.6834079  0.0488429   -13.992  &lt; 2e-16 ***\nDESTIN_SZG01516  0.3223993  0.0470115     6.858 6.99e-12 ***\nDESTIN_SZG01517 -0.6830573  0.0473235   -14.434  &lt; 2e-16 ***\nDESTIN_SZG01518 -1.4347013  0.0475290   -30.186  &lt; 2e-16 ***\nDESTIN_SZG01519 -1.3451527  0.0475660   -28.280  &lt; 2e-16 ***\nDESTIN_SZG01520 -1.0040249  0.0471844   -21.279  &lt; 2e-16 ***\nDESTIN_SZG01521 -1.5754420  0.0474669   -33.190  &lt; 2e-16 ***\nDESTIN_SZG01522 -0.8010394  0.0471384   -16.993  &lt; 2e-16 ***\nDESTIN_SZG01523  0.4673369  0.0471006     9.922  &lt; 2e-16 ***\nDESTIN_SZG01524 -1.8602401  0.0482786   -38.531  &lt; 2e-16 ***\nDESTIN_SZG01527 -4.1547718  0.0549166   -75.656  &lt; 2e-16 ***\nDESTIN_SZG01535 -0.9923625  0.0712674   -13.925  &lt; 2e-16 ***\nDESTIN_SZG01536 -1.8743210  0.0516302   -36.303  &lt; 2e-16 ***\nDESTIN_SZG01537 -0.2110403  0.0472381    -4.468 7.91e-06 ***\nDESTIN_SZG01538 -0.4605237  0.0471542    -9.766  &lt; 2e-16 ***\nDESTIN_SZG01539 -0.4817496  0.0471007   -10.228  &lt; 2e-16 ***\nDESTIN_SZG01540 -1.2959984  0.0472745   -27.414  &lt; 2e-16 ***\nDESTIN_SZG01541 -0.2999014  0.0473517    -6.333 2.40e-10 ***\nDESTIN_SZG01542 -1.5355905  0.0478393   -32.099  &lt; 2e-16 ***\nDESTIN_SZG01543 -1.7114803  0.0534961   -31.993  &lt; 2e-16 ***\nDESTIN_SZG01544 -1.4944768  0.0477341   -31.308  &lt; 2e-16 ***\nDESTIN_SZG01547 -2.2898633  0.0491725   -46.568  &lt; 2e-16 ***\nDESTIN_SZG01556 -1.3772114  0.0762810   -18.054  &lt; 2e-16 ***\nDESTIN_SZG01557 -1.3870168  0.0494431   -28.053  &lt; 2e-16 ***\nDESTIN_SZG01558 -0.5050443  0.0484758   -10.418  &lt; 2e-16 ***\nDESTIN_SZG01559  0.0556769  0.0470416     1.184 0.236584    \nDESTIN_SZG01560 -0.0213894  0.0470367    -0.455 0.649297    \nDESTIN_SZG01561 -0.8308144  0.0473132   -17.560  &lt; 2e-16 ***\nDESTIN_SZG01562 -3.0381588  0.0497606   -61.055  &lt; 2e-16 ***\nDESTIN_SZG01563 -2.0433091  0.0477526   -42.789  &lt; 2e-16 ***\nDESTIN_SZG01564 -1.7290886  0.0475887   -36.334  &lt; 2e-16 ***\nDESTIN_SZG01565 -1.1034718  0.0472936   -23.332  &lt; 2e-16 ***\nDESTIN_SZG01566 -2.9005094  0.0496390   -58.432  &lt; 2e-16 ***\nDESTIN_SZG01567 -2.7452753  0.0499939   -54.912  &lt; 2e-16 ***\nDESTIN_SZG01568 -1.8965402  0.0484230   -39.166  &lt; 2e-16 ***\nDESTIN_SZG01578 -2.2399289  0.1114758   -20.093  &lt; 2e-16 ***\nDESTIN_SZG01580 -2.7196776  0.0525136   -51.790  &lt; 2e-16 ***\nDESTIN_SZG01581 -0.4211763  0.0471163    -8.939  &lt; 2e-16 ***\nDESTIN_SZG01582 -0.2924762  0.0470481    -6.217 5.08e-10 ***\nDESTIN_SZG01583 -2.2032098  0.0509576   -43.236  &lt; 2e-16 ***\nDESTIN_SZG01584 -2.0285966  0.0483945   -41.918  &lt; 2e-16 ***\nDESTIN_SZG01585 -1.3789368  0.0474890   -29.037  &lt; 2e-16 ***\nDESTIN_SZG01586 -0.7649343  0.0471680   -16.217  &lt; 2e-16 ***\nDESTIN_SZG01589 -2.3907358  0.0486170   -49.175  &lt; 2e-16 ***\nDESTIN_SZG01590 -1.8867834  0.0486930   -38.749  &lt; 2e-16 ***\nDESTIN_SZG01600 -0.9673943  0.0490507   -19.722  &lt; 2e-16 ***\nDESTIN_SZG01601 -1.3738659  0.0474147   -28.976  &lt; 2e-16 ***\nDESTIN_SZG01602 -1.0074776  0.0473354   -21.284  &lt; 2e-16 ***\nDESTIN_SZG01603  0.0351464  0.0470502     0.747 0.455066    \nDESTIN_SZG01604 -2.2044379  0.0479808   -45.944  &lt; 2e-16 ***\nDESTIN_SZG01605 -1.1676361  0.0472267   -24.724  &lt; 2e-16 ***\nDESTIN_SZG01606 -1.9327548  0.0487364   -39.657  &lt; 2e-16 ***\nDESTIN_SZG01607 -0.6615893  0.0470842   -14.051  &lt; 2e-16 ***\nDESTIN_SZG01608 -1.3498245  0.0473014   -28.537  &lt; 2e-16 ***\nDESTIN_SZG01609 -0.6727704  0.0471666   -14.264  &lt; 2e-16 ***\nDESTIN_SZG01610 -2.7757309  0.0534205   -51.960  &lt; 2e-16 ***\nDESTIN_SZG01622 -0.7782276  0.0482843   -16.118  &lt; 2e-16 ***\nDESTIN_SZG01623 -0.3815315  0.0470745    -8.105 5.28e-16 ***\nDESTIN_SZG01624  0.1923275  0.0470395     4.089 4.34e-05 ***\nDESTIN_SZG01625 -0.7537260  0.0472176   -15.963  &lt; 2e-16 ***\nDESTIN_SZG01626  0.9786223  0.0469470    20.845  &lt; 2e-16 ***\nDESTIN_SZG01627 -2.1831819  0.0476933   -45.775  &lt; 2e-16 ***\nDESTIN_SZG01628 -0.0852886  0.0470248    -1.814 0.069725 .  \nDESTIN_SZG01629 -3.0688137  0.0489341   -62.713  &lt; 2e-16 ***\nDESTIN_SZG01630 -2.7233006  0.0482385   -56.455  &lt; 2e-16 ***\nDESTIN_SZG01631 -3.1814941  0.0504899   -63.012  &lt; 2e-16 ***\nDESTIN_SZG01642 -3.2370525  0.0567145   -57.076  &lt; 2e-16 ***\nDESTIN_SZG01643 -0.8770509  0.0472396   -18.566  &lt; 2e-16 ***\nDESTIN_SZG01644 -0.9812705  0.0475557   -20.634  &lt; 2e-16 ***\nDESTIN_SZG01645 -1.0170959  0.0472911   -21.507  &lt; 2e-16 ***\nDESTIN_SZG01646 -0.8224731  0.0475101   -17.312  &lt; 2e-16 ***\nDESTIN_SZG01647 -1.4580100  0.0472671   -30.846  &lt; 2e-16 ***\nDESTIN_SZG01648 -1.4527893  0.0472364   -30.756  &lt; 2e-16 ***\nDESTIN_SZG01649 -0.8310553  0.0470752   -17.654  &lt; 2e-16 ***\nDESTIN_SZG01650 -1.7536181  0.0474773   -36.936  &lt; 2e-16 ***\nDESTIN_SZG01664 -5.2823157  0.1254195   -42.117  &lt; 2e-16 ***\nDESTIN_SZG01665 -0.2424326  0.0470575    -5.152 2.58e-07 ***\nDESTIN_SZG01666 -0.2357255  0.0470569    -5.009 5.46e-07 ***\nDESTIN_SZG01667 -1.2954380  0.0494625   -26.190  &lt; 2e-16 ***\nDESTIN_SZG01668 -1.4598320  0.0473590   -30.825  &lt; 2e-16 ***\nDESTIN_SZG01670 -1.0722348  0.0471101   -22.760  &lt; 2e-16 ***\nDESTIN_SZG01671 -1.4125902  0.0480360   -29.407  &lt; 2e-16 ***\nDESTIN_SZG01672 -2.4522592  0.0483069   -50.764  &lt; 2e-16 ***\nDESTIN_SZG01684 -0.7383490  0.0478231   -15.439  &lt; 2e-16 ***\nDESTIN_SZG01685 -1.6696117  0.0476680   -35.026  &lt; 2e-16 ***\nDESTIN_SZG01686 -0.9071685  0.0472270   -19.209  &lt; 2e-16 ***\nDESTIN_SZG01687 -0.6603765  0.0473617   -13.943  &lt; 2e-16 ***\nDESTIN_SZG01688 -1.3841961  0.0473536   -29.231  &lt; 2e-16 ***\nDESTIN_SZG01689 -2.1704885  0.0478598   -45.351  &lt; 2e-16 ***\nDESTIN_SZG01690 -2.8409421  0.0485254   -58.545  &lt; 2e-16 ***\nDESTIN_SZG01691 -1.0111266  0.0471052   -21.465  &lt; 2e-16 ***\nDESTIN_SZG01692 -2.8660143  0.0487980   -58.732  &lt; 2e-16 ***\nDESTIN_SZG01706 -1.0150940  0.0474982   -21.371  &lt; 2e-16 ***\nDESTIN_SZG01707 -1.7389063  0.0475593   -36.563  &lt; 2e-16 ***\nDESTIN_SZG01708 -1.1159761  0.0472839   -23.602  &lt; 2e-16 ***\nDESTIN_SZG01709 -0.4561572  0.0471096    -9.683  &lt; 2e-16 ***\nDESTIN_SZG01710 -0.6870189  0.0471554   -14.569  &lt; 2e-16 ***\nDESTIN_SZG01711 -0.0726546  0.0470183    -1.545 0.122288    \nDESTIN_SZG01712 -0.9974071  0.0470874   -21.182  &lt; 2e-16 ***\nDESTIN_SZG01713 -3.3706850  0.0492653   -68.419  &lt; 2e-16 ***\nDESTIN_SZG01714 -2.0147282  0.0475904   -42.335  &lt; 2e-16 ***\nDESTIN_SZG01727 -0.4994576  0.0471940   -10.583  &lt; 2e-16 ***\nDESTIN_SZG01728 -0.4604709  0.0470960    -9.777  &lt; 2e-16 ***\nDESTIN_SZG01729 -0.3370682  0.0470727    -7.161 8.03e-13 ***\nDESTIN_SZG01730 -1.5560648  0.0476693   -32.643  &lt; 2e-16 ***\nDESTIN_SZG01731 -0.8915233  0.0471655   -18.902  &lt; 2e-16 ***\nDESTIN_SZG01732 -1.1066834  0.0471123   -23.490  &lt; 2e-16 ***\nDESTIN_SZG01733 -2.3190098  0.0475629   -48.757  &lt; 2e-16 ***\nDESTIN_SZG01734 -1.1797989  0.0471366   -25.029  &lt; 2e-16 ***\nDESTIN_SZG01735 -1.8702162  0.0489517   -38.205  &lt; 2e-16 ***\nDESTIN_SZG01748 -1.4842020  0.0476900   -31.122  &lt; 2e-16 ***\nDESTIN_SZG01749 -0.2647728  0.0470498    -5.628 1.83e-08 ***\nDESTIN_SZG01750 -0.3797889  0.0470748    -8.068 7.16e-16 ***\nDESTIN_SZG01751 -0.8433926  0.0472809   -17.838  &lt; 2e-16 ***\nDESTIN_SZG01753 -0.6935968  0.0471004   -14.726  &lt; 2e-16 ***\nDESTIN_SZG01754  0.2435055  0.0469663     5.185 2.16e-07 ***\nDESTIN_SZG01755 -0.5955639  0.0470247   -12.665  &lt; 2e-16 ***\nDESTIN_SZG01756 -1.6188910  0.0472163   -34.287  &lt; 2e-16 ***\nDESTIN_SZG01757 -3.9618153  0.0518479   -76.412  &lt; 2e-16 ***\nDESTIN_SZG01769 -1.0087320  0.0473171   -21.319  &lt; 2e-16 ***\nDESTIN_SZG01770 -1.2245779  0.0473562   -25.859  &lt; 2e-16 ***\nDESTIN_SZG01771 -0.2348561  0.0471407    -4.982 6.29e-07 ***\nDESTIN_SZG01772  0.7344615  0.0474061    15.493  &lt; 2e-16 ***\nDESTIN_SZG01774 -1.8445705  0.0473904   -38.923  &lt; 2e-16 ***\nDESTIN_SZG01775 -2.2978515  0.0475464   -48.329  &lt; 2e-16 ***\nDESTIN_SZG01776  0.0140711  0.0469767     0.300 0.764533    \nDESTIN_SZG01777 -2.1156639  0.0474477   -44.589  &lt; 2e-16 ***\nDESTIN_SZG01778 -3.0507991  0.0513709   -59.388  &lt; 2e-16 ***\nDESTIN_SZG01790 -0.1763095  0.0471445    -3.740 0.000184 ***\nDESTIN_SZG01791 -0.7807337  0.0472376   -16.528  &lt; 2e-16 ***\nDESTIN_SZG01792 -0.6829557  0.0474045   -14.407  &lt; 2e-16 ***\nDESTIN_SZG01793 -0.6706274  0.0472202   -14.202  &lt; 2e-16 ***\nDESTIN_SZG01794  1.0312777  0.0474599    21.729  &lt; 2e-16 ***\nDESTIN_SZG01795 -3.2859703  0.0515523   -63.741  &lt; 2e-16 ***\nDESTIN_SZG01796 -1.2156082  0.0471993   -25.755  &lt; 2e-16 ***\nDESTIN_SZG01797 -1.5728280  0.0472073   -33.317  &lt; 2e-16 ***\nDESTIN_SZG01798 -1.5056298  0.0471798   -31.913  &lt; 2e-16 ***\nDESTIN_SZG01799 -2.4877107  0.0478042   -52.040  &lt; 2e-16 ***\nDESTIN_SZG01800 -4.1486086  0.0691633   -59.983  &lt; 2e-16 ***\nDESTIN_SZG01811 -1.2156263  0.0474754   -25.605  &lt; 2e-16 ***\nDESTIN_SZG01812  0.1509328  0.0470039     3.211 0.001322 ** \nDESTIN_SZG01813  0.2913972  0.0469996     6.200 5.65e-10 ***\nDESTIN_SZG01817 -2.7735138  0.0483499   -57.363  &lt; 2e-16 ***\nDESTIN_SZG01818 -2.0179459  0.0472882   -42.673  &lt; 2e-16 ***\nDESTIN_SZG01819 -0.1713228  0.0469921    -3.646 0.000267 ***\nDESTIN_SZG01820 -4.9100337  0.0626681   -78.350  &lt; 2e-16 ***\nDESTIN_SZG01832  0.0860088  0.0470725     1.827 0.067676 .  \nDESTIN_SZG01833 -1.3009824  0.0473838   -27.456  &lt; 2e-16 ***\nDESTIN_SZG01834 -1.3913658  0.0473575   -29.380  &lt; 2e-16 ***\nDESTIN_SZG01835 -1.2840869  0.0474679   -27.052  &lt; 2e-16 ***\nDESTIN_SZG01837 -1.4480646  0.0488538   -29.641  &lt; 2e-16 ***\nDESTIN_SZG01839 -2.8190831  0.0482683   -58.404  &lt; 2e-16 ***\nDESTIN_SZG01840 -0.1437183  0.0470043    -3.058 0.002231 ** \nDESTIN_SZG01841 -3.6760175  0.0519867   -70.711  &lt; 2e-16 ***\nDESTIN_SZG01842 -1.3317745  0.0495995   -26.851  &lt; 2e-16 ***\nDESTIN_SZG01853 -0.9327128  0.0472439   -19.743  &lt; 2e-16 ***\nDESTIN_SZG01854 -0.6676713  0.0471621   -14.157  &lt; 2e-16 ***\nDESTIN_SZG01855 -0.3014253  0.0471046    -6.399 1.56e-10 ***\nDESTIN_SZG01858 -0.3895410  0.0476544    -8.174 2.98e-16 ***\nDESTIN_SZG01860 -2.1158906  0.0502206   -42.132  &lt; 2e-16 ***\nDESTIN_SZG01861 -1.8322552  0.0473271   -38.715  &lt; 2e-16 ***\nDESTIN_SZG01874 -1.2627662  0.0478003   -26.418  &lt; 2e-16 ***\nDESTIN_SZG01875 -2.9322002  0.0508391   -57.676  &lt; 2e-16 ***\nDESTIN_SZG01876 -1.7108834  0.0516904   -33.099  &lt; 2e-16 ***\nDESTIN_SZG01877 -0.5057899  0.0471399   -10.730  &lt; 2e-16 ***\nDESTIN_SZG01880 -1.2938566  0.0489508   -26.432  &lt; 2e-16 ***\nDESTIN_SZG01882 -1.7437725  0.0473204   -36.850  &lt; 2e-16 ***\nDESTIN_SZG01883 -2.6822058  0.0506989   -52.905  &lt; 2e-16 ***\nDESTIN_SZG01895 -0.6351558  0.0472050   -13.455  &lt; 2e-16 ***\nDESTIN_SZG01896 -1.6077622  0.0475370   -33.821  &lt; 2e-16 ***\nDESTIN_SZG01897 -2.2769073  0.0483110   -47.130  &lt; 2e-16 ***\nDESTIN_SZG01898 -2.7044641  0.0525965   -51.419  &lt; 2e-16 ***\nDESTIN_SZG01901 -1.8039577  0.0513384   -35.139  &lt; 2e-16 ***\nDESTIN_SZG01903 -3.1930449  0.0499300   -63.950  &lt; 2e-16 ***\nDESTIN_SZG01917 -1.6359880  0.0476950   -34.301  &lt; 2e-16 ***\nDESTIN_SZG01918 -0.4473564  0.0473022    -9.457  &lt; 2e-16 ***\nDESTIN_SZG01919 -0.3695386  0.0471129    -7.844 4.38e-15 ***\nDESTIN_SZG01922 -0.5230051  0.0479892   -10.898  &lt; 2e-16 ***\nDESTIN_SZG01924 -3.1428123  0.0504754   -62.264  &lt; 2e-16 ***\nDESTIN_SZG01937 -1.1196568  0.0474980   -23.573  &lt; 2e-16 ***\nDESTIN_SZG01938 -0.3018408  0.0471003    -6.408 1.47e-10 ***\nDESTIN_SZG01939 -1.4050154  0.0475770   -29.531  &lt; 2e-16 ***\nDESTIN_SZG01942 -2.0775679  0.0509713   -40.760  &lt; 2e-16 ***\nDESTIN_SZG01959 -1.4783056  0.0477748   -30.943  &lt; 2e-16 ***\nDESTIN_SZG01960  0.8751475  0.0469552    18.638  &lt; 2e-16 ***\nDESTIN_SZG01961 -1.8075415  0.0479381   -37.706  &lt; 2e-16 ***\nDESTIN_SZG01962 -0.9710498  0.0472932   -20.533  &lt; 2e-16 ***\nDESTIN_SZG01964 -0.3250392  0.0482496    -6.737 1.62e-11 ***\nDESTIN_SZG01979 -1.1447300  0.0476441   -24.027  &lt; 2e-16 ***\nDESTIN_SZG01980 -1.3297920  0.0473557   -28.081  &lt; 2e-16 ***\nDESTIN_SZG01981 -1.4308686  0.0474470   -30.157  &lt; 2e-16 ***\nDESTIN_SZG01982 -0.7503627  0.0474265   -15.822  &lt; 2e-16 ***\nDESTIN_SZG01983 -1.0618851  0.0472941   -22.453  &lt; 2e-16 ***\nDESTIN_SZG01984 -0.9499000  0.0473060   -20.080  &lt; 2e-16 ***\nDESTIN_SZG01985 -0.7398587  0.0472320   -15.664  &lt; 2e-16 ***\nDESTIN_SZG02001 -1.0500858  0.0473476   -22.178  &lt; 2e-16 ***\nDESTIN_SZG02002 -0.8917270  0.0471498   -18.913  &lt; 2e-16 ***\nDESTIN_SZG02003 -0.3601488  0.0470893    -7.648 2.04e-14 ***\nDESTIN_SZG02004 -0.1837609  0.0470801    -3.903 9.49e-05 ***\nDESTIN_SZG02005 -1.1549002  0.0473109   -24.411  &lt; 2e-16 ***\nDESTIN_SZG02006 -0.2585487  0.0471152    -5.488 4.07e-08 ***\nDESTIN_SZG02007 -3.5753128  0.0546442   -65.429  &lt; 2e-16 ***\nDESTIN_SZG02022 -0.4834704  0.0473236   -10.216  &lt; 2e-16 ***\nDESTIN_SZG02023 -0.5357226  0.0471262   -11.368  &lt; 2e-16 ***\nDESTIN_SZG02024 -0.2149932  0.0470530    -4.569 4.90e-06 ***\nDESTIN_SZG02025 -1.5097730  0.0473369   -31.894  &lt; 2e-16 ***\nDESTIN_SZG02026 -2.1421576  0.0482249   -44.420  &lt; 2e-16 ***\nDESTIN_SZG02027 -0.2599531  0.0471015    -5.519 3.41e-08 ***\nDESTIN_SZG02043 -1.8548613  0.0481210   -38.546  &lt; 2e-16 ***\nDESTIN_SZG02044 -1.1375822  0.0472939   -24.053  &lt; 2e-16 ***\nDESTIN_SZG02045 -1.6881512  0.0484012   -34.878  &lt; 2e-16 ***\nDESTIN_SZG02046 -0.2135522  0.0470280    -4.541 5.60e-06 ***\nDESTIN_SZG02047 -2.0568042  0.0477484   -43.076  &lt; 2e-16 ***\nDESTIN_SZG02048 -1.7911189  0.0476215   -37.612  &lt; 2e-16 ***\nDESTIN_SZG02049 -3.6429829  0.0542393   -67.165  &lt; 2e-16 ***\nDESTIN_SZG02064 -1.2017785  0.0474474   -25.329  &lt; 2e-16 ***\nDESTIN_SZG02065 -1.4809468  0.0475157   -31.168  &lt; 2e-16 ***\nDESTIN_SZG02066 -3.3897045  0.0563557   -60.148  &lt; 2e-16 ***\nDESTIN_SZG02067  1.3106465  0.0469456    27.918  &lt; 2e-16 ***\nDESTIN_SZG02068 -2.0131939  0.0485226   -41.490  &lt; 2e-16 ***\nDESTIN_SZG02069 -1.5633068  0.0475952   -32.846  &lt; 2e-16 ***\nDESTIN_SZG02085 -1.1496210  0.0475374   -24.184  &lt; 2e-16 ***\nDESTIN_SZG02086  0.3443472  0.0470391     7.320 2.47e-13 ***\nDESTIN_SZG02087  0.0596185  0.0470607     1.267 0.205212    \nDESTIN_SZG02088 -1.1837631  0.0472321   -25.063  &lt; 2e-16 ***\nDESTIN_SZG02089 -1.7535702  0.0477530   -36.722  &lt; 2e-16 ***\nDESTIN_SZG02090  0.9542363  0.0469664    20.317  &lt; 2e-16 ***\nDESTIN_SZG02091 -4.1116587  0.0775274   -53.035  &lt; 2e-16 ***\nDESTIN_SZG02105 -1.1828438  0.0889652   -13.296  &lt; 2e-16 ***\nDESTIN_SZG02106 -2.5850621  0.0492692   -52.468  &lt; 2e-16 ***\nDESTIN_SZG02107  0.2386397  0.0470416     5.073 3.92e-07 ***\nDESTIN_SZG02108 -0.1468366  0.0471216    -3.116 0.001832 ** \nDESTIN_SZG02109 -1.4917030  0.0473300   -31.517  &lt; 2e-16 ***\nDESTIN_SZG02110 -2.3543508  0.0483627   -48.681  &lt; 2e-16 ***\nDESTIN_SZG02111 -3.4096237  0.0572830   -59.522  &lt; 2e-16 ***\nDESTIN_SZG02128 -1.0344249  0.0477868   -21.647  &lt; 2e-16 ***\nDESTIN_SZG02129 -0.9728013  0.0479119   -20.304  &lt; 2e-16 ***\nDESTIN_SZG02130 -0.9741006  0.0471989   -20.638  &lt; 2e-16 ***\nDESTIN_SZG02131 -1.0640166  0.0474518   -22.423  &lt; 2e-16 ***\nDESTIN_SZG02132 -1.4806357  0.0474627   -31.196  &lt; 2e-16 ***\nDESTIN_SZG02148 -1.4770185  0.0489685   -30.163  &lt; 2e-16 ***\nDESTIN_SZG02149 -1.6184950  0.0481062   -33.644  &lt; 2e-16 ***\nDESTIN_SZG02150 -1.2142566  0.0475551   -25.534  &lt; 2e-16 ***\nDESTIN_SZG02151  0.3700752  0.0469976     7.874 3.43e-15 ***\nDESTIN_SZG02152 -0.6057999  0.0471761   -12.841  &lt; 2e-16 ***\nDESTIN_SZG02153 -1.8642147  0.0482164   -38.664  &lt; 2e-16 ***\nDESTIN_SZG02171 -0.3395948  0.0471992    -7.195 6.25e-13 ***\nDESTIN_SZG02172 -2.0821649  0.0482254   -43.176  &lt; 2e-16 ***\nDESTIN_SZG02173 -1.6450100  0.0474690   -34.654  &lt; 2e-16 ***\nDESTIN_SZG02174 -1.0799297  0.0473945   -22.786  &lt; 2e-16 ***\nDESTIN_SZG02191 -0.1010404  0.0474790    -2.128 0.033328 *  \nDESTIN_SZG02192 -1.4410487  0.0480829   -29.970  &lt; 2e-16 ***\nDESTIN_SZG02193 -0.7554698  0.0472929   -15.974  &lt; 2e-16 ***\nDESTIN_SZG02194 -0.9178419  0.0472560   -19.423  &lt; 2e-16 ***\nDESTIN_SZG02195 -2.6660473  0.0579229   -46.028  &lt; 2e-16 ***\nDESTIN_SZG02212 -0.1575268  0.0488334    -3.226 0.001256 ** \nDESTIN_SZG02213 -0.4369374  0.0476010    -9.179  &lt; 2e-16 ***\nDESTIN_SZG02214  0.2864916  0.0474540     6.037 1.57e-09 ***\nDESTIN_SZG02215 -1.3857852  0.0478056   -28.988  &lt; 2e-16 ***\nDESTIN_SZG02216 -0.5374950  0.0472716   -11.370  &lt; 2e-16 ***\nDESTIN_SZG02233  0.2491327  0.0479330     5.198 2.02e-07 ***\nDESTIN_SZG02234  0.8021386  0.0476310    16.841  &lt; 2e-16 ***\nDESTIN_SZG02235 -0.6101878  0.0477853   -12.769  &lt; 2e-16 ***\nDESTIN_SZG02236 -2.0117851  0.0487947   -41.230  &lt; 2e-16 ***\nDESTIN_SZG02237 -0.5608211  0.0483403   -11.602  &lt; 2e-16 ***\nDESTIN_SZG02256 -0.5158428  0.0486245   -10.609  &lt; 2e-16 ***\nDESTIN_SZG02257 -2.7541887  0.0536158   -51.369  &lt; 2e-16 ***\nDESTIN_SZG02258 -0.8140500  0.0474781   -17.146  &lt; 2e-16 ***\nDESTIN_SZG02259  0.2950355  0.0480144     6.145 8.01e-10 ***\nDESTIN_SZG02277 -1.5300320  0.0530071   -28.865  &lt; 2e-16 ***\nDESTIN_SZG02278 -1.2517233  0.0494595   -25.308  &lt; 2e-16 ***\nDESTIN_SZG02279 -0.5096442  0.0474679   -10.737  &lt; 2e-16 ***\nDESTIN_SZG02280 -1.8602976  0.0567408   -32.786  &lt; 2e-16 ***\nDESTIN_SZG02297 -1.4493774  0.0495564   -29.247  &lt; 2e-16 ***\nDESTIN_SZG02300 -1.4145199  0.0509069   -27.786  &lt; 2e-16 ***\nDESTIN_SZG02301 -0.8646153  0.0479154   -18.045  &lt; 2e-16 ***\nDESTIN_SZG02318  0.5731926  0.0472173    12.139  &lt; 2e-16 ***\nDESTIN_SZG02319  0.5258353  0.0471801    11.145  &lt; 2e-16 ***\nDESTIN_SZG02322 -0.4928539  0.0478225   -10.306  &lt; 2e-16 ***\nDESTIN_SZG02337  0.0134791  0.0505125     0.267 0.789588    \nDESTIN_SZG02341  0.7907897  0.0471586    16.769  &lt; 2e-16 ***\nDESTIN_SZG02343 -1.3059362  0.0485812   -26.881  &lt; 2e-16 ***\nDESTIN_SZG02361 -0.4335822  0.0477142    -9.087  &lt; 2e-16 ***\nDESTIN_SZG02364 -2.4268487  0.0554826   -43.741  &lt; 2e-16 ***\nDESTIN_SZG02379 -1.4134320  0.0546364   -25.870  &lt; 2e-16 ***\nDESTIN_SZG02384  0.5506025  0.0473633    11.625  &lt; 2e-16 ***\nDESTIN_SZG02405  1.1919496  0.0471732    25.268  &lt; 2e-16 ***\nDESTIN_SZG02406 -1.8422643  0.0526903   -34.964  &lt; 2e-16 ***\nDESTIN_SZG02426  0.6352864  0.0482338    13.171  &lt; 2e-16 ***\nDESTIN_SZG02427  0.9464266  0.0473876    19.972  &lt; 2e-16 ***\nDESTIN_SZG02505  0.5333907  0.0507135    10.518  &lt; 2e-16 ***\nlog(dist)       -1.6077121  0.0002914 -5517.894  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98771330  on 65139  degrees of freedom\nResidual deviance: 24658576  on 63506  degrees of freedom\nAIC: 25020045\n\nNumber of Fisher Scoring iterations: 9\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(dbcSIM$data$MORNING_PEAK, dbcSIM$fitted.values)\n\n[1] 0.6000049\n\n\n\nAnalysis\nThe negative coefficient for distance indicates that as the distance increases, the number of trips decreases, is expected."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#model-comparison",
    "href": "Take-home_Ex2/Take-home_Ex2.html#model-comparison",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Model comparison",
    "text": "Model comparison\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package.\nFirst of all, let us create a list called model_list by using the code chun below.\n\nmodel_list &lt;- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\nNext, we will compute the RMSE of all the models in model_list file by using the code chunk below.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 1616.760\noriginConstrained      |   glm | 1535.051\ndestinationConstrained |   glm | 1380.755\ndoublyConstrained      |   glm | 1172.123\n\n\nThe print above reveals that doubly constraint SIM is the best model among all the four SIMs because it has the smallest RMSE value of 1172.123."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-fitted",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-fitted",
    "title": "Take-home Exercise 2: Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "Visualising fitted",
    "text": "Visualising fitted\nVisualise the observed values and the fitted values.\nFirstly we will extract the fitted values from each model by using the code chunk below.\n\ndf &lt;- as.data.frame(uncSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\nNext, we will join the values to SIM_data data frame.\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(uncTRIPS = \"uncSIM$fitted.values\")\n\nRepeat the same step by for Origin Constrained SIM (i.e. orcSIM)\n\ndf &lt;- as.data.frame(orcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(orcTRIPS = \"orcSIM$fitted.values\")\n\nRepeat the same step by for Destination Constrained SIM (i.e. decSIM)\n\ndf &lt;- as.data.frame(decSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(decTRIPS = \"decSIM$fitted.values\")\n\nRepeat the same step by for Doubly Constrained SIM (i.e. dbcSIM)\n\ndf &lt;- as.data.frame(dbcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\nunc_p &lt;- ggplot(data = SIM_data,\n                aes(x = uncTRIPS,\n                    y = MORNING_PEAK)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\norc_p &lt;- ggplot(data = SIM_data,\n                aes(x = orcTRIPS,\n                    y = MORNING_PEAK)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndec_p &lt;- ggplot(data = SIM_data,\n                aes(x = decTRIPS,\n                    y = MORNING_PEAK)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndbc_p &lt;- ggplot(data = SIM_data,\n                aes(x = dbcTRIPS,\n                    y = MORNING_PEAK)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "href": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/FinServ.html",
    "href": "Take-home_Ex2/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/entertn.html",
    "href": "Take-home_Ex2/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "",
    "text": "As city-wide urban infrastructures such as buses, taxis, mass rapid transit, public utilities and roads become digital, the datasets obtained can be used as a framework for tracking movement patterns through space and time. This is particularly true with the recent trend of massive deployment of pervasive computing technologies such as GPS and RFID on the vehicles. For example, routes and ridership data were collected with the use of smart cards and Global Positioning System (GPS) devices available on the public buses. These massive movement data collected are likely to contain structure and patterns that provide useful information about characteristics of the measured phenomena. The identification, analysis and comparison of such patterns will provide greater insights on human movement and behaviours within a city. These understandings will potentially contribute to a better urban management and useful information for urban transport services providers both from the private and public sector to formulate informed decision to gain competitive advantage.\nIn real-world practices, the use of these massive locational aware data, however, tend to be confined to simple tracking and mapping with GIS applications. This is mainly due to a general lack of functions in conventional GIS which is capable of analysing and model spatial and spatio-temporal data effectively."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#installing-and-loading-the-r-packages",
    "href": "Take-home_Ex1/Take-home_Ex1.html#installing-and-loading-the-r-packages",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Installing and Loading the R Packages",
    "text": "Installing and Loading the R Packages\nThe code chunk below install and load sf, sfdep, spdep, tmap, tidyverse, dplyr and mapview packages into R environment\n\npacman::p_load(sf, sfdep, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#geospatial-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#geospatial-data",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Geospatial data",
    "text": "Geospatial data\n\nImport Bus Stop Geospatial Data into R environment\nLoad the Bus Stop GIS by using st_read() from sf package.\n\nbs = st_read(dsn=\"data/geospatial\", layer=\"BusStop\")\n\nReading layer `BusStop' from data source \n  `D:\\zhphyo\\ISSS624\\Take-home_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\nData Wrangling\nClean the data to ensure the accuracy before conducting our analysis.\n\nCheck duplicate geometry\nBelow code chunk converts the geometry to text, identifies the rows with duplicate geometries. We use the st_as_text() from sf package to convert the geometry object to their WKT(Well-Known Text) string representation. We will then used the duplicated() function get the duplicate records with same geometry in bs data frame.\nFrom the result below, we identified total 2 records that is duplicates.\n\n# Calculate WKT for each geometry\nbs &lt;- bs %&gt;% \n  mutate(temp_geo = st_as_text(geometry))\n\n# Find duplicate geometries\nduplicate_geometries &lt;- bs %&gt;% \n  filter(duplicated(temp_geo) | duplicated(temp_geo, fromLast = TRUE))\n\n# Print duplicate geometries\nprint(duplicate_geometries)\n\nSimple feature collection with 2 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 42187.23 ymin: 34995.78 xmax: 42187.23 ymax: 34995.78\nProjected CRS: SVY21\n  BUS_STOP_N BUS_ROOF_N        LOC_DESC                  geometry\n1      96319       &lt;NA&gt; Yusen Logistics POINT (42187.23 34995.78)\n2      96319        NIL YUSEN LOGISTICS POINT (42187.23 34995.78)\n                   temp_geo\n1 POINT (42187.23 34995.78)\n2 POINT (42187.23 34995.78)\n\n\nWe will now use the filter() function dplyr package to filter rows in bs data frame to keep non duplicate records. Lastly, remove temp_geo column from bs data frame which is the temporary column that used to check the duplicate geometry value.\n\n# Remove duplicate geometries\nbs &lt;- bs %&gt;% \n  filter(!duplicated(temp_geo))\n\n#remove the temp column if not needed\nbs &lt;- bs %&gt;% select(-temp_geo)\n\n\n\nCheck duplicate Bus Stop No\nBelow code chunk identifies the rows with duplicate BUS_STOP_N. We will then used the duplicated() function get the duplicate records with same BUS_STOP_N in bs data frame.\nFrom the result below, we identified 30 records that is duplicates.\n\n# Calculate WKT for each geometry\nbs &lt;- bs %&gt;% \n  mutate(temp_bs = BUS_STOP_N)\n\n# Find duplicate geometries\nduplicate_bs_n &lt;- bs %&gt;% \n  filter(duplicated(temp_bs) | duplicated(temp_bs, fromLast = TRUE))\n\n# Print duplicate geometries\nprint(duplicate_bs_n)\n\nSimple feature collection with 30 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13488.02 ymin: 32594.17 xmax: 44144.57 ymax: 47934\nProjected CRS: SVY21\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N            LOC_DESC                  geometry temp_bs\n1       58031        UNK     OPP CANBERRA DR  POINT (27089.69 47570.9)   58031\n2       62251        B03        Bef Blk 471B POINT (35500.54 39943.41)   62251\n3       47201        UNK                &lt;NA&gt; POINT (22616.75 47793.68)   47201\n4       58031        UNK     OPP CANBERRA DR POINT (27111.07 47517.77)   58031\n5       22501        B02            Blk 662A  POINT (13489.09 35536.4)   22501\n6       82221        B01              BLK 3A  POINT (35323.6 33257.05)   82221\n7       68091        B01        AFT BAKER ST POINT (32164.11 42695.98)   68091\n8       43709        B06             BLK 644  POINT (18963.42 36762.8)   43709\n9       97079        B14 OPP ST. JOHN'S CRES POINT (44144.57 38980.25)   97079\n10      82221        B01              Blk 3A POINT (35308.74 33335.17)   82221\n\n\nWe will now use the filter() function dplyr package to filter rows in bs data frame to keep non duplicate records. Lastly, remove temp_bs column from bs data frame which is the temporary column that used to check the duplicate BUS_STOP_N value.\n\n# Remove duplicate geometries\nbs &lt;- bs %&gt;% \n  filter(!duplicated(temp_bs))\n\n#remove the temp column if not needed\nbs &lt;- bs %&gt;% select(-temp_bs)\n\n\n\nTransform Data\nTransform the dataset to CRS 3414 and extract X and Y coordinates from geometry. Join the X,Y coordinates to bs data set.\n\nbs = st_transform(bs, 3414)\n\nbs_XY = do.call(rbind, st_geometry(bs)) %&gt;% \n    as_tibble() %&gt;% setNames(c(\"X\",\"Y\"))\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\nbs = cbind(bs, bs_XY)\n\nUse st_crs() function from sf package to validate and obtain the information about coordinate system associated with bs object.\n\nst_crs(bs)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nBefore starting to analyse data, use glimpse() to look at certain attributes of the spatial features to gain understanding of our dataset.\n\nglimpse(bs)\n\nRows: 5,145\nColumns: 6\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ X          &lt;dbl&gt; 13576.312, 13228.592, 21045.101, 41603.764, 24568.738, 3095…\n$ Y          &lt;dbl&gt; 32883.65, 44206.38, 40242.08, 35413.11, 30391.85, 38079.61,…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#aspatial-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#aspatial-data",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Aspatial data",
    "text": "Aspatial data\n\nImport Passenger Volume csv file into R environment\nUse Postman download Passenger Volume by Origin Destination Bus Stops downloaded from LTA DataMall.\n\nImport origin_destination_bus_202310.csv into R by using read_csv() of readr package. The output is R data frame class, pv.\n\npv &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nUse head() function to print first few rows of the data frame to quickly inspect the dataset’s structure and content.\n\nhead(pv)\n\n# A tibble: 6 × 7\n  YEAR_MONTH DAY_TYPE   TIME_PER_HOUR PT_TYPE ORIGIN_PT_CODE DESTINATION_PT_CODE\n  &lt;chr&gt;      &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;              \n1 2023-10    WEEKENDS/…            16 BUS     04168          10051              \n2 2023-10    WEEKDAY               16 BUS     04168          10051              \n3 2023-10    WEEKENDS/…            14 BUS     80119          90079              \n4 2023-10    WEEKDAY               14 BUS     80119          90079              \n5 2023-10    WEEKDAY               17 BUS     44069          17229              \n6 2023-10    WEEKENDS/…            17 BUS     20281          20141              \n# ℹ 1 more variable: TOTAL_TRIPS &lt;dbl&gt;\n\n\n\n\nFunction to Perform relational join\nWrite a function to join Bus Stop (bs) with the attribute fields of Passenger Volume (pv) dataset. This is performed by using left_join() of dplyr package. This function will also convert the data into spatial object using st_as_sf() of sf package and filter out the records where the columns ‘X’, ‘Y’ and ‘ORIGIN_TOTAL_TRIPS’ doesn’t contain any value (NA).\nThis function will be used in the [Geovisualisation and Analysis] section.\n\njoined_bs_pv &lt;- function(bs, pv) {\n  joined_data &lt;- left_join(bs, pv, by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n    select(BUS_STOP_N, X, Y, ORIGIN_TOTAL_TRIPS, geometry)\n  \n  sf = joined_data %&gt;%\n    # lng/lat value are missing in some records\n    filter(!is.na(X) & !is.na(Y) & !is.na(ORIGIN_TOTAL_TRIPS)) %&gt;%\n    st_as_sf(coords = c(\"X\", \"Y\"), crs = 3414, remove = FALSE)\n  \n  return (sf)\n}"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#create-and-plot-spatial-hexagon-grids",
    "href": "Take-home_Ex1/Take-home_Ex1.html#create-and-plot-spatial-hexagon-grids",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Create and plot spatial hexagon grids",
    "text": "Create and plot spatial hexagon grids\n\nFunction to Create hexagon grid\nWrite a function to create hexagonal grid over a given set of spatial points - input, counts and sums trip data within each grid cell, and then filters out cells with no or zero trips. It’s used for [Geovisualisation and Analysis] section to understand on trip distribution.\n\nhoneycomb_grid &lt;- function(input) {\n  #Create a grid which the extent equals to the bounding box of the selected points\n  area_honeycomb_grid &lt;- st_make_grid(input, c(500), what = \"polygons\", square = FALSE)\n  \n  # To sf and add grid ID\n  area_honeycomb_grid_sf &lt;- st_sf(area_honeycomb_grid) %&gt;%\n    # add grid ID\n    mutate(grid_id = 1:length(lengths(area_honeycomb_grid)))\n  \n  #Sum the number of passenger points in each grid\n  count_points &lt;- st_intersection(area_honeycomb_grid_sf, input) %&gt;%\n    group_by(grid_id) %&gt;%\n    summarize(sum_trips = sum(ORIGIN_TOTAL_TRIPS, na.rm = TRUE)) %&gt;%\n    rename(count_grid_id = grid_id)\n  \n  #Merge the point counts back to the honeycomb grid\n  area_honeycomb_grid_sf &lt;- area_honeycomb_grid_sf %&gt;%\n    st_join(count_points, by = \"grid_id\")\n  \n  # Remove grid without value \n  filtered_area_honeycomb_grid_sf &lt;- area_honeycomb_grid_sf %&gt;%\n    filter(!is.na(sum_trips) & sum_trips &gt; 0) %&gt;%\n    select(-count_grid_id)\n  \n  filtered_area_honeycomb_grid_sf &lt;- filtered_area_honeycomb_grid_sf %&gt;%\n  rename(geometry=area_honeycomb_grid)\n  \n  return (filtered_area_honeycomb_grid_sf)\n}\n\n\n\nFunction to Plot hexagon grid\nThis code chunk will plot the grid into a interactive map with tmap. This function will use in [Geovisualisation and Analysis] section to plot a map with hexagon grid.\n\nplot_honeycomb_grid_with_trips &lt;- function(input) {\n  tmap_mode(\"view\")\n \n  # Plot the honeycomb grid with the summed trips\n  tm_shape(input) +\n    tm_fill(\n      col = \"sum_trips\",\n      palette = \"Reds\",\n      style = \"fixed\",\n      breaks = c(1, 1000, 5000, 10000, 50000, 100000, 300000, 600000),\n      title = \"Total Trips\",\n      id = \"grid_id\",\n      showNA = FALSE,\n      alpha = 0.6,\n      popup.vars = c(\n        \"Total Trips: \" = \"sum_trips\"\n      ),\n      popup.format = list(\n        sum_trips = list(format = \"f\", digits = 0)\n      )\n    ) +\n    tm_borders(col = \"grey40\", lwd = 0.7)\n  }"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#analysis",
    "href": "Take-home_Ex1/Take-home_Ex1.html#analysis",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Analysis",
    "text": "Analysis"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekday-morning-peak",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekday-morning-peak",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekday morning peak",
    "text": "Weekday morning peak\n\nFilter data\nBelow chunk of code creates data set pv_wkday_6to9_202310 by filtering the data from the pv dataset for weekday morning peak between 6AM and 9AM, and computes the total passenger trips at origin for bus stop, utilizing the columns - YEAR_MONTH, DAY_TYPE, and ORIGIN_PT_CODE as grouping criteria.\n\npv_wkday_6to9_202310 &lt;- pv %&gt;%\n  group_by(YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE) %&gt;%\n  filter(YEAR_MONTH == \"2023-10\" & DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9) %&gt;%\n  summarise(ORIGIN_TOTAL_TRIPS = sum(TOTAL_TRIPS, na.rm = TRUE))\n\n`summarise()` has grouped output by 'YEAR_MONTH', 'DAY_TYPE'. You can override\nusing the `.groups` argument.\n\n\n\n\nPerforming relational join\nCall function joined_bs_pv to join Bus Stop (bs) with the attribute fields of Passenger Volume (pv) dataset for weekday morning peak.\n\nwkday_6to9_202310_sf &lt;- joined_bs_pv (bs, pv_wkday_6to9_202310)\n\n\n\nCreate hexagon grid\nCall function honeycomb_grid() to create hexagonal grid over weekday morning peak\n\nwkday_6to9_trips &lt;- honeycomb_grid(wkday_6to9_202310_sf) \n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\nPlot hexagon grid\nCall function plot_honeycomb_grid_with_trips() to plot interactive map for weekday morning peak.\n\nplot_honeycomb_grid_with_trips(wkday_6to9_trips) \n\ntmap mode set to interactive viewing\n\n\n\n\n\n\n\n\n\nAnalysis\nIn suburban areas like Woodlands/Yishun, Choa Chu Kang, and Jurong, it is quite common to observe significant passenger trip volumes in the morning rush, ranging from 100,000 to 300,000. In addition, the Punggol/Sengkang area also has substantial amounts of traffic ranging from 50,000 to 300,000 trips per day, which indicates that there is a substantial commuter population. Due to this, it is clear that commuters are present during rush hour during the morning, and thus there is a need to enhance transportation services and manage congestion in these areas."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekday-afternoon-peak",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekday-afternoon-peak",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekday afternoon peak",
    "text": "Weekday afternoon peak\n\nFilter data\nBelow chunk of code creates data set pv_wkday_5to8_202310 by filtering the data from the pv dataset for weekday afternoon peak between 5PM to 8PM, and computes the total passenger trips at origin for bus stop, utilizing the columns - YEAR_MONTH, DAY_TYPE, and ORIGIN_PT_CODE as grouping criteria.\n\npv_wkday_5to8_202310 &lt;- pv %&gt;%\n  group_by(YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE) %&gt;%\n  filter(YEAR_MONTH == \"2023-10\" & DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20) %&gt;%\n  summarise(ORIGIN_TOTAL_TRIPS = sum(TOTAL_TRIPS, na.rm = TRUE))\n\n`summarise()` has grouped output by 'YEAR_MONTH', 'DAY_TYPE'. You can override\nusing the `.groups` argument.\n\n\n\n\nPerforming relational join\nCall function joined_bs_pv to join Bus Stop (bs) with the attribute fields of Passenger Volume (pv) dataset for weekday afternoon peak.\n\nwkday_5to8_202310_sf &lt;- joined_bs_pv (bs, pv_wkday_5to8_202310)\n\n\n\nCreate hexagon grid\nCall function honeycomb_grid() to create hexagonal grid over weekday afternoon peak\n\nwkday_5to8_trips &lt;- honeycomb_grid(wkday_5to8_202310_sf) \n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\nPlot hexagon grid\nCall function plot_honeycomb_grid_with_trips() to plot interactive map for weekday afternoon peak.\n\nplot_honeycomb_grid_with_trips(wkday_5to8_trips)\n\ntmap mode set to interactive viewing\n\n\n\n\n\n\n\n\n\nAnalysis\nWhile trip volumes are lower compared to the morning peak, select residential areas still experience 50,000 to 300,000 trips, indicating the presence of evening commuters. Analyzing the reasons behind evening commuting, such as flexible work hours, can help optimize transit schedules and infrastructure."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-morning-peak",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-morning-peak",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekend/holiday morning peak",
    "text": "Weekend/holiday morning peak\n\nFilter data\nBelow chunk of code creates data set pv_wkend_11to2_202310 by filtering the data from the pv dataset for weekend/holiday morning peak between 11AM and 2PM, and computes the total passenger trips at origin for bus stop, utilizing the columns - YEAR_MONTH, DAY_TYPE, and ORIGIN_PT_CODE as grouping criteria.\n\npv_wkend_11to2_202310 &lt;- pv %&gt;%\n  group_by(YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE) %&gt;%\n  filter(YEAR_MONTH == \"2023-10\" & DAY_TYPE == \"WEEKENDS/HOLIDAY\" & TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14) %&gt;%\n  summarise(ORIGIN_TOTAL_TRIPS = sum(TOTAL_TRIPS, na.rm = TRUE))\n\n`summarise()` has grouped output by 'YEAR_MONTH', 'DAY_TYPE'. You can override\nusing the `.groups` argument.\n\n\n\n\nPerforming relational join\nCall function joined_bs_pv to join Bus Stop (bs) with the attribute fields of Passenger Volume (pv) dataset for weekend/holiday morning peak.\n\nwkend_11to2_202310_sf &lt;- joined_bs_pv (bs, pv_wkend_11to2_202310)\n\n\n\nCreate hexagon grid\nCall function honeycomb_grid() to create hexagonal grid over weekend/holiday morning peak.\n\nwkend_11to2_trips &lt;- honeycomb_grid(wkend_11to2_202310_sf) \n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\nPlot hexagon grid\nCall function plot_honeycomb_grid_with_trips() to plot interactive map for weekend/holiday morning peak.\n\nplot_honeycomb_grid_with_trips(wkend_11to2_trips) \n\ntmap mode set to interactive viewing\n\n\n\n\n\n\n\n\n\nAnalysis\nThere is a consistent number of trips generated during weekend mornings in residential areas, ranging from 5,000 to 50,000, which is a sign that residents and visitors are engaged in leisure activities or on family outings at this time. In order to meet the needs of a leisure-oriented crowd in these regions, it is imperative that recreational facilities and transit options be optimized."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-evening-peak",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-evening-peak",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekend/holiday evening peak",
    "text": "Weekend/holiday evening peak\n\nFilter data\nBelow chunk of code creates data set pv_wkend_4to7_202310 by filtering the data from the pv dataset for weekend/holiday evening peak between 4PM and 7PM, and computes the total passenger trips at origin for bus stop, utilizing the columns - YEAR_MONTH, DAY_TYPE, and ORIGIN_PT_CODE as grouping criteria.\n\npv_wkend_4to7_202310 &lt;- pv %&gt;%\n  group_by(YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE) %&gt;%\n  filter(YEAR_MONTH == \"2023-10\" & DAY_TYPE == \"WEEKENDS/HOLIDAY\" & TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19) %&gt;%\n  summarise(ORIGIN_TOTAL_TRIPS = sum(TOTAL_TRIPS, na.rm = TRUE))\n\n`summarise()` has grouped output by 'YEAR_MONTH', 'DAY_TYPE'. You can override\nusing the `.groups` argument.\n\n\n\n\nPerforming relational join\nCall function joined_bs_pv to join Bus Stop (bs) with the attribute fields of Passenger Volume (pv) dataset for weekday/holiday afternoon peak.\n\nwkend_4to7_202310_sf &lt;- joined_bs_pv (bs, pv_wkend_4to7_202310)\n\n\n\nCreate hexagon grid\nCall function honeycomb_grid() to create hexagonal grid over weekday/holiday afternoon peak\n\nwkend_4to7_trips &lt;- honeycomb_grid(wkend_4to7_202310_sf) \n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\nPlot hexagon grid\nCall function plot_honeycomb_grid_with_trips() to plot interactive map for weekday/holiday afternoon peak.\n\nplot_honeycomb_grid_with_trips(wkend_4to7_trips) \n\ntmap mode set to interactive viewing\n\n\n\n\n\n\n\n\n\nAnalysis\nDuring the evening peak on weekends and holidays, trip volumes between 5,000 and 50,000 indicate ongoing social or leisure activities in residential areas. It’s vital to have adequate parking and public transportation, especially in popular entertainment districts at night. When planning recreational facilities, it’s helpful to know what kind of activities and attractions draw visitors during these times."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#observation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#observation",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Observation",
    "text": "Observation\nPassenger trip patterns during both weekday morning and afternoon underscore the importance of commuter-centric transportation. In the morning peak, commuters are concentrated in suburban areas, so transportation services need to be improved. The afternoon peak indicates evening commuters, suggesting transit schedules be optimized to accommodate flexible work hours. In order to meet commuters’ diverse needs throughout the day, a well-adapted and efficient transportation system is crucial.\nWe can observe that for Weekend/Holiday mornings and evenings, trip volumes are more evenly distributed across residential areas, suggesting leisure activities or family outings. These patterns call for optimizing recreational facilities and transit options in these regions to cater to the weekend and holiday crowd.\nBy analyzing these spatial patterns, urban planners and policymakers can optimize transportation infrastructure, identify high demand areas for public transportation, and plan for congestion management during peak periods in a way that maximizes efficiency and efficiency. In addition, it provides valuable insights into commuter behavior, emphasizing the necessity to tailor transportation services within Singapore based on different time intervals and geographical areas."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekday-morning-peak-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekday-morning-peak-1",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekday morning peak",
    "text": "Weekday morning peak\n\nComputing adaptive distance weight matrix\n\nwm_ad &lt;- wkday_6to9_trips %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\nwm_ad\n\nSimple feature collection with 1492 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26193.43 xmax: 48720.12 ymax: 53184.55\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                              nb\n1      2, 4, 5, 8, 9, 12, 22, 23\n2      1, 4, 5, 8, 9, 12, 22, 23\n3    5, 6, 9, 10, 13, 14, 16, 17\n4     1, 2, 8, 9, 12, 22, 23, 38\n5    3, 6, 9, 10, 13, 16, 17, 24\n6    3, 5, 7, 10, 14, 17, 18, 25\n7  6, 11, 14, 15, 18, 19, 26, 32\n8     1, 2, 4, 9, 12, 16, 22, 23\n9   5, 8, 10, 12, 13, 16, 23, 24\n10    3, 5, 6, 9, 13, 14, 17, 24\n                                                       wt grid_id sum_trips\n1  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34       103\n2  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65        52\n3  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99        78\n4  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     127       185\n5  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     129      1116\n6  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     130        53\n7  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     131        60\n8  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     159        64\n9  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     160       251\n10 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     161      1034\n                         geometry\n1  POLYGON ((3970.122 27925.48...\n2  POLYGON ((4220.122 28358.49...\n3  POLYGON ((4470.122 30523.55...\n4  POLYGON ((4720.122 28358.49...\n5  POLYGON ((4720.122 30090.54...\n6  POLYGON ((4720.122 30956.57...\n7  POLYGON ((4720.122 31822.59...\n8  POLYGON ((4970.122 28791.5,...\n9  POLYGON ((4970.122 29657.53...\n10 POLYGON ((4970.122 30523.55...\n\n\n\n\nComputing Global Moran’ I\nIn the code chunk below, global_moran() function is used to compute the Moran’s I value. Different from spdep package, the output is a tibble data.frame.\n\nmoranI &lt;- global_moran(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.2\n $ K: num 43.5\n\n\nMoran’s I value (0.2) shows that areas with similar passenger trips are slightly more likely to be close to each other than by random chance.\n\n\nPerforming Global Moran’sI test\n\nglobal_moran_test(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 16.376, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1995910649     -0.0006706908      0.0001495491 \n\n\n\n\nPerforming Global Moran’I permutation test\nMonte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nUse set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nglobal_moran_perm(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19959, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of passenger trips at hexagon level by using local_moran() of sfdep package.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    sum_trips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nPlot both local Moran’s I and p-value maps next to each other for effective comparison.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view() +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising LISA map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekday-afternoon-peak-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekday-afternoon-peak-1",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekday afternoon peak",
    "text": "Weekday afternoon peak\n\nComputing adaptive distance weight matrix\n\nwm_ad &lt;- wkday_5to8_trips %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\nwm_ad\n\nSimple feature collection with 1493 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26193.43 xmax: 48720.12 ymax: 53184.55\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                              nb\n1      2, 4, 5, 8, 9, 12, 22, 23\n2      1, 4, 5, 8, 9, 12, 22, 23\n3    5, 6, 9, 10, 13, 14, 16, 17\n4     1, 2, 8, 9, 12, 22, 23, 38\n5    3, 6, 9, 10, 13, 16, 17, 24\n6    3, 5, 7, 10, 14, 17, 18, 25\n7  6, 11, 14, 15, 18, 19, 26, 32\n8     1, 2, 4, 9, 12, 16, 22, 23\n9   5, 8, 10, 12, 13, 16, 23, 24\n10    3, 5, 6, 9, 13, 14, 17, 24\n                                                       wt grid_id sum_trips\n1  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34       390\n2  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65       114\n3  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99       291\n4  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     127      1905\n5  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     129      2899\n6  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     130       241\n7  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     131       368\n8  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     159       296\n9  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     160       297\n10 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     161      2472\n                         geometry\n1  POLYGON ((3970.122 27925.48...\n2  POLYGON ((4220.122 28358.49...\n3  POLYGON ((4470.122 30523.55...\n4  POLYGON ((4720.122 28358.49...\n5  POLYGON ((4720.122 30090.54...\n6  POLYGON ((4720.122 30956.57...\n7  POLYGON ((4720.122 31822.59...\n8  POLYGON ((4970.122 28791.5,...\n9  POLYGON ((4970.122 29657.53...\n10 POLYGON ((4970.122 30523.55...\n\n\n\n\nComputing Global Moran’ I\nIn the code chunk below, global_moran() function is used to compute the Moran’s I value. Different from spdep package, the output is a tibble data.frame.\n\nmoranI &lt;- global_moran(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.0559\n $ K: num 88\n\n\nMoran’s I value (0.0559) shows that areas with similar passenger trips are slightly more likely to be close to each other than by random chance. The chance is even higher compared to the weekday morning peak based on both Moran’s I value generated.\n\n\nPerforming Global Moran’sI test\n\nglobal_moran_test(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.698, p-value = 1.314e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0558807460     -0.0006702413      0.0001448974 \n\n\n\n\nPerforming Global Moran’I permutation test\nMonte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nUse set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nglobal_moran_perm(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.055881, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of passenger trips at hexagon level by using local_moran() of sfdep package.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    sum_trips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nPlot both local Moran’s I and p-value maps next to each other for effective comparison.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view() +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising LISA map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-morning-peak-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-morning-peak-1",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekend/holiday morning peak",
    "text": "Weekend/holiday morning peak\n\nComputing adaptive distance weight matrix\n\nwm_ad &lt;- wkend_11to2_trips %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\nwm_ad\n\nSimple feature collection with 1502 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3927.939 ymin: 26193.43 xmax: 48677.94 ymax: 53184.55\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                                nb\n3       2, 4, 5, 9, 10, 13, 23, 24\n3.1     1, 4, 5, 9, 10, 13, 23, 24\n37    6, 7, 10, 11, 14, 15, 17, 18\n65      1, 2, 5, 9, 10, 13, 23, 24\n65.1    1, 2, 4, 9, 10, 13, 23, 24\n67    3, 7, 10, 11, 14, 17, 18, 25\n68     3, 6, 8, 11, 15, 18, 19, 26\n69   7, 12, 15, 16, 19, 20, 27, 33\n97      1, 2, 4, 5, 10, 13, 23, 24\n98    6, 9, 11, 13, 14, 17, 24, 25\n                                                         wt grid_id sum_trips\n3    0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125       3        26\n3.1  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125       3       213\n37   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      37        52\n65   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65        26\n65.1 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65       213\n67   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      67        88\n68   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      68        76\n69   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      69        45\n97   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      97        21\n98   0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      98       406\n                           geometry\n3    POLYGON ((4177.939 28358.49...\n3.1  POLYGON ((4177.939 28358.49...\n37   POLYGON ((4427.939 30523.55...\n65   POLYGON ((4677.939 28358.49...\n65.1 POLYGON ((4677.939 28358.49...\n67   POLYGON ((4677.939 30090.54...\n68   POLYGON ((4677.939 30956.57...\n69   POLYGON ((4677.939 31822.59...\n97   POLYGON ((4927.939 28791.5,...\n98   POLYGON ((4927.939 29657.53...\n\n\n\n\nComputing Global Moran’ I\nIn the code chunk below, global_moran() function is used to compute the Moran’s I value. Different from spdep package, the output is a tibble data.frame.\n\nmoranI &lt;- global_moran(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.162\n $ K: num 52.9\n\n\nMoran’s I value (0.162) shows that areas with similar passenger trips are slightly more likely to be close to each other than by random chance.\n\n\nPerforming Global Moran’sI test\n\nglobal_moran_test(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 13.391, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1619465470     -0.0006662225      0.0001474728 \n\n\n\n\nPerforming Global Moran’I permutation test\nMonte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nUse set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nglobal_moran_perm(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.16195, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of passenger trips at hexagon level by using local_moran() of sfdep package.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    sum_trips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nPlot both local Moran’s I and p-value maps next to each other for effective comparison.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view() +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising LISA map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-evening-peak-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#weekendholiday-evening-peak-1",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Weekend/holiday evening peak",
    "text": "Weekend/holiday evening peak\n\nComputing adaptive distance weight matrix\n\nwm_ad &lt;- wkend_4to7_trips %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\nwm_ad\n\nSimple feature collection with 1490 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26193.43 xmax: 48720.12 ymax: 53184.55\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                              nb\n1      2, 4, 5, 8, 9, 12, 22, 23\n2      1, 4, 5, 8, 9, 12, 22, 23\n3    5, 6, 9, 10, 13, 14, 16, 17\n4     1, 2, 8, 9, 12, 22, 23, 38\n5    3, 6, 9, 10, 13, 16, 17, 24\n6    3, 5, 7, 10, 14, 17, 18, 25\n7  6, 11, 14, 15, 18, 19, 26, 32\n8     1, 2, 4, 9, 12, 16, 22, 23\n9   5, 8, 10, 12, 13, 16, 23, 24\n10    3, 5, 6, 9, 13, 14, 17, 24\n                                                       wt grid_id sum_trips\n1  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      34        56\n2  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      65        14\n3  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125      99       100\n4  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     127       346\n5  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     129       634\n6  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     130        55\n7  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     131        49\n8  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     159        53\n9  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     160       132\n10 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125     161      1030\n                         geometry\n1  POLYGON ((3970.122 27925.48...\n2  POLYGON ((4220.122 28358.49...\n3  POLYGON ((4470.122 30523.55...\n4  POLYGON ((4720.122 28358.49...\n5  POLYGON ((4720.122 30090.54...\n6  POLYGON ((4720.122 30956.57...\n7  POLYGON ((4720.122 31822.59...\n8  POLYGON ((4970.122 28791.5,...\n9  POLYGON ((4970.122 29657.53...\n10 POLYGON ((4970.122 30523.55...\n\n\n\n\nComputing Global Moran’ I\nIn the code chunk below, global_moran() function is used to compute the Moran’s I value. Different from spdep package, the output is a tibble data.frame.\n\nmoranI &lt;- global_moran(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.0975\n $ K: num 71.8\n\n\nMoran’s I value (0.0975) shows that areas with similar passenger trips are slightly more likely to be close to each other than by random chance. The chance is even higher compared to the weekend/holiday morning peak based on both Moran’s I value generated.\n\n\nPerforming Global Moran’sI test\n\nglobal_moran_test(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 8.1, p-value = 2.748e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.0974587816     -0.0006715917      0.0001467698 \n\n\n\n\nPerforming Global Moran’I permutation test\nMonte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm()\nUse set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nglobal_moran_perm(wm_ad$sum_trips,\n                       wm_ad$nb,\n                       wm_ad$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.097459, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe report above show that the p-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of passenger trips at hexagon level by using local_moran() of sfdep package.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    sum_trips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nPlot both local Moran’s I and p-value maps next to each other for effective comparison.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view() +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising LISA map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#observation-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#observation-1",
    "title": "Take-home Exercise 1 - Geospatial Analytics for Public Good",
    "section": "Observation",
    "text": "Observation\nThe Local Indicators of Spatial Association (LISA) highlight active areas, particularly those classified as high-high regions, where many people travel, and the surrounding areas are as busy. In these high-activity zones, large crowds gather for work-related purposes or daily activities at key destinations, such as shopping centers or office complexes.\nThis analysis illuminates passenger movement patterns, showing that they are not random, but rather concentrated at specific locations. The discovery of these concentrated areas, or hot spots, holds immense value for urban planners and transportation authorities. It provides an analytical tool to grasp and evaluate the demand for transportation services. The government and planners can make informed transportation planning decisions by identifying areas with high passenger traffic. In addition to tailoring transportation services to meet demand, optimizing routes, and allocating infrastructure resources efficiently, such planning also improves urban mobility and accessibility."
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex5/In-class_Ex5.html",
    "title": "In-class_Ex5",
    "section": "",
    "text": "# eval = FALSE\ndevtools::install_github(\"LukeCe/spflow\")\n\nSkipping install of 'spflow' from a github remote, the SHA1 (df913677) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nNext, will load spflow and other R packages into R environment\n\npacman::p_load(tmap, sf, spdep, sp, Matrix, spflow, reshape2, knitr, tidyverse)\n\n\nData Preparation\nBefore we can calibrate Spatial Econometic Interaction Model by using spflow package, there data sets are required. They are\n\na spatial weights,\na tibble data.frame consists of the origins, destinations, flows and distances between the origns and destinations.\na tibble data.frame consists of the explanatory variables.\n\n\n\nBuilding the geographic area\nFor the purpose of this study, URA Master Planning 2019 Planning Subzone GIS data wil be used.\nIn this code chunk below, MPSZ-2019 shape file will be import into R environment as a sf tibble data.frame called mpsz\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n               layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\zhphyo\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `D:\\zhphyo\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nmpsz$BUSTOP_COUNT &lt;- length(st_intersects(mpsz, busstop))\n\n\nmpsz_busstop &lt;- mpsz %&gt;%\n  filter(BUSTOP_COUNT &gt;0)\nmpsz_busstop\n\nSimple feature collection with 332 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry BUSTOP_COUNT\n1        CR MULTIPOLYGON (((33222.98 29...          332\n2        CR MULTIPOLYGON (((28481.45 30...          332\n3        CR MULTIPOLYGON (((28087.34 30...          332\n4        WR MULTIPOLYGON (((14557.7 304...          332\n5        CR MULTIPOLYGON (((29542.53 31...          332\n6        CR MULTIPOLYGON (((35279.55 30...          332\n7        WR MULTIPOLYGON (((15772.59 21...          332\n8        WR MULTIPOLYGON (((19843.41 21...          332\n9        CR MULTIPOLYGON (((30870.53 22...          332\n10       CR MULTIPOLYGON (((26879.04 26...          332\n\n\n\ncentroids &lt;- suppressWarnings({\n  st_point_on_surface(st_geometry(mpsz_busstop))\n})\n\n\nmpsz_nb &lt;- list(\n  \"by_contiguity\" = poly2nb(mpsz_busstop),\n  \"by_distance\" = dnearneigh(centroids,\n                             d1 = 0, d2 = 5000),\n  \"by_knn\" = knn2nb(knearneigh(centroids, 3))\n)\n\n\nmpsz_nb\n\n$by_contiguity\nNeighbour list object:\nNumber of regions: 332 \nNumber of nonzero links: 2002 \nPercentage nonzero weights: 1.816301 \nAverage number of links: 6.03012 \n5 regions with no links:\n7 8 9 304 317\n\n$by_distance\nNeighbour list object:\nNumber of regions: 332 \nNumber of nonzero links: 16498 \nPercentage nonzero weights: 14.9677 \nAverage number of links: 49.69277 \n5 regions with no links:\n7 8 159 304 332\n\n$by_knn\nNeighbour list object:\nNumber of regions: 332 \nNumber of nonzero links: 996 \nPercentage nonzero weights: 0.9036145 \nAverage number of links: 3 \nNon-symmetric neighbours list\n\n\n\n# eval = FALSE\nwrite_rds(mpsz_nb, \"data/rds/mpsz_nb.rds\")\n\n\nod_data &lt;- read_rds(\"data/rds/od_data.rds\")\n\nLet us retrieve by using the code chunk below\n\nmpsz_nb &lt;- read_rds(\"data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"data/rds/mpsz_var.rds\")\n\n\nCreating spflow_network-class objects\nspflow_network-class is an S4 class that contains all the ifnormation on a spatial network which composed by a set of nodes that are linked by some neighbour realtion. It can be created by using spflow_network() of spflow\nFor our model, we choose the continguity based neighbourhood structure\n\n#mpsz_net &lt;-spflow_network(\n#  id_net = \"sg\",\n#  node_neighborhood = \n#    nb2mat(mpsz_nb$by_contiguity),\n#  node_data = mpsz_var,\n#  node_key_column = \"SZ_CODE\")\n#mpsz_net\n\n\n#mpsz_net_pairs &lt;- spflow_network_pair(\n#  id_orig_net=\"sg\",\n#  id_dest_net=\"sg\",\n#  pair_data=mpsz_flow,\n#  orign_key_column = \"ORIGIN_SZ\",\n#  dest_key_column = \"DESTIN_SZ\")\n#mpsz_net_pairs\n\n\n#mpsz_multi_net &lt;- spflow_network_multi(mpsz_net, mpsz_net_pairs)\n\n#mpsz_multi_net\n\n\n# cor_formula &lt;- log(1 + TRIPS) ~\n# BUSSTOP_COUNT + \n# AGE7_12 + \n# AGE13_24 + \n# AGE25_64 + \n# SCHOOL_COUNT + \n# BUSINESS_COUNT + \n# RETAILS_COUNT +\n# FINSERV_COUNT + \n# P_log(DISTANCE + 1))\n\n#cor_mat &lt;- pair_cor(\n#  mpsz_multi_net,\n#  spflow_formula = cor_formula,\n#  add_lags_x = FALSE\n#)\n\n#colnames(cor_mat) &lt;- paste0(\n#  substr(\n#    colnames(cor_mat),1,3), \"...\")\n\n#cor_image(cor_mat)\n\n\n\n\nThe base model\nExplanatory variables use as characteristics of the origins :\n\n# base_mode &lt;- spflow(\n#  spflow_formula = log(1 + TRIPS)~\n#   0_(BUSSTOP_COUNT +\n#       AGE25_64) +\n#   D_(SCHOOL_COUNT + \n#   BUSINESS_COUNT + \n#   RETAILS_COUNT + \n#   FINSERV_COUNT) +\n#   P_(log(DISTANCE + 1)),\n# spflow_networks = mpsz_multi_net)\n#\n# base_model\n\n\n#old_par &lt;- par(mfrow = c(1,3),\n#               mar = c(2,2,2,2))\n#  spflow_moran_plots((base_model))\n\n\n#corr_residual &lt;- pair_cor(base_model)\n#colnames(corr_residual) &lt;- substr(colnames(corr_residual),1,3)\n#cor_image(corr_residual)\n\n\n#spflow_formula &lt;- log(1+TRIPS)~\n#  spflow_formula = log(1 + TRIPS)~\n#   0_(BUSSTOP_COUNT +\n#       AGE25_64) +\n#   D_(SCHOOL_COUNT + \n#   BUSINESS_COUNT + \n#   RETAILS_COUNT + \n#   FINSERV_COUNT) +\n#   P_(log(DISTANCE + 1))\n  \n#model_control &lt;- spflow_control(\n#  estimation_method = \"mle\",\n#  model = \"model_1\"\n#)\n\n#mle_model &lt;- spflow(\n#  spflow_formula,\n#  spflow_networks = mpsz_multi_net,\n#  estimation_control = model_control)\n\n#mle_model1"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/FinServ.html",
    "href": "In-class_Ex5/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/entertn.html",
    "href": "In-class_Ex5/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex4/In-class_Ex4.html",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "performing geocoding using data downloaded from dta.gov.sg\ncalibrating geographically weighted poisson regression"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html#overview",
    "href": "In-class_Ex4/In-class_Ex4.html#overview",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "performing geocoding using data downloaded from dta.gov.sg\ncalibrating geographically weighted poisson regression"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html#getting-started",
    "href": "In-class_Ex4/In-class_Ex4.html#getting-started",
    "title": "In Class Exercise 4",
    "section": "Getting started",
    "text": "Getting started\n\npacman::p_load(tidyverse,sf, httr, tmap, performance, ggpubr)\n\nLastly, the found data table will joined in the initial csv data table by using a unique identifier (i.e. POSTAL) common to both data tables. The output data table will be save as an csv file called found.\n\nurl &lt;- 'https://www.onemap.gov.sg/api/common/elastic/search'\n\n\ncsv &lt;- read_csv(\"data/aspatial/Generalinformationofschools.csv\")\n\nRows: 346 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (31): school_name, url_address, address, postal_code, telephone_no, tele...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npostcodes &lt;- csv$`postal_code`\n\n\nfound &lt;- data.frame()\nnot_founds &lt;- data.frame()\n\n\nfor (postcode in postcodes) {\n  query &lt;- list(`searchVal` = postcode, `returnGeom` ='Y', `getAddrDetails`='Y', `pageNum` = '1')\n  res &lt;- GET(url, query=query)\n  \n  if((content(res)$found) != 0) {\n    found &lt;- rbind(found, data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\nThe code chunk below will be used to combine both found and not_found data.frames into a single tibble data.frame called merged. At the same time, we will merged and not_found tibble data.frames into csv file format for subsequent used.\n\nmerged = merge(csv, found, by.x='postal_code', by.y = 'results.POSTAL', all = TRUE)\nwrite.csv(merged, file=\"data/aspatial/schools.csv\")\nwrite.csv(not_found, file=\"data/aspatial/not_found.csv\")"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html#converting-an-aspatial-data-into-a-simple-feature-tibble-data.frame",
    "href": "In-class_Ex4/In-class_Ex4.html#converting-an-aspatial-data-into-a-simple-feature-tibble-data.frame",
    "title": "In Class Exercise 4",
    "section": "Converting an aspatial data into a simple feature tibble data.frame",
    "text": "Converting an aspatial data into a simple feature tibble data.frame\n\nimporting and tidying schools data\nin this sub-section, you will import schools.csv into R environment and at the same time tidying the data by selecting only the necessary fields as well as rename some fields.\n\nschools &lt;- read_csv(\"data/aspatial/schools.csv\")\n\nNew names:\nRows: 350 Columns: 41\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(36): postal_code, school_name, url_address, address, telephone_no, tele... dbl\n(5): ...1, results.X, results.Y, results.LATITUDE, results.LONGITUDE\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\n\n  schools &lt;- schools %&gt;%\n  rename(latitude=results.LATITUDE, longitude=results.LONGITUDE)\n\n\nschools &lt;- schools %&gt;%\n  select(postal_code, school_name, latitude, longitude)\n\n\n\nConverting an aspatial data into sf tibble data.frame\nNext, you will convert the asptial data into a simple feature tibble data.frame called schools_sf\nrefer to st_as_sf() of sf package.\n\nschools &lt;- schools[!is.na(schools$longitude) & !is.na(schools$latitude), ]\n\nschools_sf &lt;- st_as_sf(schools,\n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;% #Use WGS84\n  st_transform(crs = 3414) #Code in WGS84 -- change to geometry point\n\n\n\nPlotting a point simple feature layer\nTo ensure that schools sf tibble data.frame has been projected and converted correctly, you can plot the schools point data for visual inspection.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(schools_sf) + \n  tm_dots() + \ntm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\") %&gt;%\nst_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\zhphyo\\ISSS624\\In-class_Ex4\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz$'SCHOOL_COUNT' &lt;- lengths(\n  st_intersects(\n    mpsz, schools_sf))\n\n\nsummary(mpsz$'SCHOOL_COUNT')\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00    1.08    2.00   12.00 \n\n\n\nbusiness_sf = st_read(dsn = \"data/geospatial\", \n                  layer = \"Business\") %&gt;%\nst_transform(crs = 3414)\n\nReading layer `Business' from data source \n  `D:\\zhphyo\\ISSS624\\In-class_Ex4\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() + \ntm_shape(business_sf) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid (after reprojection). See sf::st_is_valid\n\n\n\n\n\n\n\n\nflow_data &lt;- read_rds(\"data/rds/flow_data_tidy.rds\")\n\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 13\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ MORNING_PEAK    &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT    &lt;dbl&gt; 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ RETAIL_COUNT    &lt;dbl&gt; 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        &lt;LINESTRING [m]&gt; LINESTRING (29501.77 39419...., LINESTRING …\n\n\nNotice that this sf tibble data.frame includes 2 additional fields namely SCHOOL_COUNT and RETAIL_COUNT. Both of them will be used as attractiveness varibales when calibrating origin constrainted SIM\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,\n  0, flow_data$MORNING_PEAK)\n\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,\n  0.000001,1)\n\ninter_zonal_flow &lt;- flow_data %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\ninter_zonal_flow &lt;- inter_zonal_flow %&gt;%\n  rename(TRIPS = MORNING_PEAK,\n         DIST = dist)\n\n\n\nOrigin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the code chunk below.\nFor origin constraint and destination constraint, no longer need intersects.\n\norcSIM_Poisson &lt;- glm(formula = TRIPS ~\n                        ORIGIN_SZ + \n                        log(SCHOOL_COUNT) + #reflect attactiveness factor\n                        log(RETAIL_COUNT) + #try to model\n                        log(DIST) -1, #remove away intersects \n                      family = poisson(link = \"log\"),\n                      data = inter_zonal_flow,\n                      na.action = na.exclude) #exclude na\n\n\noptions(max.print=10000)\nsummary(orcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(RETAIL_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                    Estimate Std. Error  z value Pr(&gt;|z|)    \nORIGIN_SZAMSZ01   19.8739840  0.0047627  4172.84   &lt;2e-16 ***\nORIGIN_SZAMSZ02   20.5902203  0.0042786  4812.33   &lt;2e-16 ***\nORIGIN_SZAMSZ03   20.2327026  0.0045531  4443.70   &lt;2e-16 ***\nORIGIN_SZAMSZ04   19.7744438  0.0049837  3967.79   &lt;2e-16 ***\nORIGIN_SZAMSZ05   19.6574529  0.0056396  3485.61   &lt;2e-16 ***\nORIGIN_SZAMSZ06   19.9659115  0.0048946  4079.16   &lt;2e-16 ***\nORIGIN_SZAMSZ07   18.6746164  0.0096316  1938.90   &lt;2e-16 ***\nORIGIN_SZAMSZ08   19.2701601  0.0090776  2122.82   &lt;2e-16 ***\nORIGIN_SZAMSZ09   19.9889467  0.0052858  3781.64   &lt;2e-16 ***\nORIGIN_SZAMSZ10   20.3422035  0.0045778  4443.62   &lt;2e-16 ***\nORIGIN_SZAMSZ11   18.3944113  0.0129212  1423.58   &lt;2e-16 ***\nORIGIN_SZAMSZ12   18.3484209  0.0109652  1673.33   &lt;2e-16 ***\nORIGIN_SZBDSZ01   20.9668587  0.0043388  4832.36   &lt;2e-16 ***\nORIGIN_SZBDSZ02   20.4059518  0.0050601  4032.75   &lt;2e-16 ***\nORIGIN_SZBDSZ03   20.6725514  0.0045276  4565.93   &lt;2e-16 ***\nORIGIN_SZBDSZ04   21.6703853  0.0038930  5566.44   &lt;2e-16 ***\nORIGIN_SZBDSZ05   20.7497445  0.0046085  4502.46   &lt;2e-16 ***\nORIGIN_SZBDSZ06   20.9119361  0.0046432  4503.77   &lt;2e-16 ***\nORIGIN_SZBDSZ07   18.9749815  0.0097896  1938.28   &lt;2e-16 ***\nORIGIN_SZBDSZ08   19.1933901  0.0091312  2101.95   &lt;2e-16 ***\nORIGIN_SZBKSZ01   19.5422606  0.0064732  3018.96   &lt;2e-16 ***\nORIGIN_SZBKSZ02   20.1748913  0.0050076  4028.89   &lt;2e-16 ***\nORIGIN_SZBKSZ03   20.3984624  0.0047226  4319.35   &lt;2e-16 ***\nORIGIN_SZBKSZ04   19.6182212  0.0059652  3288.76   &lt;2e-16 ***\nORIGIN_SZBKSZ05   19.6033818  0.0063181  3102.74   &lt;2e-16 ***\nORIGIN_SZBKSZ06   19.7145224  0.0056372  3497.20   &lt;2e-16 ***\nORIGIN_SZBKSZ07   20.4237448  0.0041912  4873.03   &lt;2e-16 ***\nORIGIN_SZBKSZ08   19.7992538  0.0050405  3928.02   &lt;2e-16 ***\nORIGIN_SZBKSZ09   19.7821586  0.0055558  3560.66   &lt;2e-16 ***\nORIGIN_SZBLSZ01   17.7977276  0.0149058  1194.01   &lt;2e-16 ***\nORIGIN_SZBLSZ02   17.4287491  0.0192364   906.03   &lt;2e-16 ***\nORIGIN_SZBLSZ03   16.5884288  0.0459848   360.74   &lt;2e-16 ***\nORIGIN_SZBLSZ04   17.7851626  0.0232823   763.89   &lt;2e-16 ***\nORIGIN_SZBMSZ01   20.0751840  0.0052887  3795.89   &lt;2e-16 ***\nORIGIN_SZBMSZ02   18.6956140  0.0066656  2804.80   &lt;2e-16 ***\nORIGIN_SZBMSZ03   19.3204425  0.0054755  3528.56   &lt;2e-16 ***\nORIGIN_SZBMSZ04   19.4724220  0.0049390  3942.59   &lt;2e-16 ***\nORIGIN_SZBMSZ05   16.9581801  0.0168804  1004.61   &lt;2e-16 ***\nORIGIN_SZBMSZ06   16.9898638  0.0181852   934.27   &lt;2e-16 ***\nORIGIN_SZBMSZ07   19.2868403  0.0056231  3429.91   &lt;2e-16 ***\nORIGIN_SZBMSZ08   19.1477543  0.0055918  3424.28   &lt;2e-16 ***\nORIGIN_SZBMSZ09   18.7564539  0.0086298  2173.46   &lt;2e-16 ***\nORIGIN_SZBMSZ10   18.3617854  0.0089250  2057.35   &lt;2e-16 ***\nORIGIN_SZBMSZ11   18.9167941  0.0063340  2986.54   &lt;2e-16 ***\nORIGIN_SZBMSZ12   18.7874661  0.0093024  2019.63   &lt;2e-16 ***\nORIGIN_SZBMSZ13   19.5654046  0.0057517  3401.70   &lt;2e-16 ***\nORIGIN_SZBMSZ14   19.0685619  0.0063346  3010.24   &lt;2e-16 ***\nORIGIN_SZBMSZ15   19.4403124  0.0058147  3343.30   &lt;2e-16 ***\nORIGIN_SZBMSZ16   18.4469203  0.0092638  1991.28   &lt;2e-16 ***\nORIGIN_SZBMSZ17   18.3430175  0.0157692  1163.22   &lt;2e-16 ***\nORIGIN_SZBPSZ01   20.1806714  0.0053660  3760.81   &lt;2e-16 ***\nORIGIN_SZBPSZ02   19.8116707  0.0061485  3222.19   &lt;2e-16 ***\nORIGIN_SZBPSZ03   19.8467602  0.0059769  3320.57   &lt;2e-16 ***\nORIGIN_SZBPSZ04   20.4613200  0.0048398  4227.72   &lt;2e-16 ***\nORIGIN_SZBPSZ05   20.5379711  0.0043769  4692.39   &lt;2e-16 ***\nORIGIN_SZBPSZ06   18.8948034  0.0093668  2017.21   &lt;2e-16 ***\nORIGIN_SZBPSZ07   19.4104568  0.0087961  2206.70   &lt;2e-16 ***\nORIGIN_SZBSSZ01   20.0139503  0.0056561  3538.45   &lt;2e-16 ***\nORIGIN_SZBSSZ02   20.2543885  0.0047198  4291.38   &lt;2e-16 ***\nORIGIN_SZBSSZ03   19.5428803  0.0052713  3707.41   &lt;2e-16 ***\nORIGIN_SZBTSZ01   20.0198045  0.0058541  3419.77   &lt;2e-16 ***\nORIGIN_SZBTSZ02   19.3618525  0.0081472  2376.51   &lt;2e-16 ***\nORIGIN_SZBTSZ03   19.5883853  0.0068935  2841.59   &lt;2e-16 ***\nORIGIN_SZBTSZ04   18.7720238  0.0103909  1806.58   &lt;2e-16 ***\nORIGIN_SZBTSZ05   18.8069026  0.0120628  1559.08   &lt;2e-16 ***\nORIGIN_SZBTSZ06   18.7068633  0.0094575  1978.00   &lt;2e-16 ***\nORIGIN_SZBTSZ07   17.6292257  0.0141551  1245.43   &lt;2e-16 ***\nORIGIN_SZBTSZ08   18.6989374  0.0109610  1705.94   &lt;2e-16 ***\nORIGIN_SZCBSZ01   18.2189868  0.0548317   332.27   &lt;2e-16 ***\nORIGIN_SZCCSZ01   18.9734563  0.0139450  1360.59   &lt;2e-16 ***\nORIGIN_SZCHSZ01   19.5955119  0.0121035  1619.00   &lt;2e-16 ***\nORIGIN_SZCHSZ02   19.3320960  0.0081620  2368.55   &lt;2e-16 ***\nORIGIN_SZCHSZ03   21.2164518  0.0063552  3338.43   &lt;2e-16 ***\nORIGIN_SZCKSZ01   20.1046845  0.0049333  4075.29   &lt;2e-16 ***\nORIGIN_SZCKSZ02   20.5371946  0.0050256  4086.53   &lt;2e-16 ***\nORIGIN_SZCKSZ03   20.7210560  0.0042184  4912.07   &lt;2e-16 ***\nORIGIN_SZCKSZ04   21.4013886  0.0042524  5032.80   &lt;2e-16 ***\nORIGIN_SZCKSZ05   20.9413146  0.0049434  4236.18   &lt;2e-16 ***\nORIGIN_SZCKSZ06   20.2557727  0.0071832  2819.88   &lt;2e-16 ***\nORIGIN_SZCLSZ01   19.3383703  0.0076634  2523.46   &lt;2e-16 ***\nORIGIN_SZCLSZ02   18.5226956  0.0135522  1366.77   &lt;2e-16 ***\nORIGIN_SZCLSZ03   19.0225512  0.0080145  2373.51   &lt;2e-16 ***\nORIGIN_SZCLSZ04   20.7981505  0.0042400  4905.22   &lt;2e-16 ***\nORIGIN_SZCLSZ05   18.3015625  0.0146815  1246.58   &lt;2e-16 ***\nORIGIN_SZCLSZ06   20.8207386  0.0039567  5262.09   &lt;2e-16 ***\nORIGIN_SZCLSZ07   19.6728958  0.0054199  3629.76   &lt;2e-16 ***\nORIGIN_SZCLSZ08   20.0851929  0.0056956  3526.43   &lt;2e-16 ***\nORIGIN_SZCLSZ09   18.5749589  0.0165415  1122.93   &lt;2e-16 ***\nORIGIN_SZDTSZ02   15.8276209  0.0833992   189.78   &lt;2e-16 ***\nORIGIN_SZDTSZ03   16.2512838  0.0737972   220.22   &lt;2e-16 ***\nORIGIN_SZDTSZ13   16.7744385  0.0312450   536.87   &lt;2e-16 ***\nORIGIN_SZGLSZ01   18.2368248  0.0096104  1897.62   &lt;2e-16 ***\nORIGIN_SZGLSZ02   19.8705255  0.0049014  4054.06   &lt;2e-16 ***\nORIGIN_SZGLSZ03   19.8249435  0.0053109  3732.85   &lt;2e-16 ***\nORIGIN_SZGLSZ04   20.7800335  0.0041261  5036.20   &lt;2e-16 ***\nORIGIN_SZGLSZ05   20.6040494  0.0043049  4786.23   &lt;2e-16 ***\nORIGIN_SZHGSZ01   20.0273475  0.0044824  4468.04   &lt;2e-16 ***\nORIGIN_SZHGSZ02   20.2480656  0.0044575  4542.47   &lt;2e-16 ***\nORIGIN_SZHGSZ03   20.0756442  0.0049003  4096.81   &lt;2e-16 ***\nORIGIN_SZHGSZ04   20.7577748  0.0040465  5129.84   &lt;2e-16 ***\nORIGIN_SZHGSZ05   20.9779992  0.0040123  5228.42   &lt;2e-16 ***\nORIGIN_SZHGSZ06   19.7403058  0.0054229  3640.20   &lt;2e-16 ***\nORIGIN_SZHGSZ07   20.1896268  0.0046051  4384.22   &lt;2e-16 ***\nORIGIN_SZHGSZ08   19.8646492  0.0052403  3790.72   &lt;2e-16 ***\nORIGIN_SZHGSZ09   18.3647736  0.0069196  2654.04   &lt;2e-16 ***\nORIGIN_SZHGSZ10   16.8720475  0.0421046   400.72   &lt;2e-16 ***\nORIGIN_SZJESZ01   20.2673794  0.0046723  4337.79   &lt;2e-16 ***\nORIGIN_SZJESZ02   20.0595982  0.0046503  4313.61   &lt;2e-16 ***\nORIGIN_SZJESZ03   19.9128778  0.0049848  3994.75   &lt;2e-16 ***\nORIGIN_SZJESZ04   18.5053667  0.0099227  1864.94   &lt;2e-16 ***\nORIGIN_SZJESZ05   17.8172930  0.0138840  1283.29   &lt;2e-16 ***\nORIGIN_SZJESZ06   20.0124157  0.0045009  4446.36   &lt;2e-16 ***\nORIGIN_SZJESZ07   18.1821423  0.0117267  1550.49   &lt;2e-16 ***\nORIGIN_SZJESZ08   18.8713046  0.0116456  1620.46   &lt;2e-16 ***\nORIGIN_SZJESZ09   20.5535527  0.0048456  4241.72   &lt;2e-16 ***\nORIGIN_SZJESZ10   18.4922322  0.0191243   966.95   &lt;2e-16 ***\nORIGIN_SZJESZ11   18.2891211  0.0197114   927.85   &lt;2e-16 ***\nORIGIN_SZJWSZ01   20.4912737  0.0063102  3247.35   &lt;2e-16 ***\nORIGIN_SZJWSZ02   20.8236694  0.0042249  4928.82   &lt;2e-16 ***\nORIGIN_SZJWSZ03   21.2587613  0.0039733  5350.40   &lt;2e-16 ***\nORIGIN_SZJWSZ04   20.3816464  0.0046199  4411.67   &lt;2e-16 ***\nORIGIN_SZJWSZ05   18.0607448  0.0128857  1401.61   &lt;2e-16 ***\nORIGIN_SZJWSZ06   18.7015202  0.0107614  1737.83   &lt;2e-16 ***\nORIGIN_SZJWSZ07   17.3991822  0.0277096   627.91   &lt;2e-16 ***\nORIGIN_SZJWSZ08   21.8044465  0.0037356  5836.95   &lt;2e-16 ***\nORIGIN_SZJWSZ09   21.5414930  0.0036033  5978.19   &lt;2e-16 ***\nORIGIN_SZKLSZ01   20.0307712  0.0047868  4184.59   &lt;2e-16 ***\nORIGIN_SZKLSZ02   19.0634769  0.0062318  3059.05   &lt;2e-16 ***\nORIGIN_SZKLSZ03   19.2685700  0.0057172  3370.25   &lt;2e-16 ***\nORIGIN_SZKLSZ04   17.7085067  0.0119809  1478.06   &lt;2e-16 ***\nORIGIN_SZKLSZ05   18.6384471  0.0107596  1732.26   &lt;2e-16 ***\nORIGIN_SZKLSZ06   13.7280296  0.1857160    73.92   &lt;2e-16 ***\nORIGIN_SZKLSZ07   18.6425146  0.0084952  2194.47   &lt;2e-16 ***\nORIGIN_SZKLSZ08   18.0928506  0.0101567  1781.37   &lt;2e-16 ***\nORIGIN_SZLKSZ01   17.8907138  0.0397083   450.55   &lt;2e-16 ***\nORIGIN_SZMDSZ01   18.7605188  0.0285455   657.22   &lt;2e-16 ***\nORIGIN_SZMDSZ02   19.1533927  0.0102815  1862.90   &lt;2e-16 ***\nORIGIN_SZMDSZ03   17.8404982  0.0169690  1051.36   &lt;2e-16 ***\nORIGIN_SZMPSZ01   19.0765941  0.0083937  2272.74   &lt;2e-16 ***\nORIGIN_SZMPSZ02   19.2162527  0.0068331  2812.24   &lt;2e-16 ***\nORIGIN_SZMPSZ03   19.9965344  0.0054569  3664.44   &lt;2e-16 ***\nORIGIN_SZMUSZ02   15.9130765  0.1037472   153.38   &lt;2e-16 ***\nORIGIN_SZNTSZ01   17.0840999  0.0352513   484.64   &lt;2e-16 ***\nORIGIN_SZNTSZ02   16.5792122  0.0233186   710.99   &lt;2e-16 ***\nORIGIN_SZNTSZ03   18.9506415  0.0075957  2494.93   &lt;2e-16 ***\nORIGIN_SZNTSZ05   15.8770261  0.0495825   320.21   &lt;2e-16 ***\nORIGIN_SZNTSZ06   15.3997415  0.0557029   276.46   &lt;2e-16 ***\nORIGIN_SZNVSZ01   20.2241694  0.0043487  4650.65   &lt;2e-16 ***\nORIGIN_SZNVSZ02   19.1897826  0.0065383  2934.97   &lt;2e-16 ***\nORIGIN_SZNVSZ03   18.8854268  0.0080459  2347.22   &lt;2e-16 ***\nORIGIN_SZNVSZ04   18.8940191  0.0090985  2076.61   &lt;2e-16 ***\nORIGIN_SZNVSZ05   17.6278585  0.0168107  1048.61   &lt;2e-16 ***\nORIGIN_SZPGSZ01   19.4825220  0.0122960  1584.46   &lt;2e-16 ***\nORIGIN_SZPGSZ02   19.4726761  0.0073116  2663.25   &lt;2e-16 ***\nORIGIN_SZPGSZ03   20.5515713  0.0045631  4503.86   &lt;2e-16 ***\nORIGIN_SZPGSZ04   21.0527131  0.0041500  5072.89   &lt;2e-16 ***\nORIGIN_SZPGSZ05   20.1436604  0.0057267  3517.48   &lt;2e-16 ***\nORIGIN_SZPLSZ01   19.1832002  0.0120006  1598.53   &lt;2e-16 ***\nORIGIN_SZPLSZ02   18.8752206  0.0149740  1260.53   &lt;2e-16 ***\nORIGIN_SZPLSZ03   18.1000818  0.0371769   486.86   &lt;2e-16 ***\nORIGIN_SZPLSZ04   17.1730559  0.0370280   463.79   &lt;2e-16 ***\nORIGIN_SZPLSZ05   17.9084439  0.0225031   795.82   &lt;2e-16 ***\nORIGIN_SZPNSZ01   21.0804425  0.0044829  4702.41   &lt;2e-16 ***\nORIGIN_SZPNSZ02   19.8822123  0.0111507  1783.05   &lt;2e-16 ***\nORIGIN_SZPNSZ03   17.9293289  0.0193571   926.24   &lt;2e-16 ***\nORIGIN_SZPNSZ04   17.1039594  0.0334954   510.64   &lt;2e-16 ***\nORIGIN_SZPNSZ05   18.2543864  0.0275554   662.46   &lt;2e-16 ***\nORIGIN_SZPRSZ01   19.8777935  0.0117586  1690.49   &lt;2e-16 ***\nORIGIN_SZPRSZ02   21.0751780  0.0044832  4700.88   &lt;2e-16 ***\nORIGIN_SZPRSZ03   20.6717019  0.0045577  4535.55   &lt;2e-16 ***\nORIGIN_SZPRSZ04   19.6365125  0.0074923  2620.90   &lt;2e-16 ***\nORIGIN_SZPRSZ05   21.3132151  0.0042119  5060.24   &lt;2e-16 ***\nORIGIN_SZPRSZ06   18.9314574  0.0117278  1614.24   &lt;2e-16 ***\nORIGIN_SZPRSZ07   17.2822918  0.0162430  1063.98   &lt;2e-16 ***\nORIGIN_SZPRSZ08   19.9267642  0.0062298  3198.62   &lt;2e-16 ***\nORIGIN_SZQTSZ01   19.7357175  0.0066359  2974.08   &lt;2e-16 ***\nORIGIN_SZQTSZ02   19.2082141  0.0061402  3128.26   &lt;2e-16 ***\nORIGIN_SZQTSZ03   19.7771883  0.0056220  3517.83   &lt;2e-16 ***\nORIGIN_SZQTSZ04   18.7114421  0.0072842  2568.76   &lt;2e-16 ***\nORIGIN_SZQTSZ05   19.3049324  0.0062401  3093.69   &lt;2e-16 ***\nORIGIN_SZQTSZ06   19.2643228  0.0065590  2937.09   &lt;2e-16 ***\nORIGIN_SZQTSZ07   18.5697347  0.0095373  1947.06   &lt;2e-16 ***\nORIGIN_SZQTSZ08   19.6147001  0.0061330  3198.21   &lt;2e-16 ***\nORIGIN_SZQTSZ09   19.2550793  0.0069947  2752.82   &lt;2e-16 ***\nORIGIN_SZQTSZ10   19.5801866  0.0064513  3035.07   &lt;2e-16 ***\nORIGIN_SZQTSZ11   17.7398366  0.0143648  1234.95   &lt;2e-16 ***\nORIGIN_SZQTSZ12   17.2420354  0.0186736   923.34   &lt;2e-16 ***\nORIGIN_SZQTSZ13   19.3857418  0.0078878  2457.69   &lt;2e-16 ***\nORIGIN_SZQTSZ14   18.1300753  0.0122096  1484.90   &lt;2e-16 ***\nORIGIN_SZQTSZ15   19.4222283  0.0120871  1606.86   &lt;2e-16 ***\nORIGIN_SZRCSZ01   18.1549045  0.0125108  1451.13   &lt;2e-16 ***\nORIGIN_SZRCSZ06   18.8836400  0.0082161  2298.38   &lt;2e-16 ***\nORIGIN_SZRVSZ01   16.7864438  0.0323796   518.43   &lt;2e-16 ***\nORIGIN_SZRVSZ02   16.4203244  0.0276836   593.14   &lt;2e-16 ***\nORIGIN_SZRVSZ03   16.6453738  0.0244992   679.42   &lt;2e-16 ***\nORIGIN_SZRVSZ04   15.9559213  0.0556344   286.80   &lt;2e-16 ***\nORIGIN_SZRVSZ05   17.0476331  0.0164122  1038.71   &lt;2e-16 ***\nORIGIN_SZSBSZ01   20.0417968  0.0062488  3207.29   &lt;2e-16 ***\nORIGIN_SZSBSZ02   19.1869565  0.0081051  2367.26   &lt;2e-16 ***\nORIGIN_SZSBSZ03   20.5769861  0.0045108  4561.70   &lt;2e-16 ***\nORIGIN_SZSBSZ04   20.5154199  0.0050548  4058.57   &lt;2e-16 ***\nORIGIN_SZSBSZ05   19.6250669  0.0065562  2993.35   &lt;2e-16 ***\nORIGIN_SZSBSZ06   18.8419757  0.0171135  1101.00   &lt;2e-16 ***\nORIGIN_SZSBSZ07   19.4897259  0.0124528  1565.09   &lt;2e-16 ***\nORIGIN_SZSBSZ08   18.7027917  0.0140545  1330.73   &lt;2e-16 ***\nORIGIN_SZSBSZ09   18.8893480  0.0088571  2132.67   &lt;2e-16 ***\nORIGIN_SZSESZ02   20.8962192  0.0041665  5015.34   &lt;2e-16 ***\nORIGIN_SZSESZ03   20.9452771  0.0039737  5270.94   &lt;2e-16 ***\nORIGIN_SZSESZ04   20.6576142  0.0046364  4455.55   &lt;2e-16 ***\nORIGIN_SZSESZ05   19.5170732  0.0058912  3312.92   &lt;2e-16 ***\nORIGIN_SZSESZ06   20.7595824  0.0045747  4537.89   &lt;2e-16 ***\nORIGIN_SZSESZ07   17.6888256  0.0195787   903.47   &lt;2e-16 ***\nORIGIN_SZSGSZ01   19.1359250  0.0085781  2230.79   &lt;2e-16 ***\nORIGIN_SZSGSZ02   18.5614369  0.0102037  1819.10   &lt;2e-16 ***\nORIGIN_SZSGSZ03   19.9933176  0.0050434  3964.23   &lt;2e-16 ***\nORIGIN_SZSGSZ04   20.2426871  0.0047211  4287.71   &lt;2e-16 ***\nORIGIN_SZSGSZ05   18.0114965  0.0107743  1671.70   &lt;2e-16 ***\nORIGIN_SZSGSZ06   20.2593194  0.0044538  4548.76   &lt;2e-16 ***\nORIGIN_SZSGSZ07   19.0763664  0.0062968  3029.54   &lt;2e-16 ***\nORIGIN_SZSKSZ01   19.9222451  0.0085136  2340.04   &lt;2e-16 ***\nORIGIN_SZSKSZ02   20.8633383  0.0055248  3776.33   &lt;2e-16 ***\nORIGIN_SZSKSZ03   19.6528148  0.0080534  2440.33   &lt;2e-16 ***\nORIGIN_SZSKSZ04   18.0754470  0.0275771   655.45   &lt;2e-16 ***\nORIGIN_SZSKSZ05   19.1192521  0.0155579  1228.91   &lt;2e-16 ***\nORIGIN_SZSLSZ01   17.1501034  0.0329384   520.67   &lt;2e-16 ***\nORIGIN_SZSLSZ04   19.5949774  0.0076753  2552.98   &lt;2e-16 ***\nORIGIN_SZSRSZ01   16.9761403  0.0162020  1047.78   &lt;2e-16 ***\nORIGIN_SZTHSZ01   17.9695687  0.0488559   367.81   &lt;2e-16 ***\nORIGIN_SZTHSZ03   18.5427522  0.0223617   829.22   &lt;2e-16 ***\nORIGIN_SZTHSZ04   17.4760374  0.0286247   610.52   &lt;2e-16 ***\nORIGIN_SZTHSZ06   17.8401186  0.0183322   973.16   &lt;2e-16 ***\nORIGIN_SZTMSZ01   20.3406361  0.0056607  3593.33   &lt;2e-16 ***\nORIGIN_SZTMSZ02   22.0307026  0.0037386  5892.85   &lt;2e-16 ***\nORIGIN_SZTMSZ03   21.3451920  0.0040606  5256.65   &lt;2e-16 ***\nORIGIN_SZTMSZ04   20.6611593  0.0049896  4140.87   &lt;2e-16 ***\nORIGIN_SZTMSZ05   19.3323133  0.0112868  1712.82   &lt;2e-16 ***\nORIGIN_SZTNSZ01   17.9513571  0.0128266  1399.54   &lt;2e-16 ***\nORIGIN_SZTNSZ02   18.0267387  0.0098372  1832.51   &lt;2e-16 ***\nORIGIN_SZTNSZ03   17.7253700  0.0134668  1316.23   &lt;2e-16 ***\nORIGIN_SZTNSZ04   19.4474075  0.0073760  2636.59   &lt;2e-16 ***\nORIGIN_SZTPSZ01   19.1078631  0.0065635  2911.25   &lt;2e-16 ***\nORIGIN_SZTPSZ02   20.2837634  0.0041411  4898.18   &lt;2e-16 ***\nORIGIN_SZTPSZ03   19.1838238  0.0059552  3221.37   &lt;2e-16 ***\nORIGIN_SZTPSZ04   19.1805388  0.0054778  3501.53   &lt;2e-16 ***\nORIGIN_SZTPSZ05   19.3718076  0.0058610  3305.18   &lt;2e-16 ***\nORIGIN_SZTPSZ06   19.6605723  0.0054968  3576.70   &lt;2e-16 ***\nORIGIN_SZTPSZ07   19.4499807  0.0060491  3215.36   &lt;2e-16 ***\nORIGIN_SZTPSZ08   18.7996538  0.0095757  1963.28   &lt;2e-16 ***\nORIGIN_SZTPSZ09   19.0025110  0.0067068  2833.31   &lt;2e-16 ***\nORIGIN_SZTPSZ10   18.8899657  0.0076094  2482.46   &lt;2e-16 ***\nORIGIN_SZTPSZ11   19.6277780  0.0053983  3635.93   &lt;2e-16 ***\nORIGIN_SZTPSZ12   19.1471104  0.0065742  2912.45   &lt;2e-16 ***\nORIGIN_SZTSSZ01   17.4901113  0.0478954   365.17   &lt;2e-16 ***\nORIGIN_SZTSSZ02   20.4997466  0.0081850  2504.55   &lt;2e-16 ***\nORIGIN_SZTSSZ03   20.1076553  0.0084728  2373.19   &lt;2e-16 ***\nORIGIN_SZTSSZ04   20.0646610  0.0089008  2254.26   &lt;2e-16 ***\nORIGIN_SZTSSZ05   19.3962067  0.0151392  1281.19   &lt;2e-16 ***\nORIGIN_SZTSSZ06   20.9235857  0.0178278  1173.65   &lt;2e-16 ***\nORIGIN_SZWCSZ01   20.8411600  0.0086519  2408.86   &lt;2e-16 ***\nORIGIN_SZWCSZ02   17.7355404  0.0328889   539.26   &lt;2e-16 ***\nORIGIN_SZWCSZ03   14.9380886  0.1240699   120.40   &lt;2e-16 ***\nORIGIN_SZWDSZ01   21.1969012  0.0037830  5603.23   &lt;2e-16 ***\nORIGIN_SZWDSZ02   20.5930001  0.0044572  4620.13   &lt;2e-16 ***\nORIGIN_SZWDSZ03   21.2521867  0.0041672  5099.85   &lt;2e-16 ***\nORIGIN_SZWDSZ04   21.0702687  0.0048648  4331.13   &lt;2e-16 ***\nORIGIN_SZWDSZ05   20.4008998  0.0051801  3938.35   &lt;2e-16 ***\nORIGIN_SZWDSZ06   20.6669176  0.0049280  4193.78   &lt;2e-16 ***\nORIGIN_SZWDSZ07   19.0500370  0.0082729  2302.71   &lt;2e-16 ***\nORIGIN_SZWDSZ08   19.0816252  0.0080667  2365.49   &lt;2e-16 ***\nORIGIN_SZWDSZ09   21.4182096  0.0040391  5302.73   &lt;2e-16 ***\nORIGIN_SZYSSZ01   19.5355157  0.0057540  3395.14   &lt;2e-16 ***\nORIGIN_SZYSSZ02   20.8737972  0.0048278  4323.64   &lt;2e-16 ***\nORIGIN_SZYSSZ03   21.6614437  0.0040011  5413.81   &lt;2e-16 ***\nORIGIN_SZYSSZ04   20.9305289  0.0043595  4801.10   &lt;2e-16 ***\nORIGIN_SZYSSZ05   20.1727678  0.0058466  3450.34   &lt;2e-16 ***\nORIGIN_SZYSSZ06   19.1481507  0.0116724  1640.47   &lt;2e-16 ***\nORIGIN_SZYSSZ07   18.7919074  0.0141636  1326.78   &lt;2e-16 ***\nORIGIN_SZYSSZ08   19.9733515  0.0061229  3262.07   &lt;2e-16 ***\nORIGIN_SZYSSZ09   20.9366181  0.0040347  5189.15   &lt;2e-16 ***\nlog(SCHOOL_COUNT)  0.4755516  0.0004701  1011.55   &lt;2e-16 ***\nlog(RETAIL_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 ***\nlog(DIST)         -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\nNote\nlog(SCHOOL_COUNT)  0.4755516  0.0004701  1011.55   &lt;2e-16 *** \nlog(RETAIL_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 *** \nlog(DIST)         -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n\nCheck log(DIST) – must be always negative, inverse relationship.\n\n\n\nAttractiveness log(SCHOOL_COUNT) - positive, people will want to stay near school. Also possible it is negative (example for crime rate)\nP-Value - should be smaller than 0.05, accept as part of the conceptual model. If larger, this attractiveness is not statistically significant.\n\n\n\nGoodness-of-fit (R Squared)\n\nCalcRsquared &lt;- function(observed, estimated) {\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\nwe can examine how the constraints hold for the destination this time.\n\nCalcRsquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\n\nperformance_rmse(orcSIM_Poisson,\n                 normalized = FALSE)\n\n[1] 2613.236\n\n\n\n\nDoubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\nThe general formula of Doubly Constrained Spatial Interaction Model\n\ndbcSIM_Poisson &lt;- glm(formula = TRIPS ~\n                        ORIGIN_SZ + \n                        DESTIN_SZ +\n                        log(DIST),\n                      family = poisson(link = \"log\"),\n                      data = inter_zonal_flow,\n                      na.action = na.exclude)\ndbcSIM_Poisson\n\n\nCall:  glm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n    (Intercept)  ORIGIN_SZAMSZ02  ORIGIN_SZAMSZ03  ORIGIN_SZAMSZ04  \n     21.8312374        0.5263502        0.3139982       -0.2146257  \nORIGIN_SZAMSZ05  ORIGIN_SZAMSZ06  ORIGIN_SZAMSZ07  ORIGIN_SZAMSZ08  \n     -0.1890446        0.1539201       -0.9826565       -0.4488417  \nORIGIN_SZAMSZ09  ORIGIN_SZAMSZ10  ORIGIN_SZAMSZ11  ORIGIN_SZAMSZ12  \n      0.0713474        0.4313742       -1.4712226       -1.7250733  \nORIGIN_SZBDSZ01  ORIGIN_SZBDSZ02  ORIGIN_SZBDSZ03  ORIGIN_SZBDSZ04  \n      0.8810576        0.1100240        0.3606166        1.4624347  \nORIGIN_SZBDSZ05  ORIGIN_SZBDSZ06  ORIGIN_SZBDSZ07  ORIGIN_SZBDSZ08  \n      0.6207557        0.6712973       -1.2338669       -1.0444562  \nORIGIN_SZBKSZ01  ORIGIN_SZBKSZ02  ORIGIN_SZBKSZ03  ORIGIN_SZBKSZ04  \n     -0.2838426        0.5550522        0.7396640       -0.2242451  \nORIGIN_SZBKSZ05  ORIGIN_SZBKSZ06  ORIGIN_SZBKSZ07  ORIGIN_SZBKSZ08  \n     -0.2371614       -0.1413812        0.7089989       -0.0907065  \nORIGIN_SZBKSZ09  ORIGIN_SZBLSZ01  ORIGIN_SZBLSZ02  ORIGIN_SZBLSZ03  \n     -0.1775146       -2.3684539       -2.8078475       -3.3122763  \nORIGIN_SZBLSZ04  ORIGIN_SZBMSZ01  ORIGIN_SZBMSZ02  ORIGIN_SZBMSZ03  \n     -2.6770542        0.0618035       -1.3535767       -0.7569095  \nORIGIN_SZBMSZ04  ORIGIN_SZBMSZ05  ORIGIN_SZBMSZ06  ORIGIN_SZBMSZ07  \n     -0.2949304       -2.6131992       -3.0315024       -0.6962524  \nORIGIN_SZBMSZ08  ORIGIN_SZBMSZ09  ORIGIN_SZBMSZ10  ORIGIN_SZBMSZ11  \n     -0.9310730       -1.2911253       -1.6687004       -1.1152794  \nORIGIN_SZBMSZ12  ORIGIN_SZBMSZ13  ORIGIN_SZBMSZ14  ORIGIN_SZBMSZ15  \n     -1.5323954       -0.6267376       -1.0475467       -0.5049444  \nORIGIN_SZBMSZ16  ORIGIN_SZBMSZ17  ORIGIN_SZBPSZ01  ORIGIN_SZBPSZ02  \n     -1.5282897       -1.5722349        0.5814175        0.0875442  \nORIGIN_SZBPSZ03  ORIGIN_SZBPSZ04  ORIGIN_SZBPSZ05  ORIGIN_SZBPSZ06  \n      0.3358227        0.6507586        0.9502124       -1.0480314  \nORIGIN_SZBPSZ07  ORIGIN_SZBSSZ01  ORIGIN_SZBSSZ02  ORIGIN_SZBSSZ03  \n     -0.5467931        0.2998334        0.2841036       -0.2331505  \nORIGIN_SZBTSZ01  ORIGIN_SZBTSZ02  ORIGIN_SZBTSZ03  ORIGIN_SZBTSZ04  \n      0.0987284       -0.6261229       -0.4326963       -1.4998668  \nORIGIN_SZBTSZ05  ORIGIN_SZBTSZ06  ORIGIN_SZBTSZ07  ORIGIN_SZBTSZ08  \n     -0.9564768       -1.2853131       -2.3870991       -1.3715855  \nORIGIN_SZCBSZ01  ORIGIN_SZCCSZ01  ORIGIN_SZCHSZ01  ORIGIN_SZCHSZ02  \n     -3.5940232       -0.7008220       -0.9109524       -0.8566547  \nORIGIN_SZCHSZ03  ORIGIN_SZCKSZ01  ORIGIN_SZCKSZ02  ORIGIN_SZCKSZ03  \n      1.1153731        0.3001815        0.7185711        1.1389824  \nORIGIN_SZCKSZ04  ORIGIN_SZCKSZ05  ORIGIN_SZCKSZ06  ORIGIN_SZCLSZ01  \n      1.6281772        0.8338470        0.6528993       -0.7174758  \nORIGIN_SZCLSZ02  ORIGIN_SZCLSZ03  ORIGIN_SZCLSZ04  ORIGIN_SZCLSZ05  \n     -1.7513100       -1.0362873        0.6160017       -2.1005122  \nORIGIN_SZCLSZ06  ORIGIN_SZCLSZ07  ORIGIN_SZCLSZ08  ORIGIN_SZCLSZ09  \n      0.7252108       -0.5343482       -0.2153408       -1.8019961  \nORIGIN_SZDTSZ02  ORIGIN_SZDTSZ03  ORIGIN_SZDTSZ13  ORIGIN_SZGLSZ01  \n     -3.9057711       -3.4152419       -3.0183438       -1.7812384  \nORIGIN_SZGLSZ02  ORIGIN_SZGLSZ03  ORIGIN_SZGLSZ04  ORIGIN_SZGLSZ05  \n     -0.1074991       -0.2461106        0.8657186        0.5871393  \nORIGIN_SZHGSZ01  ORIGIN_SZHGSZ02  ORIGIN_SZHGSZ03  ORIGIN_SZHGSZ04  \n      0.3543819        0.4218178        0.2411309        0.8180622  \nORIGIN_SZHGSZ05  ORIGIN_SZHGSZ06  ORIGIN_SZHGSZ07  ORIGIN_SZHGSZ08  \n      1.2173687       -0.1826300        0.3172839       -0.1151369  \nORIGIN_SZHGSZ09  ORIGIN_SZHGSZ10  ORIGIN_SZJESZ01  ORIGIN_SZJESZ02  \n     -1.2873441       -3.3783178        0.4859234        0.1766088  \nORIGIN_SZJESZ03  ORIGIN_SZJESZ04  ORIGIN_SZJESZ05  ORIGIN_SZJESZ06  \n     -0.2177441       -1.5532182       -2.3332926        0.3007382  \nORIGIN_SZJESZ07  ORIGIN_SZJESZ08  ORIGIN_SZJESZ09  ORIGIN_SZJESZ10  \n     -1.9687994       -1.3032070        0.5762635       -1.4423113  \nORIGIN_SZJESZ11  ORIGIN_SZJWSZ01  ORIGIN_SZJWSZ02  ORIGIN_SZJWSZ03  \n     -1.9720897        0.3808627        0.7963999        1.5429636  \nORIGIN_SZJWSZ04  ORIGIN_SZJWSZ05  ORIGIN_SZJWSZ06  ORIGIN_SZJWSZ07  \n      0.6410760       -2.1571049       -1.5174532       -2.7089963  \nORIGIN_SZJWSZ08  ORIGIN_SZJWSZ09  ORIGIN_SZKLSZ01  ORIGIN_SZKLSZ02  \n      1.5343415        1.8837410        0.1081286       -0.8844695  \nORIGIN_SZKLSZ03  ORIGIN_SZKLSZ04  ORIGIN_SZKLSZ05  ORIGIN_SZKLSZ06  \n     -0.6872640       -2.2090319       -1.1728726       -6.1162315  \nORIGIN_SZKLSZ07  ORIGIN_SZKLSZ08  ORIGIN_SZLKSZ01  ORIGIN_SZMDSZ01  \n     -1.4082749       -1.7781551       -2.0531568       -0.8825639  \nORIGIN_SZMDSZ02  ORIGIN_SZMDSZ03  ORIGIN_SZMPSZ01  ORIGIN_SZMPSZ02  \n     -0.6219993       -2.0840156       -0.9659093       -1.0411153  \nORIGIN_SZMPSZ03  ORIGIN_SZMUSZ02  ORIGIN_SZNTSZ01  ORIGIN_SZNTSZ02  \n      0.0001659       -3.7599031       -3.0388366       -3.4230640  \nORIGIN_SZNTSZ03  ORIGIN_SZNTSZ05  ORIGIN_SZNTSZ06  ORIGIN_SZNVSZ01  \n     -0.9094796       -4.0861681       -3.9497128        0.3235636  \nORIGIN_SZNVSZ02  ORIGIN_SZNVSZ03  ORIGIN_SZNVSZ04  ORIGIN_SZNVSZ05  \n     -0.6946748       -1.0540196       -0.9897977       -2.2578432  \nORIGIN_SZPGSZ01  ORIGIN_SZPGSZ02  ORIGIN_SZPGSZ03  ORIGIN_SZPGSZ04  \n      0.2399827       -0.3352342        0.9515148        1.3998952  \nORIGIN_SZPGSZ05  ORIGIN_SZPLSZ01  ORIGIN_SZPLSZ02  ORIGIN_SZPLSZ03  \n      0.4451629       -0.9705918       -1.0670151       -2.1229124  \nORIGIN_SZPLSZ04  ORIGIN_SZPLSZ05  ORIGIN_SZPNSZ01  ORIGIN_SZPNSZ02  \n     -3.0911932       -2.1705708        0.9052637       -0.1720425  \nORIGIN_SZPNSZ03  ORIGIN_SZPNSZ04  ORIGIN_SZPNSZ05  ORIGIN_SZPRSZ01  \n     -2.3973459       -3.4483689       -2.0588530       -0.6399015  \nORIGIN_SZPRSZ02  ORIGIN_SZPRSZ03  ORIGIN_SZPRSZ04  ORIGIN_SZPRSZ05  \n      0.8122270        0.3990960       -0.8485348        0.8008791  \nORIGIN_SZPRSZ06  ORIGIN_SZPRSZ07  ORIGIN_SZPRSZ08  ORIGIN_SZQTSZ01  \n     -1.4498806       -3.2025045       -0.5862269       -0.1859270  \nORIGIN_SZQTSZ02  ORIGIN_SZQTSZ03  ORIGIN_SZQTSZ04  ORIGIN_SZQTSZ05  \n     -0.8715122       -0.1259816       -1.4620032       -0.6675643  \nORIGIN_SZQTSZ06  ORIGIN_SZQTSZ07  ORIGIN_SZQTSZ08  ORIGIN_SZQTSZ09  \n     -0.8190026       -1.5189403       -0.4976238       -0.9006162  \nORIGIN_SZQTSZ10  ORIGIN_SZQTSZ11  ORIGIN_SZQTSZ12  ORIGIN_SZQTSZ13  \n     -0.6690184       -2.5203437       -3.0461675       -0.7501068  \nORIGIN_SZQTSZ14  ORIGIN_SZQTSZ15  ORIGIN_SZRCSZ01  ORIGIN_SZRCSZ06  \n     -1.9321849       -0.9576828       -1.8167951       -0.5560563  \nORIGIN_SZRVSZ01  ORIGIN_SZRVSZ02  ORIGIN_SZRVSZ03  ORIGIN_SZRVSZ04  \n     -2.8862570       -3.1555662       -2.9836089       -3.5520422  \nORIGIN_SZRVSZ05  ORIGIN_SZSBSZ01  ORIGIN_SZSBSZ02  ORIGIN_SZSBSZ03  \n     -2.5866584        0.2867444       -0.9012334        0.8311038  \nORIGIN_SZSBSZ04  ORIGIN_SZSBSZ05  ORIGIN_SZSBSZ06  ORIGIN_SZSBSZ07  \n      0.4044170       -0.2661845       -0.9023075        0.0505870  \nORIGIN_SZSBSZ08  ORIGIN_SZSBSZ09  ORIGIN_SZSESZ02  ORIGIN_SZSESZ03  \n     -1.1158011       -0.9682835        1.1452735        1.2815277  \nORIGIN_SZSESZ04  ORIGIN_SZSESZ05  ORIGIN_SZSESZ06  ORIGIN_SZSESZ07  \n      0.8085857       -0.2329413        1.0576879       -2.3165908  \nORIGIN_SZSGSZ01  ORIGIN_SZSGSZ02  ORIGIN_SZSGSZ03  ORIGIN_SZSGSZ04  \n     -0.6606350       -1.3638984        0.1152591        0.2954067  \nORIGIN_SZSGSZ05  ORIGIN_SZSGSZ06  ORIGIN_SZSGSZ07  ORIGIN_SZSKSZ01  \n     -2.0792678        0.4563227       -0.8955254       -0.3184402  \nORIGIN_SZSKSZ02  ORIGIN_SZSKSZ03  ORIGIN_SZSKSZ04  ORIGIN_SZSKSZ05  \n      1.1160484       -0.2566692       -1.5781827       -0.2724361  \nORIGIN_SZSLSZ01  ORIGIN_SZSLSZ04  ORIGIN_SZSRSZ01  ORIGIN_SZTHSZ01  \n     -2.4458625       -0.0987076       -2.2584977       -2.5878524  \nORIGIN_SZTHSZ03  ORIGIN_SZTHSZ04  ORIGIN_SZTHSZ06  ORIGIN_SZTMSZ01  \n     -0.8101746       -2.4186655       -1.7080541       -0.2193476  \nORIGIN_SZTMSZ02  ORIGIN_SZTMSZ03  ORIGIN_SZTMSZ04  ORIGIN_SZTMSZ05  \n      1.7772464        1.0051343        0.1642370       -1.2878706  \nORIGIN_SZTNSZ01  ORIGIN_SZTNSZ02  ORIGIN_SZTNSZ03  ORIGIN_SZTNSZ04  \n     -1.7163504       -1.6508988       -2.1545577       -0.3949120  \nORIGIN_SZTPSZ01  ORIGIN_SZTPSZ02  ORIGIN_SZTPSZ03  ORIGIN_SZTPSZ04  \n     -0.8058100        0.5369060       -0.7779333       -0.8153581  \nORIGIN_SZTPSZ05  ORIGIN_SZTPSZ06  ORIGIN_SZTPSZ07  ORIGIN_SZTPSZ08  \n     -0.5073676        0.0847301       -0.5839519       -1.0577941  \nORIGIN_SZTPSZ09  ORIGIN_SZTPSZ10  ORIGIN_SZTPSZ11  ORIGIN_SZTPSZ12  \n     -0.9067707       -1.1362091       -0.2374621       -0.8028874  \nORIGIN_SZTSSZ01  ORIGIN_SZTSSZ02  ORIGIN_SZTSSZ03  ORIGIN_SZTSSZ04  \n     -2.7809271        0.0425804        0.1142369       -0.6186261  \nORIGIN_SZTSSZ05  ORIGIN_SZTSSZ06  ORIGIN_SZWCSZ01  ORIGIN_SZWCSZ02  \n     -1.0846732        0.3980173        1.3545143       -2.9863278  \nORIGIN_SZWCSZ03  ORIGIN_SZWDSZ01  ORIGIN_SZWDSZ02  ORIGIN_SZWDSZ03  \n     -5.0504916        1.5238429        0.2832576        1.3702524  \nORIGIN_SZWDSZ04  ORIGIN_SZWDSZ05  ORIGIN_SZWDSZ06  ORIGIN_SZWDSZ07  \n      1.0248225        0.2356778        0.3146925       -1.4971897  \nORIGIN_SZWDSZ08  ORIGIN_SZWDSZ09  ORIGIN_SZYSSZ01  ORIGIN_SZYSSZ02  \n     -0.8894079        1.4437633       -0.2519398        0.8726785  \nORIGIN_SZYSSZ03  ORIGIN_SZYSSZ04  ORIGIN_SZYSSZ05  ORIGIN_SZYSSZ06  \n      1.7868139        0.8418040        0.4292096       -0.7459961  \nORIGIN_SZYSSZ07  ORIGIN_SZYSSZ08  ORIGIN_SZYSSZ09  DESTIN_SZAMSZ02  \n     -0.8422281        0.1829428        1.1159712        0.0694567  \nDESTIN_SZAMSZ03  DESTIN_SZAMSZ04  DESTIN_SZAMSZ05  DESTIN_SZAMSZ06  \n      0.0760100       -1.1306391       -1.0751133       -0.9624298  \nDESTIN_SZAMSZ07  DESTIN_SZAMSZ08  DESTIN_SZAMSZ09  DESTIN_SZAMSZ10  \n     -1.5060319       -0.4813202       -1.0220675        0.1235142  \nDESTIN_SZAMSZ11  DESTIN_SZAMSZ12  DESTIN_SZBDSZ01  DESTIN_SZBDSZ02  \n     -0.8917993        0.0195208        0.9736349       -0.1969470  \nDESTIN_SZBDSZ03  DESTIN_SZBDSZ04  DESTIN_SZBDSZ05  DESTIN_SZBDSZ06  \n      0.1266471        1.1608485        0.9293840        0.4090567  \nDESTIN_SZBDSZ07  DESTIN_SZBDSZ08  DESTIN_SZBKSZ01  DESTIN_SZBKSZ02  \n     -0.8171478       -1.5895287       -1.3793311       -0.5253670  \nDESTIN_SZBKSZ03  DESTIN_SZBKSZ04  DESTIN_SZBKSZ05  DESTIN_SZBKSZ06  \n     -1.0095362       -0.5662858       -0.9406607       -1.3129276  \nDESTIN_SZBKSZ07  DESTIN_SZBKSZ08  DESTIN_SZBKSZ09  DESTIN_SZBLSZ01  \n      0.0120605       -1.3658471       -0.1771310       -0.8175223  \nDESTIN_SZBLSZ02  DESTIN_SZBLSZ03  DESTIN_SZBLSZ04  DESTIN_SZBMSZ01  \n      0.1631280        1.2598494       -0.5642975        0.6921844  \nDESTIN_SZBMSZ02  DESTIN_SZBMSZ03  DESTIN_SZBMSZ04  DESTIN_SZBMSZ05  \n     -0.1209392       -0.2373881       -0.0407117       -0.2363309  \nDESTIN_SZBMSZ06  DESTIN_SZBMSZ07  DESTIN_SZBMSZ08  DESTIN_SZBMSZ09  \n     -1.1930710        0.4625103       -0.8604731       -2.1290239  \nDESTIN_SZBMSZ10  DESTIN_SZBMSZ11  DESTIN_SZBMSZ12  DESTIN_SZBMSZ13  \n     -1.4617153       -1.3234050       -0.8399230        0.1366529  \nDESTIN_SZBMSZ14  DESTIN_SZBMSZ15  DESTIN_SZBMSZ16  DESTIN_SZBMSZ17  \n     -1.0491968       -0.6726684       -1.4011734       -1.5682752  \nDESTIN_SZBPSZ01  DESTIN_SZBPSZ02  DESTIN_SZBPSZ03  DESTIN_SZBPSZ04  \n     -1.1120017       -2.0833466       -1.6937265       -0.7964999  \nDESTIN_SZBPSZ05  DESTIN_SZBPSZ06  DESTIN_SZBPSZ07  DESTIN_SZBSSZ01  \n      0.2109118       -1.1808365       -0.2077428        0.3164175  \nDESTIN_SZBSSZ02  DESTIN_SZBSSZ03  DESTIN_SZBTSZ01  DESTIN_SZBTSZ02  \n     -0.4852688        0.4130432        0.6215095       -0.0145076  \nDESTIN_SZBTSZ03  DESTIN_SZBTSZ04  DESTIN_SZBTSZ05  DESTIN_SZBTSZ06  \n      0.4919981       -0.6957555        0.3329814       -0.1333295  \nDESTIN_SZBTSZ07  DESTIN_SZBTSZ08  DESTIN_SZCBSZ01  DESTIN_SZCCSZ01  \n     -1.4449581       -0.7079056       -5.7344725       -0.0009541  \nDESTIN_SZCHSZ01  DESTIN_SZCHSZ02  DESTIN_SZCHSZ03  DESTIN_SZCKSZ01  \n     -0.2083016        0.5369606        2.5530638       -0.5725975  \nDESTIN_SZCKSZ02  DESTIN_SZCKSZ03  DESTIN_SZCKSZ04  DESTIN_SZCKSZ05  \n     -1.1181852        0.1156680       -0.8647725       -1.1641791  \nDESTIN_SZCKSZ06  DESTIN_SZCLSZ01  DESTIN_SZCLSZ02  DESTIN_SZCLSZ03  \n     -0.4397612        0.1930552       -2.0436501       -0.9338571  \nDESTIN_SZCLSZ04  DESTIN_SZCLSZ05  DESTIN_SZCLSZ06  DESTIN_SZCLSZ07  \n      0.0532041       -1.0782781        0.4068171       -0.3579507  \nDESTIN_SZCLSZ08  DESTIN_SZCLSZ09  DESTIN_SZDTSZ02  DESTIN_SZDTSZ03  \n     -0.2487993        0.1611080       -1.7308348       -0.5994253  \nDESTIN_SZDTSZ13  DESTIN_SZGLSZ01  DESTIN_SZGLSZ02  DESTIN_SZGLSZ03  \n     -1.3685031       -0.0910001       -0.0692224        0.6493421  \nDESTIN_SZGLSZ04  DESTIN_SZGLSZ05  DESTIN_SZHGSZ01  DESTIN_SZHGSZ02  \n      0.9327947        0.8161728        0.0658625       -0.8134329  \nDESTIN_SZHGSZ03  DESTIN_SZHGSZ04  DESTIN_SZHGSZ05  DESTIN_SZHGSZ06  \n     -1.3546132       -0.4500588       -0.5026431       -0.8673686  \nDESTIN_SZHGSZ07  DESTIN_SZHGSZ08  DESTIN_SZHGSZ09  DESTIN_SZHGSZ10  \n      0.0560490       -0.0443189       -0.0126355       -3.5821793  \nDESTIN_SZJESZ01  DESTIN_SZJESZ02  DESTIN_SZJESZ03  DESTIN_SZJESZ04  \n     -0.3704281       -0.7369159       -0.8985484       -1.0511995  \nDESTIN_SZJESZ05  DESTIN_SZJESZ06  DESTIN_SZJESZ07  DESTIN_SZJESZ08  \n     -1.5324974        0.3105267       -1.3234483       -0.6559742  \nDESTIN_SZJESZ09  DESTIN_SZJESZ10  DESTIN_SZJESZ11  DESTIN_SZJWSZ01  \n      0.2663752        0.8529026        0.5559641       -0.9790971  \nDESTIN_SZJWSZ02  DESTIN_SZJWSZ03  DESTIN_SZJWSZ04  DESTIN_SZJWSZ05  \n     -0.8746590        0.5689062        0.4520963       -1.0249671  \nDESTIN_SZJWSZ06  DESTIN_SZJWSZ07  DESTIN_SZJWSZ08  DESTIN_SZJWSZ09  \n     -0.7451483       -2.8453099       -0.3372309        1.0505330  \nDESTIN_SZKLSZ01  DESTIN_SZKLSZ02  DESTIN_SZKLSZ03  DESTIN_SZKLSZ04  \n     -0.2334836       -0.5416148       -0.8026495       -1.2918594  \nDESTIN_SZKLSZ05  DESTIN_SZKLSZ06  DESTIN_SZKLSZ07  DESTIN_SZKLSZ08  \n     -0.4069101       -2.5333101       -0.6623343       -0.1408205  \nDESTIN_SZLKSZ01  DESTIN_SZMDSZ01  DESTIN_SZMDSZ02  DESTIN_SZMDSZ03  \n     -1.2639235       -1.5655800       -0.9767682       -3.3328109  \nDESTIN_SZMPSZ01  DESTIN_SZMPSZ02  DESTIN_SZMPSZ03  DESTIN_SZMUSZ02  \n     -0.4552859       -0.5386560        0.4952000       -1.4434175  \nDESTIN_SZNTSZ01  DESTIN_SZNTSZ02  DESTIN_SZNTSZ03  DESTIN_SZNTSZ05  \n     -2.9194067       -1.3780179       -0.5044699       -2.0017134  \nDESTIN_SZNTSZ06  DESTIN_SZNVSZ01  DESTIN_SZNVSZ02  DESTIN_SZNVSZ03  \n     -3.8120537       -0.1071506       -0.0274710        0.1076352  \nDESTIN_SZNVSZ04  DESTIN_SZNVSZ05  DESTIN_SZPGSZ01  DESTIN_SZPGSZ02  \n     -1.2087250       -1.0058290       -1.2029931       -1.2878671  \nDESTIN_SZPGSZ03  DESTIN_SZPGSZ04  DESTIN_SZPGSZ05  DESTIN_SZPLSZ01  \n     -0.1520894       -0.1985959       -1.5290983       -0.3567934  \nDESTIN_SZPLSZ02  DESTIN_SZPLSZ03  DESTIN_SZPLSZ04  DESTIN_SZPLSZ05  \n     -1.7114351       -0.3241427       -1.7117196       -0.5086379  \nDESTIN_SZPNSZ01  DESTIN_SZPNSZ02  DESTIN_SZPNSZ03  DESTIN_SZPNSZ04  \n      0.2026781        0.8313754       -0.4041254        1.5814539  \nDESTIN_SZPNSZ05  DESTIN_SZPRSZ01  DESTIN_SZPRSZ02  DESTIN_SZPRSZ03  \n      1.1823430       -1.1057553        0.0895099        0.6921925  \nDESTIN_SZPRSZ04  DESTIN_SZPRSZ05  DESTIN_SZPRSZ06  DESTIN_SZPRSZ07  \n     -0.2848336        0.1744480        0.4279206       -1.5123108  \nDESTIN_SZPRSZ08  DESTIN_SZQTSZ01  DESTIN_SZQTSZ02  DESTIN_SZQTSZ03  \n     -0.5650226       -0.5952360       -0.7728170       -0.5066812  \nDESTIN_SZQTSZ04  DESTIN_SZQTSZ05  DESTIN_SZQTSZ06  DESTIN_SZQTSZ07  \n     -0.6398414       -0.4354527       -0.6597391       -0.9392696  \nDESTIN_SZQTSZ08  DESTIN_SZQTSZ09  DESTIN_SZQTSZ10  DESTIN_SZQTSZ11  \n      0.4617774       -0.3174497        0.1993449        0.2551535  \nDESTIN_SZQTSZ12  DESTIN_SZQTSZ13  DESTIN_SZQTSZ14  DESTIN_SZQTSZ15  \n     -0.1662603        0.5500978        0.5364435        1.3611043  \nDESTIN_SZRCSZ01  DESTIN_SZRCSZ06  DESTIN_SZRVSZ01  DESTIN_SZRVSZ02  \n     -0.1034049       -1.0633902       -1.5486221       -2.4092611  \nDESTIN_SZRVSZ03  DESTIN_SZRVSZ04  DESTIN_SZRVSZ05  DESTIN_SZSBSZ01  \n     -1.5172079       -1.1663615       -2.2404292       -1.3783780  \nDESTIN_SZSBSZ02  DESTIN_SZSBSZ03  DESTIN_SZSBSZ04  DESTIN_SZSBSZ05  \n     -1.4445213        0.5149906        0.2389086       -1.2737442  \nDESTIN_SZSBSZ06  DESTIN_SZSBSZ07  DESTIN_SZSBSZ08  DESTIN_SZSBSZ09  \n     -1.8683520       -0.5993154        0.8156302        0.0900611  \nDESTIN_SZSESZ02  DESTIN_SZSESZ03  DESTIN_SZSESZ04  DESTIN_SZSESZ05  \n     -0.6397704        0.1714103       -1.0596175       -0.8071891  \nDESTIN_SZSESZ06  DESTIN_SZSESZ07  DESTIN_SZSGSZ01  DESTIN_SZSGSZ02  \n     -0.5580934       -3.1448863       -0.1795225       -0.2986570  \nDESTIN_SZSGSZ03  DESTIN_SZSGSZ04  DESTIN_SZSGSZ05  DESTIN_SZSGSZ06  \n     -0.4074671       -0.1505164       -1.9908372        0.6715268  \nDESTIN_SZSGSZ07  DESTIN_SZSISZ01  DESTIN_SZSKSZ01  DESTIN_SZSKSZ02  \n     -0.4494757       -0.5517983       -0.4749154        0.9400302  \nDESTIN_SZSKSZ03  DESTIN_SZSKSZ04  DESTIN_SZSKSZ05  DESTIN_SZSLSZ01  \n     -0.2800377       -1.2570212       -0.2600474       -0.7775604  \nDESTIN_SZSLSZ04  DESTIN_SZSRSZ01  DESTIN_SZTHSZ01  DESTIN_SZTHSZ03  \n     -0.8586515       -1.1370887       -4.3259988       -2.6632914  \nDESTIN_SZTHSZ04  DESTIN_SZTHSZ06  DESTIN_SZTMSZ01  DESTIN_SZTMSZ02  \n     -3.1000906       -2.5952642       -0.2092828        1.8238139  \nDESTIN_SZTMSZ03  DESTIN_SZTMSZ04  DESTIN_SZTMSZ05  DESTIN_SZTNSZ01  \n      0.8518259        1.0222812        0.6323777       -0.3336078  \nDESTIN_SZTNSZ02  DESTIN_SZTNSZ03  DESTIN_SZTNSZ04  DESTIN_SZTPSZ01  \n     -1.0820469       -1.4186505       -0.3058199       -0.4872299  \nDESTIN_SZTPSZ02  DESTIN_SZTPSZ03  DESTIN_SZTPSZ04  DESTIN_SZTPSZ05  \n      0.7158441       -0.4314229       -1.5898245       -1.0445550  \nDESTIN_SZTPSZ06  DESTIN_SZTPSZ07  DESTIN_SZTPSZ08  DESTIN_SZTPSZ09  \n     -0.4319582       -2.1602303       -1.1920493       -0.2022481  \nDESTIN_SZTPSZ10  DESTIN_SZTPSZ11  DESTIN_SZTPSZ12  DESTIN_SZTSSZ01  \n     -1.2464793       -0.0808445       -0.6784376       -1.5845062  \nDESTIN_SZTSSZ02  DESTIN_SZTSSZ03  DESTIN_SZTSSZ04  DESTIN_SZTSSZ05  \n     -0.1886010        0.6525526        0.5285464        1.4670106  \nDESTIN_SZTSSZ06  DESTIN_SZWCSZ01  DESTIN_SZWCSZ02  DESTIN_SZWCSZ03  \n      2.5043588        1.9787931       -2.2593108       -3.1897655  \nDESTIN_SZWDSZ01  DESTIN_SZWDSZ02  DESTIN_SZWDSZ03  DESTIN_SZWDSZ04  \n      1.0476108       -1.3176990        0.3432057       -0.7895927  \nDESTIN_SZWDSZ05  DESTIN_SZWDSZ06  DESTIN_SZWDSZ07  DESTIN_SZWDSZ08  \n     -0.8751665       -0.2106221       -1.6050834       -0.5124717  \nDESTIN_SZWDSZ09  DESTIN_SZYSSZ01  DESTIN_SZYSSZ02  DESTIN_SZYSSZ03  \n      0.3813542        0.0853753       -0.3227172       -0.4151283  \nDESTIN_SZYSSZ04  DESTIN_SZYSSZ05  DESTIN_SZYSSZ06  DESTIN_SZYSSZ07  \n     -0.4637327       -1.5888242       -1.4606209       -0.7839065  \nDESTIN_SZYSSZ08  DESTIN_SZYSSZ09        log(DIST)  \n      0.6265412        0.1520067       -1.8468315  \n\nDegrees of Freedom: 14470 Total (i.e. Null);  13912 Residual\nNull Deviance:      47090000 \nResidual Deviance: 10420000     AIC: 10510000\n\n\n```"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex4/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/F&B.html",
    "href": "In-class_Ex4/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/Business.html",
    "href": "In-class_Ex4/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2-glsa.html",
    "href": "In-Class_Ex2/In-Class_Ex2-glsa.html",
    "title": "In-Class_Ex2-glsa",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, plotly, tidyverse)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\In-Class_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\nglobal_moran_test(wm_q$GDPPC,  wm_q$nb, wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)"
  },
  {
    "objectID": "Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html#overview",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html#overview",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html#getting-started",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html#getting-started",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load spdep, sf, tmap and tidyverse packages into R environment.\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "Getting the Data Into R Environment",
    "text": "Getting the Data Into R Environment\n\nImport shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nImport csv file into r environment\nImport Hunan_2012.csv into R by using read_csv() of readr package\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPerforming relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. \n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\nVisualising Regional Development Indicator\nprepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html#global-spatial-autocorrelation",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation",
    "text": "Global Spatial Autocorrelation\n\nComputing Contiguity Spatial Weights\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\nRow-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\nGlobal Spatial Autocorrelation: Moran’s I\n\n\nMaron’s I test\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nStatistically significant, P-value 1.095e-06 is less than significance level of 5%.\n\nComputing Monte Carlo Moran’s I\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nStatistically significant, P-value 0.001 is less than significance level of 5%.\n\n\nVisualising Monte Carlo Moran’s I\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\nUse ggplot2 package\n\nlibrary(ggplot2)\n\nggplot(data.frame(Moran_I = bperm$res), aes(x = Moran_I)) +\n  geom_histogram(fill = \"grey\", color = \"black\") +\n  labs(x = \"Simulated Moran's I\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nGlobal Spatial Autocorrelation: Geary’s\n\nGeary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nStatistically significant, P-value 0.0001526 is less than significance level of 5%.\n\n\nComputing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nStatistically significant, P-value 0.0001 is less than significance level of 5%.\n\n\nVisualising the Monte Carlo Geary’s C\nPlot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.2.html#spatial-correlogram",
    "href": "Hands-on_Ex2/Hands-on_Ex2.2.html#spatial-correlogram",
    "title": "Hands-on Exercise 2 : Global Measures of Spatial Autocorrelation",
    "section": "Spatial Correlogram",
    "text": "Spatial Correlogram\n\nCompute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. \n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nCompute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.2.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1.2.html",
    "title": "Hands-on Exercise 1 : Choropleth Mapping with R",
    "section": "",
    "text": "In this hands-on exercise, we explore how to plot functional and truthful choropleth maps by using an R package called tmap package."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.2.html#overview",
    "href": "Hands-on_Ex1/Hands-on_Ex1.2.html#overview",
    "title": "Hands-on Exercise 1 : Choropleth Mapping with R",
    "section": "",
    "text": "In this hands-on exercise, we explore how to plot functional and truthful choropleth maps by using an R package called tmap package."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.2.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1.2.html#getting-started",
    "title": "Hands-on Exercise 1 : Choropleth Mapping with R",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load sf, tmap and tidyverse packages into R environment.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.2.html#importing-data-into-r",
    "href": "Hands-on_Ex1/Hands-on_Ex1.2.html#importing-data-into-r",
    "title": "Hands-on Exercise 1 : Choropleth Mapping with R",
    "section": "Importing Data into R",
    "text": "Importing Data into R\n\nImporting Geospatial Data into R\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nYou can examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\nImporting Attribute Data into R\nNext, we will import respopagsex2011to2020.csv file into RStudio and save the file into an R dataframe called popdata.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nData Preparation\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n2.3.4.1 Data wrangling\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\nJoining the attribute data and geospatial data\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThing to learn from the code chunk above:\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.2.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex1/Hands-on_Ex1.2.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 1 : Choropleth Mapping with R",
    "section": "Choropleth Mapping Geospatial Data Using tmap",
    "text": "Choropleth Mapping Geospatial Data Using tmap\nTwo approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\nPlotting a choropleth map quickly by using qtm()\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\nThings to learn from the code chunk above:\n\ntmap_mode() with \"plot\" option is used to produce a static map. For interactive mode, \"view\" option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)\n\n\n\nCreating a choropleth map by using tmap's elements\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, tmap's drawing elements should be used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nIn the following sub-section, we will share with you tmap functions that used to plot these elements.\n\nDrawing a base map\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\nDrawing a choropleth map using tm_polygons()\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called \"pretty\". A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing value will be shaded in grey.\n\n\n\nDrawing a choropleth map using tm_fill() and *tm_border()**\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nNotice that the planning subzones are shared according to the respective dependecy values\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nNotice that light-gray border lines have been added on the choropleth map.\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is \"solid\".\n\n\n\n\nData classification methods of tmap\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\nPlotting choropleth maps with built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method.\n\n\nPlotting choropleth map with custome break\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break\n\n\n\n\n\n\n\n\nColour Scheme\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\nUsing ColourBrewer palette\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a \"-\" prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the colour scheme has been reversed.\n\n\n\nMap Layouts\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\nMap Legend\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\nCartographic Furniture\nBeside map style, tmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nTo reset the default style, refer to the code chunk below.\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\nDrawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\nBy assigning multiple values to at least one of the aesthetic arguments\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\nBy defining a group-by variable in tm_facets()\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\nBy creating multiple stand-alone maps with tmap_arrange()\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\nMappping Spatial Object Meeting a Selection Criterion\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, we explore how to handle geospatial data in R by using sf package."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#overview",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#overview",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, we explore how to handle geospatial data in R by using sf package."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#getting-started",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load sf and tidyverse packages into R environment.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#importing-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Importing Geospatial Data",
    "text": "Importing Geospatial Data\n\nImporting polygon feature data in shapefile format\nThe code chunk below uses st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a polygon feature data frame. Note that when the input geospatial data is in shapefile format, two arguments will be used, namely: dsn to define the data path and layer to provide the shapefile name. Also note that no extension such as .shp, .dbf, .prj and .shx are needed.\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe message above reveals that the geospatial objects are multipolygon features. There are a total of 323 multipolygon features and 15 fields in mpsz simple feature data frame. mpsz is in svy21 projected coordinates systems. The bounding box provides the x extend and y extend of the data.\n\n\nImporting polyline feature data in shapefile form\nThe code chunk below uses st_read() function of sf package to import CyclingPath shapefile into R as line feature data frame.\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nThe message above reveals that there are a total of 2558 features and 2 fields in cyclingpath linestring feature data frame and it is in svy21 projected coordinates system too.\n\n\nImporting GIS data in kml format\nThe PreSchoolsLocation is in kml format. The code chunk below will be used to import the kml into R. Notice that in the code chunk below, the complete path and the kml file extension were provided.\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex1\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nThe message above reveals that preschool is a point feature data frame. There are a total of 2290 features and 2 fields. Different from the previous two simple feature data frame, preschool is in wgs84 coordinates system."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Checking the Content of A Simple Feature Data Frame",
    "text": "Checking the Content of A Simple Feature Data Frame\nIn this sub-section, you will learn different ways to retrieve information related to the content of a simple feature data frame.\n\nWorking with st_geometry()\nThe column in the sf data.frame that contains the geometries is a list, of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\nNotice that the print only displays basic information of the feature class such as type of geometry, the geographic extent of the features and the coordinate system of the data.\n\n\nWorking with glimpse()\nBeside the basic feature information, we also would like to learn more about the associated attribute information in the data frame. This is the time you will find glimpse() of dplyr. very handy as shown in the code chunk below.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nglimpse() report reveals the data type of each fields. For example FMEL-UPD_D field is in date data type and X_ADDR, Y_ADDR, SHAPE_L and SHAPE_AREA fields are all in double-precision values.\n\n\nWorking with head()\nSometimes we would like to reveal complete information of a feature object, this is the job of head() of Base R\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#plotting-the-geospatial-data",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\nIn geospatial data science, by looking at the feature information is not enough. We are also interested to visualise the geospatial features. This is the time you will find plot() of R Graphic comes in very handy as shown in the code chunk below.\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry by using the code chunk below.\n\nplot(st_geometry(mpsz))\n\n\n\n\nAlternatively, we can also choose the plot the sf object by using a specific attribute as shown in the code chunk below.\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#working-with-projection",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#working-with-projection",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Working with Projection",
    "text": "Working with Projection\nMap projection is an important property of a geospatial data. In order to perform geoprocessing using two geospatial data, we need to ensure that both geospatial data are projected using similar coordinate system.\nIn this section, you will learn how to project a simple feature data frame from one coordinate system to another coordinate system. The technical term of this process is called projection transformation.\n\nAssigning EPSG code to a simple feature data frame\nOne of the common issue that can happen during importing geospatial data into R is that the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.\nThis is an example the coordinate system of mpsz simple feature data frame by using st_crs() of sf package as shown in the code chunk below.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nAlthough mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\nIn order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\nNow, let us check the CSR again by using the code chunk below.\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG code is 3414 now.\n\n\nTransforming the projection of preschool from wgs84 to svy21.\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\nLet us take preschool simple feature data frame as an example. The print below reveals that it is in wgs84 coordinate system.\nGeometry set for 2290 features  \nGeometry type: POINT Dimension:     XYZ \nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134 z_range:       zmin: 0 zmax: 0 \nGeodetic CRS:  WGS 84 \nFirst 5 geometries:\nThis is a scenario that st_set_crs() is not appropriate and st_transform() of sf package should be used. This is because we need to reproject preschool from one coordinate system to another coordinate system mathemetically.\nLet us perform the projection transformation by using the code chunk below.\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\nNext, let us display the content of preschool3414 sf data frame as shown below.\nGeometry set for 2290 features  \nGeometry type: POINT Dimension:     XYZ \nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88 z_range:       zmin: 0 zmax: 0 \nProjected CRS: SVY21 / Singapore TM \nFirst 5 geometries:\nNotice that it is in svy21 projected coordinate system now. Furthermore, if you refer to Bounding box:, the values are greater than 0-360 range of decimal degree commonly used by most of the geographic coordinate systems."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#importing-and-converting-an-aspatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Importing and Converting An Aspatial Data",
    "text": "Importing and Converting An Aspatial Data\nIn practice, it is not unusual that we will come across data such as listing of Inside Airbnb. We call this kind of data aspatial data. This is because it is not a geospatial data but among the data fields, there are two fields that capture the x- and y-coordinates of the data points.\nIn this section, you will learn how to import an aspatial data into R environment and save it as a tibble data frame. Next, you will convert it into a simple feature data frame.\nFor the purpose of this exercise, the listings.csv data downloaded from AirBnb will be used.\n\nImporting the aspatial data\nSince listings data set is in csv file format, we will use read_csv() of readr package to import listing.csv as shown the code chunk below. The output R object is called listings and it is a tibble data frame.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3483 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (6): name, host_name, neighbourhood_group, neighbourhood, room_type, l...\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() of Base R instead of glimpse() is used to do the job.\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,483 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,473 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\nThe output reveals that listing tibble data frame consists of 4252 rows and 16 columns. Two useful fields we are going to use in the next phase are latitude and longitude. Note that they are in decimal degree format. As a best guess, we will assume that the data is in wgs84 Geographic Coordinate System.\n\n\nCreating a simple feature data frame from an aspatial data frame\nThe code chunk below converts listing data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThings to learn from the arguments above:\n\ncoords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\ncrs argument requires you to provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by referring to epsg.io.\n%&gt;% is used to nest st_transform() to transform the newly created simple feature data frame into svy21 projected coordinates system.\n\nLet us examine the content of this newly created simple feature data frame.\n\nglimpse(listings_sf)\n\nRows: 3,483\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 55, 69, 220, 85, 75, 45, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 20, 24, 47, 22, 17, 12, 133, 18, 6, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.14, 0.16, 0.31, 0.17, 0.12, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52, 52, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 89, 89, 89, 275, 274, 89, 365, 365, 365…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…\n\n\nTable above shows the content of listing_sf. Notice that a new column called geometry has been added into the data frame. On the other hand, the longitude and latitude columns have been dropped from the data frame."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#geoprocessing-with-sf-package",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Geoprocessing with sf package",
    "text": "Geoprocessing with sf package\nBesides providing functions to handling (i.e. importing, exporting, assigning projection, transforming projection etc) geospatial data, sf package also offers a wide range of geoprocessing (also known as GIS analysis) functions.\nIn this section, you will learn how to perform two commonly used geoprocessing functions, namely buffering and point in polygon count.\n\nBuffering\nThe scenario:\nThe authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nThe solution:\nFirstly, st_buffer() of sf package is used to compute the 5-meter buffers around cycling paths\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\nThis is followed by calculating the area of the buffers as shown in the code chunk below.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nLastly, sum() of Base R will be used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\nPoint-in-polygon count\nThe scenario:\nA pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nThe solution:\nThe code chunk below performs two operations at one go. Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\nYou can check the summary statistics of the newly derived PreSch Count field by using summary() as shown in the code chunk below.\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nTo list the planning subzone with the most number of pre-school, the top_n() of dplyr package is used as shown in the code chunk below.\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nThe solution:\nFirstly, the code chunk below uses st_area() of sf package to derive the area of each planning subzone.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nNext, mutate() of dplyr package is used to compute the density by using the code chunk below.\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1.1.html#exploratory-data-analysis-eda",
    "href": "Hands-on_Ex1/Hands-on_Ex1.1.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 1 - Geospatial Data Wrangling with R",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nIn practice, many geospatial analytics start with Exploratory Data Analysis. In this section, you will learn how to use appropriate ggplot2 functions to create functional and yet truthful statistical graphs for EDA purposes.\nFirstly, we will plot a histogram to reveal the distribution of PreSch Density. Conventionally, hist() of R Graphics will be used as shown in the code chunk below.\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\nAlthough the syntax is very easy to use however the output is far from meeting publication quality. Furthermore, the function has limited room for further customisation.\nIn the code chunk below, appropriate ggplot2 functions will be used.\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\nThe solution:\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute spatial weights using R."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#overview",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#overview",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute spatial weights using R."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#getting-started",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#getting-started",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load spdep, sf, tmap and tidyverse packages into R environment\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Getting the Data Into R Environment",
    "text": "Getting the Data Into R Environment\n\nImport shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nImport csv file into r environment\nThe code chunk below will import Hunan_2012.csv into R by using read_csv() of readr package.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPerforming relational join\nThe code chunk below will import update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe.\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Visualising Regional Development Indicator",
    "text": "Visualising Regional Development Indicator\nPrepare a basemap and a choropleth map showing the distribution of GDPPC 2012.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Computing Contiguity Spatial Weights",
    "text": "Computing Contiguity Spatial Weights\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one heighbours.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors. The numbers represent the polygon IDs as stored in hunan SpatialPolygonsDataFrame class.\nRetrive the county name of Polygon ID=1 by using the code chunk below:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nThe output reveals that Polygon ID=1 is Anxiang county.\nReveal the county names of the five neighboring polygons, the code chunk will be used:\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nRetrieve the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nPrinted output above shows that the GDPPC of the five nearest neighbours based on Queen’s method are 20981, 34592, 24473, 21311 and 22879 respectively.\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\nCreating (ROOK) contiguity based neighbours\nThe code chunk below is used to compute Rook contiguity weight matrix.\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connect area unit has 10 neighbours. There are two area units with only one heighbours.\n\n\nVisualising contiguity weights\nGet our longitude values we map the st_centroid function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nDo the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\nCheck the first few observations to see if things are formatted correctly.\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nPlotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\nPlotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\nPlotting both Queen and Rook contiguity based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#computing-distance-based-neighbours",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#computing-distance-based-neighbours",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Computing distance based neighbours",
    "text": "Computing distance based neighbours\n\nDetermine the cut-off distance\ndetermine the upper limit for distance band by using the code below:\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\nComputing fixed distance weight matrix\nCompute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n“Average number of links : 3.681818” is the average connectivity (number of links) for each observation in specified neighborhood distance of 62 units.\nUse str() to display the content of wm_d62 weight matrix.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\nPlotting fixed distance weight matrix\nPlot the distance weight matrix by using the code chunk below\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\nThe red lines show the links of 1st nearest neighbours and the black lines show the links of neighbours within the cut-off distance of 62km.\nAlternatively, we can plot both of them next to each other by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\nComputing adaptive distance weight matrix\nControl the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nSimilarly, we can display the content of the matrix by using str().\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\nNotice that each county has six neighbours, no less no more!\n\nPlotting distance based neighbours\nPlot the weight matrix using the code chunk below.\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#weights-based-on-idw",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#weights-based-on-idw",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Weights based on IDW",
    "text": "Weights based on IDW\nCompute the distances between areas by using nbdists() of spdep.\n\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034\n\n\n\nRow-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe zero.policy=TRUE option allows for lists of non-neighbors. This should be used with caution since the user may not be aware of missing neighbors in their dataset however, a zero.policy of FALSE would return an error.\nSee the weight of the first polygon’s eight neighbors type:\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nEach neighbor is assigned a 0.125 of the total weight. This means that when R computes the average neighboring income values, each neighbor’s income will be multiplied by 0.2 before being tallied.\nUsing the same method, we can also derive a row standardised distance weight matrix by using the code chunk below.\n\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.1.html#application-of-spatial-weight-matrix",
    "href": "Hands-on_Ex2/Hands-on_Ex2.1.html#application-of-spatial-weight-matrix",
    "title": "Hands-on Exercise 2 : Spatial Weights and Applications",
    "section": "Application of Spatial Weight Matrix",
    "text": "Application of Spatial Weight Matrix\n\nSpatial lag with row-standardized weights\nCompute the average neighbor GDPPC value for each polygon. These values are often referred to as spatially lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nRecalled in the previous section, we retrieved the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAppend the spatially lag GDPPC values onto hunan sf data frame by using the code chunk below.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\nThe following table shows the average neighboring income values (stored in the Inc.lag object) for each county.\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nNext, we will plot both the GDPPC and spatial lag GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nSpatial lag as a sum of neighboring values\nWe can calculate spatial lag as a sum of neighboring values by assigning binary weights. This requires us to go back to our neighbors list, then apply a function that will assign binary weights, then we use glist = in the nb2listw function to explicitly assign these weights.\nWe start by applying a function that will assign a value of 1 per each neighbor. This is done with lapply, which we have been using to manipulate the neighbors structure throughout the past notebooks. Basically it applies a function across each value in the neighbors structure\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWith the proper weights assigned, we can use lag.listw to compute a lag variable from our weight and GDPPC.\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\nFirst, let us examine the result by using the code chunk below.\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nNext, we will append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\nNext, we will append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nSpatial window average\nAdd the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\n\nNotice that the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909\nLet us take a good look at the neighbour list of area [1] by using the code chunk below.\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nNotice that now [1] has six neighbours instead of five.\nNow we obtain weights with nb2listw()\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\nLastly, we just need to create the lag variable from our weight structure and GDPPC variable.\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nConvert the lag variable listw object into a data.frame by using as.data.frame().\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nNext, the code chunk below will be used to append lag_window_avg GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_gdppc and w_ave_gdppc maps next to each other for quick comparison.\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nSpatial window sum\nAdd the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nAssign binary weights to the neighbour structure that includes the diagonal element.\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nNotice that now [1] has six neighbours instead of five.\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nWith our new weight structure, we can compute the lag variable with lag.listw().\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nNext, the code chunk below will be used to append w_sum GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nJoining with `by = join_by(NAME_3)`\n\n\nCompare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison.\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#overview",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#overview",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we explore how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#getting-started",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#getting-started",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load spdep, sf, tmap, purrr and tidyverse packages into R environment.\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Getting the Data Into R Environment",
    "text": "Getting the Data Into R Environment\n\nImport shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. \n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nImport csv file into r environment\nImport Hunan_2012.csv into R by using read_csv() of readr package.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPerforming relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. \n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\nVisualising Regional Development Indicator\nPrepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#global-spatial-autocorrelation",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation",
    "text": "Global Spatial Autocorrelation\n\nComputing Contiguity Spatial Weights\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\nRow-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\n\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice.\n\n\n\nGlobal Spatial Autocorrelation: Moran’s I\n\n\nMaron’s I test\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nStatistically significant, P-value 1.095e-06 is less than significance level of 5%.\n\nComputing Monte Carlo Moran’s I\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nStatistically significant, P-value 0.001 is less than significance level of 5%.\n\n\nVisualising Monte Carlo Moran’s I\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\nGlobal Spatial Autocorrelation: Geary’s\n\nGeary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nStatistically significant, P-value 0.001526 is less than significance level of 5%.\n\n\nComputing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nStatistically significant, P-value 0.001 is less than significance level of 5%.\n\n\nVisualising the Monte Carlo Geary’s C\nPlot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#spatial-correlogram",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#spatial-correlogram",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Spatial Correlogram",
    "text": "Spatial Correlogram\n\nCompute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nCompute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#cluster-and-outlier-analysis",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Cluster and Outlier Analysis",
    "text": "Cluster and Outlier Analysis\n\nComputing local Moran’s I\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nThe code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nMapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\nMapping local Moran’s I values\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nMapping local Moran’s I p-values\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#creating-a-lisa-cluster-map",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Creating a LISA Cluster Map",
    "text": "Creating a LISA Cluster Map\n\nPlotting Moran scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nNotice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. This are the high-high locations in the lesson slide.\n\n\nPlotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\nPreparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map.\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, derives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nThis is follow by centering the local Moran’s around the mean.\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif &lt;- 0.05       \n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nLastly, places non-significant Moran in the category 0.\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\nPlotting LISA map\nNow, we can build the LISA map by using the code chunks below.\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Hot Spot and Cold Spot Area Analysis",
    "text": "Hot Spot and Cold Spot Area Analysis\n\nGetis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\nDeriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\nDeriving the centroid\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude = map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\nDetermine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\nComputing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\nThe output spatial weights object is called wm62_lw.\n\n\n\nComputing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2.3.html#computing-gi-statistics",
    "href": "Hands-on_Ex2/Hands-on_Ex2.3.html#computing-gi-statistics",
    "title": "Hands-on Exercise 3 - Local Measures of Spatial Autocorrelation",
    "section": "Computing Gi statistics",
    "text": "Computing Gi statistics\n\nGi statistics using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\nMapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nGi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\nMapping Gi values with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "",
    "text": "In this hands-on exercise, learn how to build an OD matrix."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#overview",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#overview",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "",
    "text": "In this hands-on exercise, learn how to build an OD matrix."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#getting-started",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#getting-started",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below install and load sf and tidyverse packages into R environment.\n\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#preparing-the-flow-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#preparing-the-flow-data",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "Preparing the Flow Data",
    "text": "Preparing the Flow Data\n\nImporting the OD data\nFirstly, we will import the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet use display the odbus tibble data table by using the code chunk below.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"2028…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"2014…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nA quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE) \n\n\n\nExtracting the study data\nFor the purpose of this exercise, we will extract commuting flows on weekday and between 6 and 9 o’clock.\n\nodbus6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_PT_CODE'. You can override using\nthe `.groups` argument.\n\n\n\ndatatable(odbus6_9)\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\n\nWe will save the output in rds format for future used\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\n\nThe code chunk below will be used to import the save odbus6_9.rds into R environment.\n\nodbus6_9 &lt;- read_rds(\"data/rds/odbus6_9.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#working-with-geospatial-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#working-with-geospatial-data",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "Working with Geospatial Data",
    "text": "Working with Geospatial Data\nFor the purpose of this exercise, two geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\nBoth data sets are in ESRI shapefile format.\n\nImporting geospatial data\nTwo geospatial data will be used in this exercise, they are:\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex3\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\zhphyo\\ISSS624\\Hands-on_Ex3\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nmpsz &lt;- write_rds(mpsz, \"data/rds/mpsz.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#geospatial-data-wrangling",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nCombining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame.\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\ndatatable(busstop_mpsz)\n\n\n\n\n\n\nBefore moving to the next step, it is wise to save the output into rds format.\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\nNext, we are going to append the planning subzone code from busstop_mpsz data frame onto odbus6_9 data frame.\n\nod_data &lt;- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nWarning in left_join(odbus6_9, busstop_mpsz, by = c(ORIGIN_PT_CODE = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 25632 of `x` matches multiple rows in `y`.\nℹ Row 673 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\nod_data &lt;- unique(od_data)\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\nNext, we will update od_data data frame cwith the planning subzone codes.\n\nod_data &lt;- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nWarning in left_join(od_data, busstop_mpsz, by = c(DESTIN_BS = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 167 of `x` matches multiple rows in `y`.\nℹ Row 672 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\n\nod_data &lt;- unique(od_data)\n\n\nod_data &lt;- od_data %&gt;%\n  rename(DESTIN_SZ = SUBZONE_C) %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_SZ'. You can override using the\n`.groups` argument.\n\n\nIt is time to save the output into an rds file format.\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\n\n\nod_data &lt;- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3.html#visualising-spatial-interaction",
    "href": "Hands-on_Ex3/Hands-on_Ex3.html#visualising-spatial-interaction",
    "title": "Hands-on Ex3 : Processing Visualising Flow Data",
    "section": "Visualising Spatial Interaction",
    "text": "Visualising Spatial Interaction\nIn this section, you will learn how to prepare a desire line by using stplanr package.\n\nRemoving intra-zonal flows\nWe will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows.\n\nod_data1 &lt;- od_data[od_data$ORIGIN_SZ!=od_data$DESTIN_SZ,]\n\n\n\nCreating desire lines\nIn this code chunk below, od2line() of stplanr package is used to create the desire lines.\n\nflowLine &lt;- od2line(flow = od_data1, \n                    zones = mpsz,\n                    zone_code = \"SUBZONE_C\")\n\nCreating centroids representing desire line start and end points.\n\n\n\n\nVisualising the desire lines\nTo visualise the resulting desire lines, the code chunk below is used.\n\ntmap_options(check.and.fix = TRUE) \n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\n\n\n\n\n\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows, for example flow greater than or equal to 5000 as shown below.\n\ntmap_options(check.and.fix = TRUE) \ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2.html",
    "href": "In-Class_Ex2/In-Class_Ex2.html",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "The code chunk below install and load sf, tmap, sfdep, tidyverse and knitr packages to R environment\n\npacman::p_load(sf, tmap, sfdep, tidyverse, knitr)"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2.html#getting-started",
    "href": "In-Class_Ex2/In-Class_Ex2.html#getting-started",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "The code chunk below install and load sf, tmap, sfdep, tidyverse and knitr packages to R environment\n\npacman::p_load(sf, tmap, sfdep, tidyverse, knitr)"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2.html#the-data",
    "href": "In-Class_Ex2/In-Class_Ex2.html#the-data",
    "title": "In-Class Exercise 2",
    "section": "The Data",
    "text": "The Data\n\nImporting geospatial data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\In-Class_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nImport attribute table\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCombining both data frame by using left join\n\nhunan_GDPPC &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 6, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\nIn order to retain the geospatial properties, the left data frame must the sf data.frame (i.e. hunan)"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2.html#global-measures-of-spatial-association",
    "href": "In-Class_Ex2/In-Class_Ex2.html#global-measures-of-spatial-association",
    "title": "In-Class Exercise 2",
    "section": "Global Measures of Spatial Association",
    "text": "Global Measures of Spatial Association\n\nDeriving continuity weights: Queen’s method\nIn this code chunk below, queen method is used to derive the continuity weights\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, \n                         style=\"W\"),\n         .before = 1)\n\nNotice that st_weights() provides tree arguments, they are\n\nnb: A neighbor list object as created by st_neighbors()\nstyle : Default “W” for row standardized weights. The value can also be “B”, “C”, “U” “minmax” and “S”. B is the basic binary code, W is row standardized (sum over all links to n), C is globally standardized (sums over all links to n). U is euqal to C divided by the number of neighbors (sums over\n\n\n\nComputing local Moran’s I\nhow to compute local Moran’s of GDPPC at country level by using local_moran() of sfdep package\n\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99), \n         .before = 1) %&gt;%\n  unnest(local_moran)"
  },
  {
    "objectID": "In-Class_Ex2/In-Class_Ex2.html#getting-started-1",
    "href": "In-Class_Ex2/In-Class_Ex2.html#getting-started-1",
    "title": "In-Class Exercise 2",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading the R Package\nThe code chunk below install and load sf, tmap, sfdep, tidyverse and plotly packages to R environment\n\npacman::p_load(sf, tmap, sfdep, plotly, tidyverse)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\",                   \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\zhphyo\\ISSS624\\In-Class_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nTimeseries Data\n\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nis_spacetime_cube(GDPPC)\n\n[1] FALSE\n\nGDPPC_st &lt;- spacetime(GDPPC, hunan,                      \n                      .loc_col = \"County\",                     \n                      .time_col = \"Year\")\n\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE\n\n\n\n\nComputing Gi\n\nGDPPC_nb &lt;- GDPPC_st %&gt;%   \n  activate(\"geometry\") %&gt;%   \n  mutate(nb = include_self(st_contiguity(geometry)),          \n         wt = st_inverse_distance(nb, geometry,                                    \n                                  scale = 1,                                    \n                                  alpha = 1),         \n         .before = 1) %&gt;%  \n  set_nbs(\"nb\") %&gt;%   \n  set_wts(\"wt\")\n\n! Polygon provided. Using point on surface.\n\n\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wt = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n\n\n\ngi_stars &lt;-GDPPC_nb %&gt;%   \n  group_by(Year) %&gt;%   \n  mutate(gi_star = local_gstar_perm(     \n    GDPPC,nb,wt)) %&gt;%   \n  tidyr::unnest(gi_star)\n\n\n\nEmerging Hotspot Analysis\n\nlibrary(Kendall)  \nehsa &lt;- emerging_hotspot_analysis(   \n  x= GDPPC_st,    \n  .var = \"GDPPC\",   \n  k = 1,   \n  nsim = 99 )"
  },
  {
    "objectID": "In-class_Ex3/In-Class_Ex3.html",
    "href": "In-class_Ex3/In-Class_Ex3.html",
    "title": "In-Class Ex 3",
    "section": "",
    "text": "The code chunk below install and load R packages into R environment\n\npacman::p_load(tmap, sf, sp, DT, \n               performance, reshape2,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "In-class_Ex3/In-Class_Ex3.html#getting-started",
    "href": "In-class_Ex3/In-Class_Ex3.html#getting-started",
    "title": "In-Class Ex 3",
    "section": "",
    "text": "The code chunk below install and load R packages into R environment\n\npacman::p_load(tmap, sf, sp, DT, \n               performance, reshape2,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "In-class_Ex3/In-Class_Ex3.html#computing-distance-matrix",
    "href": "In-class_Ex3/In-Class_Ex3.html#computing-distance-matrix",
    "title": "In-Class Ex 3",
    "section": "Computing Distance Matrix",
    "text": "Computing Distance Matrix\nImport mpsz.rds into R environemnt by using the code chunk below.\nNote : rds contains all the r objects.\n\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nConverting from sf data.table to SpatialPolygonsDataFrame (sp)\nThere are at least two ways to compute the required distance matrix. One is based on sf and the other is based on sp. Past experience shown that computing distance matrix by using sf function took relatively longer time that sp method especially the data set is large. In view of this, sp method is used in the code chunks below.\nFirst as.Spatial() will be used to convert mpsz from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below.\nmpsz_sp become list. includes mpsz dataframe (under data without geometric column).\nBoth code chunk below works the same.\nmpsz_sp &lt;- mpsz %&gt;% as.Spatial()\n\nmpsz_sp &lt;- as(mpsz, \"Spatial\")\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\n\n\nComputing the distance matrix\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the planning subzones.\nspDists() is recommended for Bigger dataset.\n\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n\n\n\nLabelling column and row heanders of a distance matrix\nFirst, we will create a list sorted according to the the distance matrix by planning sub-zone code.\n\nsz_names &lt;- mpsz$SUBZONE_C\n\nNext we will attach SUBZONE_C to row and column for distance matrix matching ahead\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\n\n\nPivoting distance value by SUBZONE_C\nNext, we will pivot the distance matrix into a long t\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\nNotice that the within zone distance is 0.\n\n\nUpdating intra-zonal distances\nIn this section, we are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nNext, a constant distance value of 50m is added into intra-zones distance.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\nThe code chunk below will be used to check the result data.frame.\n\ndistPair %&gt;%\n  summary()\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nThe code chunk below is used to rename the origin and destination fields\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)\n\nLastly, the code chunk below is used to save the dataframe for future use.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")"
  },
  {
    "objectID": "In-class_Ex3/In-Class_Ex3.html#preparing-flow-data",
    "href": "In-class_Ex3/In-Class_Ex3.html#preparing-flow-data",
    "title": "In-Class Ex 3",
    "section": "Preparing flow data",
    "text": "Preparing flow data\nThe code chunk below is used import od_data save in Chapter 15 into R environment.\n\nod_data &lt;- read_rds(\"data/rds/od_data.rds\")\n\nNext, we will compute the total passenger trip between and within planning subzones by using the code chunk below. The output is all flow_data.\n\nflow_data &lt;- od_data %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\n`summarise()` has grouped output by 'ORIGIN_SZ'. You can override using the\n`.groups` argument.\n\n\n\nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_SZ [1]\n   ORIGIN_SZ DESTIN_SZ TRIPS\n   &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt;\n 1 AMSZ01    AMSZ01     2694\n 2 AMSZ01    AMSZ02    10591\n 3 AMSZ01    AMSZ03    14980\n 4 AMSZ01    AMSZ04     3106\n 5 AMSZ01    AMSZ05     7734\n 6 AMSZ01    AMSZ06     2306\n 7 AMSZ01    AMSZ07     1824\n 8 AMSZ01    AMSZ08     2734\n 9 AMSZ01    AMSZ09     2300\n10 AMSZ01    AMSZ10      164\n\n\n\nSeparating intra-flow from passenger volume\nCode chunk below is used to add three new fields in flow_data dataframe.\n\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\n\n\nCombining passenger volume data with distance value\nBefore we can join flow_data and distPair, we need to convert data value type of ORIGIN_SZ and DESTIN_SZ fields of flow_data dataframe into factor data type.\n\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\nNow, left_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\n\nflow_data1 &lt;- flow_data %&gt;%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))"
  },
  {
    "objectID": "In-class_Ex3/In-Class_Ex3.html#preparing-origin-and-destination-attributes",
    "href": "In-class_Ex3/In-Class_Ex3.html#preparing-origin-and-destination-attributes",
    "title": "In-Class Ex 3",
    "section": "Preparing Origin and Destination Attributes",
    "text": "Preparing Origin and Destination Attributes\n\nImporting population data\n\npop &lt;- read_csv(\"data/aspatial/pop.csv\")\n\nRows: 332 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): PA, SZ\ndbl (3): AGE7_12, AGE13_24, AGE25_64\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nGeospatial data wrangling\njust wanna have zone code. Reference is non-spatial, mpsz is spatial\n\npop &lt;- pop %&gt;%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %&gt;%\n  select(1:6) %&gt;%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\n\n\n\nPreparing origin attribute\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %&gt;%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\n\n\nPreparing destination attribute\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %&gt;%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\nWe will called the output data file SIM_data. it is in rds data file format.\n\nwrite_rds(flow_data1, \"data/rds/SIM_data\")"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/entertn.html",
    "href": "In-class_Ex4/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/FinServ.html",
    "href": "In-class_Ex4/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/Retails.html",
    "href": "In-class_Ex4/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Business.html",
    "href": "In-class_Ex5/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/F&B.html",
    "href": "In-class_Ex5/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Retails.html",
    "href": "In-class_Ex5/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Applications!\nIn this webpage, I am going to share with you my learning journey of geospatial analytics."
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Business.html",
    "href": "Take-home_Ex2/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/F&B.html",
    "href": "Take-home_Ex2/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "href": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Retails.html",
    "href": "Take-home_Ex2/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  }
]